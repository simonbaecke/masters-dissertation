{
  "Uuid": "571a5005-0d16-4446-86f0-570129bd752b",
  "IsCustomNode": false,
  "Description": "",
  "Name": "dynamo script final",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "Line": {
        "Key": "Autodesk.DesignScript.Geometry.Line",
        "Value": "ProtoGeometry.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "PolyCurve": {
        "Key": "Autodesk.DesignScript.Geometry.PolyCurve",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "732182c5c6354b13a1164c2bc6f4db64",
      "Name": "Green Roof Material",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "4d6ea5a7244d47d99862df1e0eb59980",
      "Name": "Select roofs",
      "Type": "hostSelection",
      "Value": "0b4d8d6b-10eb-4ca2-aa66-d72332361515-000ab7b2,86ea9aaf-64e8-446d-bcb9-a764602085c0-000ab882",
      "Description": "Select multiple elements from the Revit document.",
      "SelectedIndex": 0
    },
    {
      "Id": "c851868f92e3430b939937d85ac108f4",
      "Name": "Select greenroofs",
      "Type": "hostSelection",
      "Value": "724da799-2d6c-40f7-9f0b-b22d990d2a39-000ab91c",
      "Description": "Select multiple elements from the Revit document.",
      "SelectedIndex": 0
    },
    {
      "Id": "1d75eece63054a7c9d59401a2729604d",
      "Name": "Are all the roofs modelled as a roof?",
      "Type": "boolean",
      "Value": "true",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "31cfc9450d964b3f82ce559f100b8d10",
      "Name": "Select greenroofs",
      "Type": "hostSelection",
      "Value": "0b4d8d6b-10eb-4ca2-aa66-d72332361515-000ab7b2,86ea9aaf-64e8-446d-bcb9-a764602085c0-000ab882",
      "Description": "Select multiple elements from the Revit document.",
      "SelectedIndex": 0
    },
    {
      "Id": "4fa6bd7a39b04958b69450b61dc68c95",
      "Name": "Are all the toposurfaces modelled as toposurfaces?",
      "Type": "boolean",
      "Value": "true",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "7792138d16e740a38f84c508143bf97d",
      "Name": "File name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "b556f2cfeefb42b1b487a0e6882b750e",
      "Name": "File path",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "d9c445610fd141758b8a7e229a1bc4d7",
      "Name": "Material Name",
      "Type": "string",
      "Value": "",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.SiteLocation, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "577fc7717f3b44d29ec4596a523c595d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a35b98458d984b07adcef326eb799e84",
          "Name": "Location",
          "Description": "The location of the current Revit project.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Returns the current Revit site location."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DynamoUnits.Location.Name",
      "Id": "fe6e75b7adbe42009b1faeca30858b9e",
      "Inputs": [
        {
          "Id": "830ce0549041475cb1275fa00aa10cd1",
          "Name": "location",
          "Description": "DynamoUnits.Location",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c053ecdb2e14da0b745ecff04d226cc",
          "Name": "string",
          "Description": "Name of location",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the name value from a location\n\nLocation.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Projected Area\";",
      "Id": "390297c8de9041b08907be67c477093a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "95cb9fa312a74f7596fa2afb579a788d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Material\";",
      "Id": "ae8ec57818c84b94a9d3d2b64aff03a8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3d180250a1d24845ac6e4cf6f037da2d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "11ac8fb7a2944d17a278df564d6de1c8",
      "Inputs": [
        {
          "Id": "761b21aa21264041803b632f0cf3741a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "500a45b754c94a0ba8197417864da8dd",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9abec83a272c4142a4a0f7c2aec491bf",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Id": "0d6e5b1d515e4754ad84d045c712a222",
      "Inputs": [
        {
          "Id": "32607085369e44e3b4d2f930c2d547aa",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83cf843257494ed1818b997a60af6782",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "cddfd8fab81046b898e8238f52c24871",
      "Inputs": [
        {
          "Id": "9b36ac0dac1946c6b030bb5235894a79",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f70e646a70842ed9d08702d2600be70",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d6572db1038402ca6d6050ad2cae032",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c16ae1c76d654b468269097b5fb48ca0",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "44ebe3e859c945d082ac310733460747",
      "Inputs": [
        {
          "Id": "caefbfcae75c4ecb86e35fcd95ae6484",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "36153449cb8d46b8889d395e6181c0f2",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e0af85c7772492285e7ed159599cd1e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ef2aa6b30834ab4a7df283133592114",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 500,
      "SelectedString": "OST_Roofs",
      "NodeType": "ExtensionNode",
      "Id": "c6d15c482e024abe9c25892dd5c88a2a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5a2d4e7724774d039fa2f440aad49014",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "074443f980a946579a49c7bb9032874f",
      "Inputs": [
        {
          "Id": "c97e1bb5e73f42df97dc2af871c3a020",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4eb8794f2ac44fef8cb9a9127935699e",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "c25c284d6a0e43bc84f6f00dec305491",
      "Inputs": [
        {
          "Id": "5c64d5b793f647d0998ca9cf1969f9a4",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c94c9201389451f8a4a09db82241a48",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "9c2d2226996d4c629dbe86d3fad39fb0",
      "Inputs": [
        {
          "Id": "dab032f312434f519a7520ae220eb66d",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a902094852d94cac9304183af5a5de45",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "370b0df261ef4fe291d642bca208c413",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3797ea0ec1f64b75b7a5f119a1db96e3",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "00c0a093841f4c679a14fe4a22571519",
      "Inputs": [
        {
          "Id": "303ccb39b3bd465483a8937eb647734b",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "962020accdf54033b28762fa445c25d7",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23c03572e4394e75a4474233d25e9276",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a62758ffa23495f8f5ef3e663f019ef",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "a96c24eb62d541d5844715b45076abdf",
      "Inputs": [
        {
          "Id": "cacb6e5dcb184acf8ec04d7f6660a8c0",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccd59174a5624eb1a089ff7e780a0df2",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 500,
      "SelectedString": "OST_Roofs",
      "NodeType": "ExtensionNode",
      "Id": "ab368bf2b158435bad3f8c695ef2a0bd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3e5c6e6c187944faad5c759d7da56cf1",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "732182c5c6354b13a1164c2bc6f4db64",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b06a12748ea147c0b734f6d3a17c7dbb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "a220189d39ca4093b5b068a0b886e907",
      "Inputs": [
        {
          "Id": "7f3a2835e16142c491f59d0317fd69a2",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48e46ea3eddf4471aef6ad64a1b8fff7",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb47131b224d4d3c827f413484c3d29d",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "640fee962bed48e39e3668e040bfe1d3",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "8c66e16b355a499487ead985e33886d2",
      "Inputs": [
        {
          "Id": "9abc73932ef84c2aaecdbff5d445abfd",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33dd9ca8648d4ac0931e27b0009a0dd0",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d42ccdfa42a94a118ae764b6f8b3945e",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "976f48577f72446da15a89d2dfdd4c37",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Id": "e06bd17e87714e4f8a91781e916a5077",
      "Inputs": [
        {
          "Id": "b72c2320485b4fa6871451bdad1088ff",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9245dd4155c0498489d97d21b35b4734",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetMaterials@bool",
      "Id": "42e1e616e1ec426f8ff38ca672af03bc",
      "Inputs": [
        {
          "Id": "a015278f887846b794498763a0e7d53a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "580826475add49a9bdcdd27dcd32f24d",
          "Name": "paintMaterials",
          "Description": "Paint Materials\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42f3a70c0a1342368bd85cd4f67524bd",
          "Name": "Material[]",
          "Description": "List of Names",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Material Names from a Revit Element\n\nElement.GetMaterials (paintMaterials: bool = false): Material[]"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "0b4d8d6b-10eb-4ca2-aa66-d72332361515-000ab7b2",
        "86ea9aaf-64e8-446d-bcb9-a764602085c0-000ab882"
      ],
      "Id": "4d6ea5a7244d47d99862df1e0eb59980",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d4580c4db6ee4813ac6029951b36b909",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "724da799-2d6c-40f7-9f0b-b22d990d2a39-000ab91c"
      ],
      "Id": "c851868f92e3430b939937d85ac108f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f78c60468d024409bc3fbc2e23266333",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "1d75eece63054a7c9d59401a2729604d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3068c860fcdd4dd8b1339793f39ba406",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "37615ada918c44caa06a520bd7f683fc",
      "Inputs": [
        {
          "Id": "5338c31e7c1246bdb8c73f5ec3910f7b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c14bd193648b44389d522cb6146b2d4f",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b25f93aa60814748a3ecad25f589749c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "52fa2ea186f2439d9178ef1c20b476e5",
      "Inputs": [
        {
          "Id": "367491811eee4061b61638ce51933a82",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "955143065b544a668389706d90ddd77b",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double",
      "Id": "9fcc8d7bd54348119049f6e99e9e5c56",
      "Inputs": [
        {
          "Id": "a21c3643d4c14b0b89d7338dbe5d61a4",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b8f78938b0c4679b80193558765f686",
          "Name": "thickness",
          "Description": "Amount to thicken\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "527fc5c34edd4071b6e150dbb8707ea8",
          "Name": "Solid",
          "Description": "Thickened surface as solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals on both sides of the Surface.\n\nSurface.Thicken (thickness: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "c061910be7864df396cc4966b2096113",
      "Inputs": [
        {
          "Id": "51de0cfaaf8a45148335da3a8d3e36dd",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed097fe5ba96402380e98f199ce57146",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "ddb4144da4b744aab88196f9c4833590",
      "Inputs": [
        {
          "Id": "db2c687553f34e10812dfe153f7d250d",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d14145cc717d48d797798560f27453f0",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccbfcd1cd4734012bc183699bb42b642",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "f77a1870d2ed47398dd3a7f64b5b8294",
      "Inputs": [
        {
          "Id": "5d9cb8257db64dba9254f516818e9051",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "060a72ae56034c28867eefdfd56a6098",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dab7d9a6080d425889a3291c235b2d5d",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bae6da1b61fa412aaff3f94d298ca742",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Not@var[]..[]",
      "Id": "727e6fa8ea4f4ab2a6fdbebf34c00924",
      "Inputs": [
        {
          "Id": "25459d51d20e463591c1fe63e165c2a1",
          "Name": "x",
          "Description": "boolean to reverse.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a77ad616e6684a3e8175e384d9f13428",
          "Name": "bool",
          "Description": "type var[]..[] (reversed boolean)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Negates the input, e.g. returns false when the input is true.\n\nNot (x: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "93342e50b1f243baafa797c567e1c359",
      "Inputs": [
        {
          "Id": "b3089512c4ba41bfae571322de0f81c8",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "53119d24deeb41899b8e68ba81a6f3e9",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "9b203f0b9d4d42e89f086fceae32f69b",
      "Inputs": [
        {
          "Id": "00a912d1c0ae438db9bb54f2bb244f4b",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3c65549362d4330908ed62f3c71d62c",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3ba27b7461c445a944858ffdcb4d1e0",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "f5f079e894064b4594cfeb449c24de5e",
      "Inputs": [
        {
          "Id": "d53d0028006943b39404e7373a8c27ac",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4896ab553b734d44873f3187d1914fc4",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadius@Autodesk.DesignScript.Geometry.Point,double",
      "Id": "05865a3e1f7a46259d7b60537a4229de",
      "Inputs": [
        {
          "Id": "b4d51169ac8243079030935e2ce74a18",
          "Name": "centerPoint",
          "Description": "Center point of circle\n\nPoint\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "68b0f502342845068716932cde5c1ff5",
          "Name": "radius",
          "Description": "Radius\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9be7d01dfe4844dcaf8a6f79753ba8b3",
          "Name": "Circle",
          "Description": "Circle created with center point and radius",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a Circle with input center Point and radius in the world XY plane, with world Z as normal.\n\nCircle.ByCenterPointRadius (centerPoint: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), radius: double = 1): Circle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "bf5c91a808184a3586fa5f65f7c6349e",
      "Inputs": [
        {
          "Id": "1343179f4ae14e76b5a509720dfbc4b5",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89b8dd65da6f4a3a8688d5475b7fd2df",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "900000;",
      "Id": "62db45206d894db0897cd094f8913d6e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2eff2fa25df34da1ada4b31e54e996b0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "f0c0d8ea8732486dbc1efa60a751ee75",
      "Inputs": [
        {
          "Id": "2a02c08c6255453da54e5f023bce8ec2",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4f04b9791604919897cb44cce1ed8de",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "f604130a3ce94950b5565d5dcd07b9f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "80dbf14f4133433eb237c442abbd18a4",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "c50afffd08274ac6a7b0137a273fff12",
      "Inputs": [
        {
          "Id": "8e80badd1a2c44d09357c293657cea22",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f68faa4516d747d3b47b369634dfd9b2",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Origin",
      "Id": "7ddfe0f8969940b18cddfa818b2f9406",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f187eb27bb454ae8b5a09efbcb156469",
          "Name": "Point",
          "Description": "Origin point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Origin point (0,0,0)\n\nPoint.Origin ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Topology.Faces",
      "Id": "0cc76d11bbcd4811921afd078db5cc32",
      "Inputs": [
        {
          "Id": "6ed5461272b94febaebea3aa620fe9c9",
          "Name": "topology",
          "Description": "Autodesk.DesignScript.Geometry.Topology",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bd6340ff5074594a0ca757787cfd791",
          "Name": "Face[]",
          "Description": "Face[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Faces of the Topology\n\nTopology.Faces: Face[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c168a62a51c2426e81ad1d785b83a3c2",
      "Inputs": [
        {
          "Id": "0d6306a3b80842a1afd4422d7573d10f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea7e29478bb74a70b4d300596e53aab3",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b63ae06f94bc46e3901d8e53754c1b26",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Face.Edges",
      "Id": "3ab9e4af6c2e47f9b022d3177ac0606e",
      "Inputs": [
        {
          "Id": "2dfdd72632c04a489ca10db833f085e1",
          "Name": "face",
          "Description": "Autodesk.DesignScript.Geometry.Face",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ac48c2afcc841c3a4d02398dd06766a",
          "Name": "Edge[]",
          "Description": "Edge[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "All of the Edges around this Face in counterclockwise order\n\nFace.Edges: Edge[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Edge.CurveGeometry",
      "Id": "92951b6843d24d5aac53d8afbc34975e",
      "Inputs": [
        {
          "Id": "8405b764bf394fb3991db34c9ed38eef",
          "Name": "edge",
          "Description": "Autodesk.DesignScript.Geometry.Edge",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45e010cc05304b86bad9b17244dfab44",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The underlying Curve making up the Edge\n\nEdge.CurveGeometry: Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ProjectInputOnto@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "877ec652ad25452abce4801280cdfaef",
      "Inputs": [
        {
          "Id": "5e95b850b97143f2b93f85b79e16403b",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f06b9a91ab7d4a2f95c53b241dd96fcf",
          "Name": "geometryToProject",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9903eec9911c43bba1f3af3b57339626",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "511e2f47a9744b9b88df67b21803e974",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Projects the input Geometry onto this Surface in the input Vector direction. !!This projection method currently supports only points or curves!!\n\nSurface.ProjectInputOnto (geometryToProject: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1e244f6fece94e469c194b451c7fb3c7",
      "Inputs": [
        {
          "Id": "1fac7bd8dac142ee93a26f4f32062adc",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83c7a2daf1f34ae8bb9d20b921baa6eb",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d165cf989d14d36863dc0028bd6709a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "57fce4604caa42d6a5d8134743337378",
      "Inputs": [
        {
          "Id": "dca2d87c451246e7811628e7e42a1f46",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "086707370afa46c68dbfc595ef8d54c9",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d182b1848c24c28891252ecbd0bee02",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "4c7d42e6b984420fbed5411a8c90d6de",
      "Inputs": [
        {
          "Id": "677ff6ed70b6420cbb97b3c4d724c2da",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b48691c7e42741379fcc6fbb5875bd60",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7496e07456bf489db5e8a1da04bd78b2",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "fc0cb06d6fcf4a95b6915733887a94a8",
      "Inputs": [
        {
          "Id": "77616af6065e46f0ad4765c7da474420",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d36f17e8de974805b4148498ee9849fb",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "a225eabde5d04f22ae475b53917b4f6e",
      "Inputs": [
        {
          "Id": "9a92851edc2e49c9947c58b03e19b9ab",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0949804445084f07999a9490ddca97e7",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6eda63907625457fa6f019b8190cde95",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "37f78455dc49438fa74a5d573c35843d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d86e87555194f13acc3769981da5443",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Id": "e7476bde8e3c48cb8a901a908aa9353c",
      "Inputs": [
        {
          "Id": "a53a7fe684a54c8fa2ed25a949dcccba",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66c7d490fc5d4dba9527dfef77ed8d19",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "8cf0cfbc63a7476fac3817939367357c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a26c499eca534368a32a82cb8f8f1ceb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "63877fd57d8e4293866c37f8c72c3899",
      "Inputs": [
        {
          "Id": "710c4ecd1d8a4b6984b952f1a1c0acfc",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "044da96cd7fb41a1aab93b594a262109",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9036c79a19a54d50853ccdffa870de62",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "698e90cfc49444b7a9846cf4bbb7e914",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f17b345fbfae4fb193986ae786fb91fd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "2b33c828786048fc9aff14186ac8757f",
      "Inputs": [
        {
          "Id": "2515b705e5374e0ca2490766832d7ac5",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd6f412effa24e2887374ae1c18f8d87",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "f92c6eb0f2db46b89ae2495bba4fc9f2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0de3c7b214fa4bbb8c369d71069cb57c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"<By Category>\";",
      "Id": "1a4865e1db1147f6aafeb76f699aed58",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1f2678222ce54757896261862fa480ec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Lists.Lists.RemoveItem@var[],var",
      "Id": "7f4c4582ec1b4921b82e5e07333469f3",
      "Inputs": [
        {
          "Id": "d019f2aeca5d4dd6b6c91b761df9fba1",
          "Name": "list",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da770514d5bc41799050861baf919f8e",
          "Name": "item",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65e90c3ba44e447ab729a2a6c398d4f3",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Lists.RemoveItem (list: var[], item: var): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "6e36dac0-5ae0-4ffd-86fa-66044e61bf7e",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "326e5aec0aff4f7f80b4e127e8ff9d67",
      "Inputs": [
        {
          "Id": "e10f6bef0c1b42d39d6d756292f1ee70",
          "Name": "docOrRevitLinkInstance",
          "Description": " Use only if you want to query a linked model\n\nvar[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e17e35b9d2834845bac39c73bcdef477",
          "Name": "UnitSystem",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "408abf0adbb443a3be5b7116ee377afc",
          "Name": "Time",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e00d337a12c44ac39801d22897e2230b",
          "Name": "Speed",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4486dd81397d41c5a96525a4ed63c6fe",
          "Name": "Currency",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84363ff655774ac4afa79355d1e20844",
          "Name": "Volume",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72a351d2ecf7434289ba808bda0eb7f1",
          "Name": "Slope",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1bcb0b7214d4be2a24940c7df815529",
          "Name": "MassDensity",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f7b035bb58341a288009b54a9ddbfd2",
          "Name": "Length",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f05c67755c9496f9ff853b176fcc4ac",
          "Name": "Area",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6fab1bb25514c9da77025a0dc7c6acf",
          "Name": "Angle",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": ""
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "51c6902a5f5448b4ac6f9c48c9e7ec9d",
      "Inputs": [
        {
          "Id": "127caaa67f8d40a281c93b4b4eafc2b9",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8887969e61e34ac7b2ac572fb38e65b1",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5b9929870144f1c9556991c41fe0432",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "9f4d291967f14119a47a9cbeef5a512c",
      "Inputs": [
        {
          "Id": "8c9e694b3c9d4cccbd5b6cedd692ece0",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3630b9e5bf14754a430329e6efc4d95",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "220655bb3e3d4d7f82f732e5d69fe6cd",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "540bf3b3aee241fd814b80ab75874e4f",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "6f0d3ad6c703430bb352bbf08813dcad",
      "Inputs": [
        {
          "Id": "cec73d9b06794d3e95b62f6cabea323f",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8281de4c5b094c68b1364cdc9a902592",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eacaf9da3c8e4170b3fb80efa115fb01",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "8906c94eac484024b235eea07f4ba6ba",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "43b7d63c8c74405896a6783646d238c7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "bd01f647d11843e5b950d0e0cef46bf1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ba80c066f3a5476391c3335d77d7221c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "3e401b0ccab141a2a614368d957ac84d",
      "Inputs": [
        {
          "Id": "27962c48859443809d7a5e798f07092a",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2fbb1bd64a6411a8429642b48405129",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "062a9e632d2b4b9795c58c5caf16cdba",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "29258f7379584aef8fbae0db90532406",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "adcb1be536bf4343a42d0d47d637e175",
      "Inputs": [
        {
          "Id": "0e6774e250b8439a80fcce1b3665598e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51751199751c4e3da2a545459d795472",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2990c8367ed46dab868a78b33c0f724",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "85b8a14f57f2415589e45e8defd44d10",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "811f638a75c543f39c6da440f3f73a3c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Id": "661a5b0d37614a998797b0cde3cd84d7",
      "Inputs": [
        {
          "Id": "9f477614f04d420ea3c6fffdaf47d7f1",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0922573605e487d9b219785e5ee97e7",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "c1c386865a1841ca8fe8655342708ac2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1e896956656d4ca7b440a4403a2013b8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "2a1992b98e8c410bad7644dac7d5f593",
      "Inputs": [
        {
          "Id": "033bb652e690495886df98125b7f0ea4",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10e273ad06fe4a87a4a445fbce195952",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "acf5d88d92424303966df393595d862b",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "019576fed2524788ab7bccbaa3221a62",
      "Inputs": [
        {
          "Id": "fc1fc2aff9d64ad2beb4e645bf439932",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f94d272537f4901a3aef6f75289c6d5",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000000;",
      "Id": "fc9466c6fe1e421bb70cf12a2fbeecf1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a0f81674c6e443a483bcc568dc3799dc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "08a194cdb23b441689e94c3d4f832aec",
      "Inputs": [
        {
          "Id": "d9f72ffd5c064017ae592e26d079e0b5",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1a77f907a8b4337a62c71ea285c7ff2",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d07427873b2b47a6aa58178754e7a1f8",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "9dd5842541ff4358b6287c19ff8f6b10",
      "Inputs": [
        {
          "Id": "bb2ed35f412a4fb5ae9e68c7a5ab6597",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0440ffc733a4e02b05e974e6d34ebc8",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4113dd08e8a04da7afe2cd989f23af44",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e603826c569640d7bf295926c7f1a4f8",
      "Inputs": [
        {
          "Id": "843b85a2ccc64c4b9755de3d9019e6df",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbddb629ab93430f8a49358d7d569942",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73532339bd42463fbd30f914031c1e27",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ProjectInputOnto@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "6c99e2fcc0134561a51f2beffae2ee2a",
      "Inputs": [
        {
          "Id": "e3752291c15842e4afa36509b3e04c5b",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "180ef7e89d2443619e1d835b3cf36448",
          "Name": "geometryToProject",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a178419620c4cd3a1e277980798b7b6",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d447d1c0831b4cb5af9fc0ba52cd4d93",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Projects the input Geometry onto this Surface in the input Vector direction. !!This projection method currently supports only points or curves!!\n\nSurface.ProjectInputOnto (geometryToProject: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Edge.CurveGeometry",
      "Id": "2dc0f1bba9b54aa7b5583dc4c5f44c76",
      "Inputs": [
        {
          "Id": "0b0cafaf61c84bfa9d7d084f00f03f38",
          "Name": "edge",
          "Description": "Autodesk.DesignScript.Geometry.Edge",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03371846004646d196a928f39560347e",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The underlying Curve making up the Edge\n\nEdge.CurveGeometry: Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Face.Edges",
      "Id": "fca19d7d2a7040df9a3fb65ed6d16b7a",
      "Inputs": [
        {
          "Id": "2bf8c2cfebad4215a4a5fbf65390b094",
          "Name": "face",
          "Description": "Autodesk.DesignScript.Geometry.Face",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3161ae7862454bf0b2705dc16b4005e1",
          "Name": "Edge[]",
          "Description": "Edge[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "All of the Edges around this Face in counterclockwise order\n\nFace.Edges: Edge[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8c950a85ca454c19b03b8dd974ebc7a7",
      "Inputs": [
        {
          "Id": "da9da67ce66941bb9ea9be52db713f01",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c18d45ab5894d94bde2e25ac32f3d5c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7f8650d2a4347afa3e5420fdb6edf89",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Topology.Faces",
      "Id": "96b89b74802e46579ec74c576312b6d8",
      "Inputs": [
        {
          "Id": "242056b8aac94464a0d6bf400025e470",
          "Name": "topology",
          "Description": "Autodesk.DesignScript.Geometry.Topology",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30f890dae5144d5ebb178c49efa91301",
          "Name": "Face[]",
          "Description": "Face[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Faces of the Topology\n\nTopology.Faces: Face[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Origin",
      "Id": "7f152e36175e490c897f50ee345cc90b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "beda1480798744a18024a75a1bf7db8c",
          "Name": "Point",
          "Description": "Origin point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Origin point (0,0,0)\n\nPoint.Origin ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "072e0ec17a784e05b9d91e100c1e65aa",
      "Inputs": [
        {
          "Id": "e9c58e31146144eda0c0d7174d0daeb8",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc22eddae9b54163ac276a49185903d7",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "23680fe84c9441d5b46446687a561f2a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6d1a3a5c322e40b5be783f32184dccc5",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "3e67ba69ca2b4f1bb4e5eb658af6e31a",
      "Inputs": [
        {
          "Id": "ac349d26858541bda446b36293c0fea2",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96e2abc18ae64edf8c6d691caef47b90",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "400000;",
      "Id": "3e73646d01e34cfeafe7d9e6fc400543",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b3b8bec690c14bac899039aeaf97df2f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "5938bcf5d50e4b18b5f6a79c9bedb5dc",
      "Inputs": [
        {
          "Id": "07c116a1a69d4c60b2fc1f0ed98ea691",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a60338e6b4248e79e994e5d78bb7944",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadius@Autodesk.DesignScript.Geometry.Point,double",
      "Id": "30e5edca58a54c78834a120e89edadb7",
      "Inputs": [
        {
          "Id": "acc76d5d09c84269ae1a55ca2574ede3",
          "Name": "centerPoint",
          "Description": "Center point of circle\n\nPoint\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e23983dadfff42a4a0eb170a43e3f810",
          "Name": "radius",
          "Description": "Radius\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eeac6b78094c496dbacb0294244e7ad8",
          "Name": "Circle",
          "Description": "Circle created with center point and radius",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a Circle with input center Point and radius in the world XY plane, with world Z as normal.\n\nCircle.ByCenterPointRadius (centerPoint: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), radius: double = 1): Circle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "3ac77267c0ef436fa29547f245354d8b",
      "Inputs": [
        {
          "Id": "4e18a349034d4f0eb80f0d6ed0ef84c9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e36db0ea4f74e4794600a973c4bf612",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "540c2fae0c4042da9a9a22eef03ebace",
      "Inputs": [
        {
          "Id": "9593ba775c844785b90e1a387d23478c",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23868f177b764fa396d074572f852bfb",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7a2073f55c44b80874250a752587827",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "96c97ce7a10e4325b7ffb18c83f55b61",
      "Inputs": [
        {
          "Id": "c897e72c1d4742d6a681947068375002",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdfdaca936ee469d8bf98cdd421dbb15",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Not@var[]..[]",
      "Id": "f73a2c05382b4399aef1a4c9ccf15c31",
      "Inputs": [
        {
          "Id": "25d034fc344a45c9bc6a92c9357d60dd",
          "Name": "x",
          "Description": "boolean to reverse.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6f844a3eb8f4b9cb8d9077ffb704fc4",
          "Name": "bool",
          "Description": "type var[]..[] (reversed boolean)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Negates the input, e.g. returns false when the input is true.\n\nNot (x: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "409278a1efa14d588acd031da72378d1",
      "Inputs": [
        {
          "Id": "4a260cd831f84f218d009c627b1f455d",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d642421c82c4b308c00a5f877b462e8",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f84fa9b57c754bc1b163a91d387e3cb7",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd036ab25de649c086742fd9d4913645",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "b8b2e3225af1491baeb5f2c7d4b30f48",
      "Inputs": [
        {
          "Id": "064e093a26e54862a5a7f74561b4e113",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32552ee2feac46fcaea70787892193be",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f8dee14a0184b84896925421632656a",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "0d83989bc5a5403fb68c941ca662a0bc",
      "Inputs": [
        {
          "Id": "b21eb1f07c674b17891bea6fd55f5af6",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6f2929fa05c473795681ff3a901c7fc",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double",
      "Id": "e982599733844b799fee81da3b7b0387",
      "Inputs": [
        {
          "Id": "b734f500961e49af9e0ddd6558e9fa52",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7af18075a4ba4773929783647ec68310",
          "Name": "thickness",
          "Description": "Amount to thicken\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb773aa0fae04293ba53503f2fe943c1",
          "Name": "Solid",
          "Description": "Thickened surface as solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals on both sides of the Surface.\n\nSurface.Thicken (thickness: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "2ae6d413f3344e87bb03dfa069e858d9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "588cfc7ddbb94bb1ad6f310361335a98",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "4571206333e449f18c2ec55b5c2da784",
      "Inputs": [
        {
          "Id": "95af1ac93bf249c1a3d1504dadaa69b3",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ed20201be564a8b87844bb8a56f7bf9",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "45a435e2b00440ce8aa06ce45791b0b5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8cd9dad95d184958922db4e84be62c86",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "da41e70d8e774f9cad97a44c765cf5fe",
      "Inputs": [
        {
          "Id": "523c8c37089e419ca5679046b2a56903",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20366b6df1a844999bedb4408dd6616b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d73592b8e23c4816b368b70de8efb462",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "334589b8601f4966bd0d3358383126eb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "635dcbb84bd148afb9fc41ae8fdf48c4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Id": "7b339ae99d8d406fa1a8e7069a89591a",
      "Inputs": [
        {
          "Id": "7059c4a572c640d5a466132f0d9540a0",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b68429dc2a5d4f0f80034f09c1b7b123",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "07140f14e453448b9e2a0b95fdda0d74",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f2a1004471d543ac969d30b012fa5826",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "26262e7627ae48bfa0a12e4642cfe2eb",
      "Inputs": [
        {
          "Id": "fa809690532d41659ee6808227f2a3e0",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91b48b8bdd7e4bd2843146f27fe4aab9",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf739b4c52f94246bb86353d05807c78",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "29bc5b4fb7a0485bb7ef7757eaa4f865",
      "Inputs": [
        {
          "Id": "cc9b4020feab4992b4823d381a40f856",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "058390b1101940b2b38d250d511efc35",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "bda02a427ea44ec9856f3e8f9d54e410",
      "Inputs": [
        {
          "Id": "d9c8b8c556d64e05969a1ce3560445b1",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c0aef380d8d45bbb79aead3af6a5d11",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b187180c159346468d0c63146c0aed53",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "cf674fb1daac44bcae1cef79a1ef8d31",
      "Inputs": [
        {
          "Id": "9876a81da2c54c688068c8d763e8c7f4",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9793ae13390a49e08510712483bbb33d",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59b1d409dec44db19be7f3348041e57c",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9667b68e219c441e96ccd2217ab0892c",
      "Inputs": [
        {
          "Id": "eeb459f8004f48b4a9e2681694423cd2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05c4b29c07354d5d9373e1c9b26b7223",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57d8526543f64c1f92a0b90f87837397",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ProjectInputOnto@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "abb2ae2044cd447e979a0b0b23544146",
      "Inputs": [
        {
          "Id": "01bef28ca04d4f2e9bf628a1a43ee515",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d5c079ab3a3e4c3387afea897f0b6bd6",
          "Name": "geometryToProject",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b05781eca4af439baf8d4fc166f91c20",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98265d645038440999f0458166153208",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Projects the input Geometry onto this Surface in the input Vector direction. !!This projection method currently supports only points or curves!!\n\nSurface.ProjectInputOnto (geometryToProject: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Edge.CurveGeometry",
      "Id": "0c194da623e04c25a14677fd5e9d7526",
      "Inputs": [
        {
          "Id": "2692ff2533cc4a5e91bb9d4101f4cbec",
          "Name": "edge",
          "Description": "Autodesk.DesignScript.Geometry.Edge",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f366e60ece444f9bb8f7ae967e9c03c7",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The underlying Curve making up the Edge\n\nEdge.CurveGeometry: Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Face.Edges",
      "Id": "97bd024c07d447ca98c26dbc3429a5ad",
      "Inputs": [
        {
          "Id": "909edf97c11a46a0be2627cad47011e7",
          "Name": "face",
          "Description": "Autodesk.DesignScript.Geometry.Face",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cd4526628d845f49c11fd6fd47f6043",
          "Name": "Edge[]",
          "Description": "Edge[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "All of the Edges around this Face in counterclockwise order\n\nFace.Edges: Edge[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "675c12ae8edc41e3bb9d306616d9497a",
      "Inputs": [
        {
          "Id": "5d3e0732dd2c472bb484d3f8e3358206",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8df4333cb1e9422e923db254aacf96b4",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9474c6d709494dcd94fd9c9c524c08b5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Topology.Faces",
      "Id": "9bf042e302bb4bfbaad798c1a2219cd3",
      "Inputs": [
        {
          "Id": "3637001223f040e7b9ecb58937a2ee35",
          "Name": "topology",
          "Description": "Autodesk.DesignScript.Geometry.Topology",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2aba7b5366ae4a0b80556daf3f53cf9d",
          "Name": "Face[]",
          "Description": "Face[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Faces of the Topology\n\nTopology.Faces: Face[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Origin",
      "Id": "f2b24b5c3a774390831f177e4ead21b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "357567d0d83a4eb883435b0d96816623",
          "Name": "Point",
          "Description": "Origin point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Origin point (0,0,0)\n\nPoint.Origin ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "3ac43c44d9fa4bf4bc71becdbc0e160c",
      "Inputs": [
        {
          "Id": "cb51a87c65ca4a9183642a0b8cd0dfec",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8541f98d6064aef82518324dd99a27a",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "577168b365d741e082952fbd09fededd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "184193220fde4a169eb92b06a45d4534",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "dfe53970eef542f294f79f6e69578105",
      "Inputs": [
        {
          "Id": "3a3d0e3a9f1845288360c0b54cb99134",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22c23ea1fdd949898a96d4d9c9e2c9e6",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "400000;",
      "Id": "01b60855e17347259df46bd336fa507c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "384bda1527b14a02ad70bcb48bf9ae0c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "a1df277721c645638b43b9bb87e073c4",
      "Inputs": [
        {
          "Id": "1736d37080c342a580f4dd5889c762f9",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72a0a40778a448b3a9128f2dfb3c160c",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadius@Autodesk.DesignScript.Geometry.Point,double",
      "Id": "27d2b85bb8604481ad2b9de1100c0e01",
      "Inputs": [
        {
          "Id": "2b4dac08ff6e42708c082c91e4981bb5",
          "Name": "centerPoint",
          "Description": "Center point of circle\n\nPoint\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5c75a90ee7c49bca9de68cba1747511",
          "Name": "radius",
          "Description": "Radius\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e1e3dcd116c48a4b5b4ec570debd5e2",
          "Name": "Circle",
          "Description": "Circle created with center point and radius",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a Circle with input center Point and radius in the world XY plane, with world Z as normal.\n\nCircle.ByCenterPointRadius (centerPoint: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), radius: double = 1): Circle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "541e1147b23c4cd08cefb984ac164050",
      "Inputs": [
        {
          "Id": "530f30a980a94baf890cb9fbc1e94f72",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1732770a7dcd49a18e9c8410aee434e6",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "dd4e880c798f4948aff948fe78b97d06",
      "Inputs": [
        {
          "Id": "af9b26aaecd8429da0f66e0ba9bf35bf",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f285cd68378401aa6fc390cb560592c",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0ee124931d04e5a966a08bf69fe6174",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "f930c31fb2c64fc4b2f755b1d28bc6a7",
      "Inputs": [
        {
          "Id": "22d623df30bf450da7be31a742f36440",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "964e99975442467b9ccf483f41e6ffd6",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Not@var[]..[]",
      "Id": "d13d507c2c8644c3a23144d04890a500",
      "Inputs": [
        {
          "Id": "fa4838f012894beab18804223f6829c2",
          "Name": "x",
          "Description": "boolean to reverse.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "270d6ab2bd2b4fcdb120467328cea542",
          "Name": "bool",
          "Description": "type var[]..[] (reversed boolean)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Negates the input, e.g. returns false when the input is true.\n\nNot (x: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "5089470f6cea496b802dfcc6642f5c01",
      "Inputs": [
        {
          "Id": "b733f64308754057917ea416db384c38",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d73b822f43504213a84cdb19a251aa1e",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0457a3b6ba3644639f3578d6ce652ef5",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f0c072164bc43bf8115a0c37cd90613",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "309c009fbc194c65ba4e04d939f3445e",
      "Inputs": [
        {
          "Id": "1db585e8802a43aca73392fb108e8e99",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2fcdfd4bcd0948b0b82f1fe08f580f32",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f46660623357474dabe8359b7e83aad6",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "45580af44937407da2e37cf1ad2e3d7e",
      "Inputs": [
        {
          "Id": "8d89817eb60a40259df9973764272ed5",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21972356ef00424c8b83501b20d8952b",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double",
      "Id": "84e2b736017749f185145ca70b2a47e8",
      "Inputs": [
        {
          "Id": "330ab2a3ef344e5492275b6723165008",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55a6d66f345d47d2a9c54590b453f3e6",
          "Name": "thickness",
          "Description": "Amount to thicken\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8535157851f34111a81c8783a8cb6dd4",
          "Name": "Solid",
          "Description": "Thickened surface as solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals on both sides of the Surface.\n\nSurface.Thicken (thickness: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "a073a91e9a9949518550363535c51d17",
      "Inputs": [
        {
          "Id": "e70cf977be4e4733b9c3d211c84a576c",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37f03417e37b4f94834aad22b154d76a",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "47fb4604543e45c38d83577c8d62bb03",
      "Inputs": [
        {
          "Id": "6f97814f7d9b497dbaf8db4524f8941e",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70836b716551452a95555a46c47786ea",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5d7bd2c786543aaabdf3d1c8cb54f62",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2cfec80a7edf44a0b8cf4fb87fb2bbf3",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "79a2ff2d58004260b1dfe7ef58e8392c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa834d5cd58142a28c509d516fb3aa47",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "5c074162c44e4176adb296d10ffbdc6a",
      "Inputs": [
        {
          "Id": "fe4bf9b3d2d84a5d83e86ae19fb5442b",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5088d89be2e46878c324b7da9d926cc",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "df262ba11bfc441f8cb0837540a3164c",
      "Inputs": [
        {
          "Id": "a80e5f5d66f846bfaf2e8ec11271b11a",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebbece510e174bcdbc6df699d6ed315e",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21084c54024646f29405cd321a54fd74",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89020b6ab7be429ba1a695a27344e31d",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "743d6478cf5c4be7b238f4b138fb5abb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1055f3e6058946939ec3e9892c006ab3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "bc81e7e7e41943cda5f04d8b911bb486",
      "Inputs": [
        {
          "Id": "7439c8d4eb3d41b3a11b7d291b681e8d",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "544594d08326420da446fc898c016370",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bcf53a43babc459f99fb5117ee8ab068",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "3e6f6359b29c451d865eec9e435cef32",
      "Inputs": [
        {
          "Id": "4fd00e11be6d44d19a3f90a003f57e7e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d45bf5097cc0440781ad6e7d71235960",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f3b434069f84ee0a153dd778bada3ea",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "222fd1d357ca47efbff0833dd0ed5c95",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "077c7da092114fa180cd3278f4df64a4",
      "Inputs": [
        {
          "Id": "117ac80b02114cd8b87bcff232682fe5",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "536c30a25f6c4ce786c1246e3c0bb059",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d69e4680850c41fea7d05b2557d3f0ca",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "95cb76f6268c4877a70fa04a52f60fa6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f42842775394647966fc67d6d2fbf7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "a8838e5c5f0a4305bc4daf6d78f8155a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "29c3096ef08c44fbaaba58bfcc411d3f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "653ca0480d6944aa97dcebf8182b0245",
      "Inputs": [
        {
          "Id": "93b1c46d8c7e48849d88fbfb005ff4e3",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d22bf48708b64c22af8ddef6177bc4f3",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "5a1924ab316046a099b04456f8c00a25",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7fffd9a2f0794acbabef780c4b57812a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "da0c00875ea9476781d6258bd3cb53f4",
      "Inputs": [
        {
          "Id": "914a0f89bf3747e0831065cd03048ca0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc8120ad75164f10a8c8fea3d114df33",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfdf1fda2efe4a83bc16898f35746060",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "37b45c9b9b4443308b7f41a7e0a8fa22",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dee393014def498ebe4d91b560c63f7c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Id": "6c19484b9681484cb7afd51ad61908c6",
      "Inputs": [
        {
          "Id": "b92a64bc2afb4deda229e1f1ee2b4b22",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "826299ba23a545409381e48eda04660e",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "a097e25252d04e3ca99b21369a709949",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "76b51ab0255040108aca4c9b781f6d8a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "b2f2e54cf3fe48909ead254c456f3e18",
      "Inputs": [
        {
          "Id": "41e5dd4695ea4057b5f3ebde346242fc",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e93521aef6b4e76816122b112c42f64",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c50f98b7a394eb6b9548fb9245c2860",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "cc0d8df9dfd74aec8fcd70d98254c4de",
      "Inputs": [
        {
          "Id": "38815681b68641cd8367e07738b9acea",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "219ad5ab7216476ab71cc6e4c73efe08",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "0b13beb7f9b84d91acf62a898f1c3e34",
      "Inputs": [
        {
          "Id": "8ee4d533a38e4f1397df5fdec953ea82",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b19ccee5f7724e88a69a9fa151365548",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f270030153704e6cb19643917e84f40d",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c298bb8c43c54764ad6caae5df4038a6",
      "Inputs": [
        {
          "Id": "1ec6a25cdca84cd29b80fa9b6c8f8b3c",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "012979e8ec52439198f74935cd0c6d82",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ea6d9df5e464919af2a31ec643039b8",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6884647caa8344f8bb157d2c61c2a39e",
      "Inputs": [
        {
          "Id": "6e6d63eb269d40aa92f120fb06cbe461",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ede1d0a626684658aae291512ac2f0db",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3a654aef8384eff84ca5718346861e7",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ProjectInputOnto@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "cbd75e3e9df24297aca7c49bab4c898b",
      "Inputs": [
        {
          "Id": "9d478e1062234662a1921faa9fa2a53b",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26332212d7fa477e87030e02739e6e52",
          "Name": "geometryToProject",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4eaf338dff164277b34b9133b323a42e",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c084a82d0c104fdbaf7bb1045ab0f4a7",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Projects the input Geometry onto this Surface in the input Vector direction. !!This projection method currently supports only points or curves!!\n\nSurface.ProjectInputOnto (geometryToProject: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Edge.CurveGeometry",
      "Id": "55c8cfd75b6e4b819f2a88293d081bb9",
      "Inputs": [
        {
          "Id": "45f243d17c534552bb322220e745bd3c",
          "Name": "edge",
          "Description": "Autodesk.DesignScript.Geometry.Edge",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eeaf5658a9924c4ba729df645b7e9a92",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The underlying Curve making up the Edge\n\nEdge.CurveGeometry: Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Face.Edges",
      "Id": "82cb1f4bd1b542869e29718968de09af",
      "Inputs": [
        {
          "Id": "9a76e9af64b84caa9652c39cc17c39cf",
          "Name": "face",
          "Description": "Autodesk.DesignScript.Geometry.Face",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e144ff5ea7a9435c93e26baf931f279a",
          "Name": "Edge[]",
          "Description": "Edge[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "All of the Edges around this Face in counterclockwise order\n\nFace.Edges: Edge[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a35b00c0502d44e3bfff49e1325cf5af",
      "Inputs": [
        {
          "Id": "8aef498fc8274386b2d29f02efdcc4af",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d41602f6e66e46b7b830c7ee3525e64b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ce8b39d153548f9bc1ed53d4aca879c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Topology.Faces",
      "Id": "adc73665b4be4150b584769d0d66204e",
      "Inputs": [
        {
          "Id": "c06f23fe87de49f68635525bdc9484b5",
          "Name": "topology",
          "Description": "Autodesk.DesignScript.Geometry.Topology",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "812a723652cc4e4aa2f5dfd1e780aeae",
          "Name": "Face[]",
          "Description": "Face[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Faces of the Topology\n\nTopology.Faces: Face[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Origin",
      "Id": "a5ce9f3aa3704fd5a327d165cba117a2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5ba0dbaac7df42a99600563516d67ffa",
          "Name": "Point",
          "Description": "Origin point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Origin point (0,0,0)\n\nPoint.Origin ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "cda17d3520d84a8cbd956e3c3dcc58be",
      "Inputs": [
        {
          "Id": "945c057527154eb1af959d3280e70cfe",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "495520d361aa4aee8abfe0193db91393",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "0e2d463301f2492c8c1b023271b32b50",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "95c08ff6573546a5ae80b18e9521d6b6",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "78988f717c874d6b9266e52603005c57",
      "Inputs": [
        {
          "Id": "e4aab1a290e744458955399dcdbf9cb9",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9783dbd800a841ac9b9b70ec48558775",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "900000;",
      "Id": "79459bf95d4d4b518f2545abd7510fdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9c95fe09d05145949c685ee0ab9aff3b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "f7298ed236f045d6bb378a78623cd18a",
      "Inputs": [
        {
          "Id": "2e4b206b544c41e4ad50caabed2d014c",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d319901e83c0446fbb7d3d5fec4684b2",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadius@Autodesk.DesignScript.Geometry.Point,double",
      "Id": "1b327adb9182458eb42990a4eea9473e",
      "Inputs": [
        {
          "Id": "5b780a1a782a4494ae637e64d968e5b8",
          "Name": "centerPoint",
          "Description": "Center point of circle\n\nPoint\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73db7b113b384df6b7f4d5418d607c53",
          "Name": "radius",
          "Description": "Radius\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5942db171cb847df8b64b611609616ec",
          "Name": "Circle",
          "Description": "Circle created with center point and radius",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a Circle with input center Point and radius in the world XY plane, with world Z as normal.\n\nCircle.ByCenterPointRadius (centerPoint: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), radius: double = 1): Circle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "ef1284a63a774c2997db71a132897904",
      "Inputs": [
        {
          "Id": "234e5f263d404ec885aa0555329f514e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56fa8bcc1dbe404cbd47f57b90b27be3",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "22f45339d40e4f87b9ea3b1ed0e90371",
      "Inputs": [
        {
          "Id": "32a06c44f6364d3fb8c80f0a538717ae",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34ce65da5a94412187f2e35c5bc8345e",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58075a81eb574b81bbf87cd0da9e1124",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "f2024bd6aa2d450fbed53992b84dcd5d",
      "Inputs": [
        {
          "Id": "86af544ef29640609292f24f5243bb5d",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "268124729b574eb399a483fd5a7ad2fd",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Not@var[]..[]",
      "Id": "4285a0332abc48b4ba5c7a1e835ae02c",
      "Inputs": [
        {
          "Id": "4cd4d7a37c0a4a748578a6b20e65523a",
          "Name": "x",
          "Description": "boolean to reverse.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34fa0b588f67446dac2c41bbd9a48158",
          "Name": "bool",
          "Description": "type var[]..[] (reversed boolean)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Negates the input, e.g. returns false when the input is true.\n\nNot (x: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "26e858b4ba7e4d6ea64f41a2a89b2b42",
      "Inputs": [
        {
          "Id": "16edb41f3937468faf67825364121dbf",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c3360701d2049d695578029cbed28ef",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9e3ea75e4214dcc9dc63e2210b90489",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e52f8a39e90e4fd791b7821378aee137",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "6d6fd018bba244508e5c4d6e7ce3a8e3",
      "Inputs": [
        {
          "Id": "6b899362407c4b1097b700cf07ca7262",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f53f94e021f47a599d60fcd57a87f9f",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48dc049e6761445fbd9eccf12af1271f",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "f981a8acaf0b49b2aeb39c8e9eab9ee6",
      "Inputs": [
        {
          "Id": "f3d21d2378ae48d699b823c88594fceb",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab7d4baba43146a7b476a2fc258fbd7e",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Thicken@double",
      "Id": "ca2e83d5fc274e21b0fa6c235845cc61",
      "Inputs": [
        {
          "Id": "08d5cceea1ee49baa06c7db12363e31e",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "668b8429c65c43caa271d4a290db63ba",
          "Name": "thickness",
          "Description": "Amount to thicken\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d733721d85eb458d9a71a852ac3fd79c",
          "Name": "Solid",
          "Description": "Thickened surface as solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Thicken Surface into a Solid, extruding in the direction of Surface normals on both sides of the Surface.\n\nSurface.Thicken (thickness: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "815a6188b5644b7cba58e52a801b4dc6",
      "Inputs": [
        {
          "Id": "62b652a25ff645a59282768e2b3e175f",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3303fccf951e4a7da89e590f095c54ab",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "174bb0c190994e788a9dd0e6a12edfa5",
      "Inputs": [
        {
          "Id": "1cad9d93e953424a896bb26cc5fd209b",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f0d24bedb0c4a6d85c6612ec17f6a87",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae48c87007364defbc14731f7020424c",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "302e6b10d82c401e94f659a66f084bff",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "6e7aa04b2a5e4498b5ad85be59d2b096",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1416311417fa464a811bb62b9d44ee35",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "58a36e3a22f54c7e8e81fef0916adfab",
      "Inputs": [
        {
          "Id": "093635210c7b4823afc9ab614103b8a3",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c01e9003394f400187b8a74cfc7faa09",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1e96326069b3482da1ff09bea1167e13",
      "Inputs": [
        {
          "Id": "3d23c712704948079376d7aa8a237761",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fe07648d027461dbd8e2377b4665f2b",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87c81ebd19f64b668d81d4f10b4a38c5",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5034a728de8840fca4d4e23124505d03",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "7a289511861540cc97f5ff0fdb429fd8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "334ff13f63714087ad25937d66076704",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "RR_Existing&unconnected",
      "Id": "ebe61d722dcd4bfeba7d61c177770072",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b7dd4b67c9754d32897492b04a674dc4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "ab2ad1526302454fa85ca1017780482c",
      "Inputs": [
        {
          "Id": "d52f0a0e74d64d3aaa600407883fa12c",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e600fbe0370f4e1fbcf8da5d369f1049",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "363c9f17700c4f17a4f5f391e2ac7ff6",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "45a68b9a44f04ba49dfcf79a8c975fe8",
      "Inputs": [
        {
          "Id": "52ca168fb72143e69226cdbf123387e1",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c342301b9904e73b9b1d5dae1e14f05",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a5436bd6d9f4cb1817c12e2cb2cfc5e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca3c15d92a1446f697f5207e93b69ef8",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "e0fbd0c358c64a879b4e46d788ef083c",
      "Inputs": [
        {
          "Id": "4c86a951d6714b8d990cedae596ce42c",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "73eb38fcbae043e196f4f80506c45a02",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fc099efb668456a86eadf83b026a04d",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "e5a4a2329c904a958a0909030c5cb7d5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a5ecda0b667349c58119eba6d33ff74e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 695,
      "SelectedString": "OST_Topography",
      "NodeType": "ExtensionNode",
      "Id": "80b9bc1b42194c54826a0a6ed3fe5b6b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "703dc331422c47c1a4d6fe5a40381cbe",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "7294ff3ee36041f680f170d22262ad9d",
      "Inputs": [
        {
          "Id": "39fc296c16f74f4f85def509336ab0b8",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da5734d67ed74c76b14b50323e371288",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Projected Area\";",
      "Id": "b5d281bced654fa3a796e82e32ce9407",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b9bcd2973914b61bdd73121df0d83c7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Material\";",
      "Id": "56b4b67ab4f54cc6839f14d5db172df2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "46c06e3b80404334a2ae09a8742d5281",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "09b98459e06f49f988b160d26f6052c3",
      "Inputs": [
        {
          "Id": "1e300aa18b764861b074d28b68d2836b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "613a4cd63eba484d959e196fe5759a3e",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3318dda404854d3fb53caefe77555199",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Id": "2790d1fc7736418ca570d2e42cc295a4",
      "Inputs": [
        {
          "Id": "344dcb7fccc9472a91442b30565f6718",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "141e6b3dfa2b4b86816a3e0946f8c980",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "6a0db4db42f24781a14e2d75d67eaff3",
      "Inputs": [
        {
          "Id": "839abb861a534b31a06023bac2a55b88",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cae6fcdfe2ef46128ef170e11bb94449",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1fb4ff515564eb9b7ee32b469ad9326",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "763098aa6c1b44d0ab540b884ce5fd1f",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "8cd964bc594740c79f34ca5c346d54e0",
      "Inputs": [
        {
          "Id": "7a694aaddc5b481aa07a5e82cf93c017",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f421bbe4084f40888c2d94b92d289fd6",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a13a395e2c84d4b8d3fd880884ffe64",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "804b5d7bab8b4dadbe87efb0451daac9",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "8d7653809610430981971616cf8036da",
      "Inputs": [
        {
          "Id": "78a917283dcc4d6daa46a00e723da85d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d6b54c73380464c8cbac6b5cb99b1c6",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe068370b0164f52b88d6510f25eeeb7",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "0e2a84ac12404d308b75bd1b04db11b3",
      "Inputs": [
        {
          "Id": "993986b45e524259a7493ba3368c0bf9",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eeb440616e8e41568651c3ee3728195f",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Lists.Lists.RemoveItem@var[],var",
      "Id": "60c545288b95414ebe68507b432efc32",
      "Inputs": [
        {
          "Id": "b1024a496f3f4a579bd8707598465867",
          "Name": "list",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93fe593b14c642cd8c2f6021d80c9aa8",
          "Name": "item",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d996a72125b4480fb30c9a8f5fb15f89",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Lists.RemoveItem (list: var[], item: var): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"<By Category>\";",
      "Id": "57cc0b2764b049d29ee1d2ffb1125d3c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a919542e472e4d638221c872b620dcf3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "0b4d8d6b-10eb-4ca2-aa66-d72332361515-000ab7b2",
        "86ea9aaf-64e8-446d-bcb9-a764602085c0-000ab882"
      ],
      "Id": "31cfc9450d964b3f82ce559f100b8d10",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b131a73a48bb496aa051b0443e61126c",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "24c0bf87ab3e4b1588a78bc0449b066c",
      "Inputs": [
        {
          "Id": "28bd45a55df64fdfbb62f94fded86a8b",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0dd53ca705745c8aa4db03e5e2d710c",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac0878a4f6fc4ef4b2d3256258238948",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fe31eadc0ac4b18b615a79666769613",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "4fa6bd7a39b04958b69450b61dc68c95",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "20220c9079fd4f2fb652daf889b85969",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "7582a8d8664d4474a6ae331346ccde6b",
      "Inputs": [
        {
          "Id": "468a39b7cec346efbfd93bf60c910e62",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98c40eea9e4a4da9b77c764ae137f791",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c197d95dff54bc2811df139402bf626",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "JsonData.Elements.JsonObject.ByDictionary@DesignScript.Builtin.Dictionary",
      "Id": "968ddfa902464f8f8900533ed7ec0910",
      "Inputs": [
        {
          "Id": "08ee4606d46347ec82f5757f25d758a5",
          "Name": "dictionary",
          "Description": "DesignDcript.Builtin.Dictionary\n\nDictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0751872733e54fe3a83abb4e59d4be66",
          "Name": "jsonObject",
          "Description": "New JsonObject",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new instance of JsonObject from a Dynamo Dictionary's components.\n\nJsonObject.ByDictionary (dictionary: Dictionary): JsonObject"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "JsonData.Utilities.Write.ToJsonFile@JsonData.Elements.JsonObject[]..[],string",
      "Id": "4f630de8caa3470db7db3b15b7da394b",
      "Inputs": [
        {
          "Id": "0ecdcc4deec34e26a9f32e9218970237",
          "Name": "jsonObjects",
          "Description": "Single or list of JsonObjects\n\nJsonObject[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "745829897df542f39828bebf2867e9ec",
          "Name": "filepath",
          "Description": "File path for json file\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa0ac1f5b68840fb80ac57b2c4056a47",
          "Name": "filepath",
          "Description": "Returns the filepath if write operation is succesful",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Writes the JsonObject or JsonArray to a json file.\n\nWrite.ToJsonFile (jsonObjects: JsonObject[]..[], filepath: string): string"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "00f008b82a264e4fb492d3e61b416f75",
      "Inputs": [
        {
          "Id": "b119b31a2f2441ee94025c8c7f49d3a7",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8986b4fed974f5fbbb0d0370db4bfe3",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d15ae5a933742be92b6a8f49a13e97d",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcc9745f81854771a1d9dbc5e790bc25",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5e59919c330423191187343f6b3fa76",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eadff033ec7c452e9643e00f83ecef83",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4a698394e694ee2b743d538af96c3a4",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e89d0323cfd4a898f7c47bcb1297ad7",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "b497a389a0104649b66fa336e1a02042",
      "Inputs": [
        {
          "Id": "d566c8e0e6434ebd8a24dec709f5f09a",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1f8fdc2fd66469f916ae4434beca941",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "519d22de9ad94974a7117b3f0bafefef",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54b4b429dbb34639a58b10488be00efc",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24d27f4852b048f286f0c61da3038492",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37aeaf74bfbe4c0a8ffa6269c85903e5",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a157686e940e45f4822e1a1137f7e29d",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fa00d28cdda41dab02c1d3860f2cffe",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "e58b59d3f82a460fbd44ec948e1f62f5",
      "Inputs": [
        {
          "Id": "a4e8c6d3914e4c7b9b3150387bdf6125",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e3710317b3d43bbad2ff44f8cabb1c0",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10ae83a69f51486189e20aa6a087f160",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82bf62dc2aed4f1cb3b86a1083c0474c",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "7792138d16e740a38f84c508143bf97d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a5e0c677458e48c28110f8d167e4038b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "b556f2cfeefb42b1b487a0e6882b750e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca01df9d145c4c3f9973baa194784762",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\\",
      "Id": "e382528f635e4c56bf063d25f4dde68d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5d05b3e7efbd4ca58ee34db5ce8930f4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "d9c445610fd141758b8a7e229a1bc4d7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c383c10a94574b09a0966b03cf329535",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "77a98942b12a498b9f4880ca919c4bb0",
      "Inputs": [
        {
          "Id": "00e6824a86114df89daafaa279e21391",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f4d35bd39f744daa4b64a4420a80f5a",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5735f1b8fc74434bd894c309e179cc1",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee9b623c33364120975f6cf0bf05040a",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Millimeters",
      "Id": "1f87ef79d6b94df39a3b956f40cf000d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ea3bb4714164de4ac200310537d685a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "7ca1aa9b69274ebcab53cf4160cab07a",
      "Inputs": [
        {
          "Id": "b3be12e2e68b4c629497234fe9fa9578",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf643c6450674440b88b9ce08da1e7da",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3162c7863f9f44e88a41d4df32de643f",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "ee8b4dd947394696bab7f30aa719d5ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7569b08551e34ce1a149addc3589e39e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "11e7b78ac9074915920ca2a9650b7f28",
      "Inputs": [
        {
          "Id": "b4ed4bc6b2b044c188d1b4e53380b211",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc02ec98cafd4b59be5da3a07362d568",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56393ad4473e4b8f9d13a1ec4d718ac2",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1204c7b699fe4b8c96e5bc1c2cd6a0cd",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000000;",
      "Id": "c433315076854615a928f37374f9fcbf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b92556be957c40edb4e4bec1b390d4c9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Lists.Lists.RemoveItem@var[],var",
      "Id": "1e91907d97c243b8bc5295baec145433",
      "Inputs": [
        {
          "Id": "7474cd2c4dbf4d9a8ce2ee281e4092ad",
          "Name": "list",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4915c9129c4e4716aac4a99437d079f0",
          "Name": "item",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c64e605d6e34eb795c53104eac4c761",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Lists.RemoveItem (list: var[], item: var): var[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "4e31bd0ea2324922a70b984998daf4e1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2cdc5ef04f947658ed1796a04b829ce",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "106113315aa64daaae4a388066d09106",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "55abe5411e6b443a8706f3c010833d3c",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "cb20022aa0cd446abdab1ecea443b22e",
      "Inputs": [
        {
          "Id": "9bdb46f167424505ab02397df4997d42",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de82dfe0e7064f85b0c580e832929136",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0574ec063e5741ecb9eeb6327f3de56f",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85326cb38df94181a14f348593e3a66a",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "cf4fcae3631c4f17b6e1f7bbe9280d72",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "110b2f0222ff419aac39c4266fedef0a",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10000;",
      "Id": "4917c72b2fbb4f57a220e3e5471a280a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eb90166d1cf84fa5961753236f0e107d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "9adced3a5ccc4e26ab7b3100c282c7ae",
      "Inputs": [
        {
          "Id": "11ecb9c1fed04deab0a1d0bd5f199456",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c10aee39b9549ddbc590e7f780b8db0",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e0f2729f53d4f07a30674c6931af11a",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "307ffd87862d41a88fc3bc3787c297fc",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Centimeters",
      "Id": "09fc8a7fd21f474eaf92cc27d2b47b81",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d5a2b2267974932890355ae7376c765",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3cb99440a5104730800fc404937b893f",
      "Inputs": [
        {
          "Id": "87409388268b4d8dae4dd91c156e71b1",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df6ffa8a8f6e417991ab0f561b410555",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "818a10031e714f67aac8c82b1aafba0f",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90511cce8f584ba6bc5a659cdefbcffb",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "fdfb66d4b5054b28b4ee6771534c32d0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "93d39761230c478fb3d09eb13de03874",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100;",
      "Id": "95734593cb0c4aa0a5eea7a19a37c4e0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6f6eed9815d94c24b38a65b5e1004d44",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "0274c6dbfbc94cc2bda625ba2e57404e",
      "Inputs": [
        {
          "Id": "6cd0af1fc7e04feaaefec9466db3983e",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b7ec8188b41440598f26d5b15d66e34",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65ccf044f7f84229aa0bb5c8471a2a76",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7462cd938bf7492f8b1f0cf574c4324c",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Decimeters",
      "Id": "08c898c0afb144fdb330c4e22ee72e3c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5559ef508a2d4a6f95879ab1f99134b7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "eaa7bfc5383744cfbfac73a5c647dde4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bf2f9eb5707f4c8b8dc920b81cfb34eb",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b296e2ceb7b74fd392f24230d24914e9",
      "Inputs": [
        {
          "Id": "c7767fc353874169b3774a744a9096f8",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63c22cb23e404f8786669e2e7c784a37",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8cfde928080430ead8a8ad70513599c",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b2f71614d6a4a2db9c4563c80b0061f",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "635b7b97f21d49f0adc735d097cb57eb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e468105996824c7aa09161a8886ec26a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "3e9f31b374d24e5eb25038a5ef77200a",
      "Inputs": [
        {
          "Id": "74830f5a17c84314b4156cefb861f30f",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfd4f4fc39c04645a6786bae106539c0",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "492f6fb36b9540a1af0dabcdf975625a",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05fdb192cb3a40249d10b63818e6d96a",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Meters",
      "Id": "600ada47e0294ff7bec1bfa02299a497",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "32e6c93f65254fe8a2a30e17e9f2b693",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "c4a4766e60d84c73a183a3e80a20fb61",
      "Inputs": [
        {
          "Id": "d6e8ea2f40c84a64a84b621322cfae17",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e17b47e7852d4d479dfb4a5a48f15c6f",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "666fe2aa7e5c4f2fa0ec300403323524",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eba9d95ecc074121b00027a41242cc07",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d5c7aefc1f34c9e88540473935d1a5f",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a4c32895960a45938b2ae9fa4ca4c04c",
      "Inputs": [
        {
          "Id": "c49b94980940412d97d7674047f94b31",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bb9c02f4ead4ac5a7f9511febe1ca3d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6866036421d74ae7abfa05826f3149e9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "2f69893309df43859944fc088ea7a7af",
      "Inputs": [
        {
          "Id": "cdb2eee760244a729b8f7d3f51e23503",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5effa91c6e724e318860fd6c99409cfb",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5bc37ae12a6421688c65f97147a3592",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66b8943f1bfe49db96f7be1b971acef1",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Square millimeters",
      "Id": "280322d978f54d7798c007402667e3e8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25f6b1b8491343a3b3edb2a294825f52",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b335b28f59cc4d059655269dd8886608",
      "Inputs": [
        {
          "Id": "2ad74c0925ba4b67b48b7687958636a7",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ac805f8af0b45c18a6303437a081c22",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1258a3f9bf44e57bf5c56b805cab779",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ade1f990d05445aae56f81524460e51",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000000000;",
      "Id": "4a39d927ba2b4c4ba146a592e6995ae0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "93992b83ed914023bdc188ad8f5cbab8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Lists.Lists.RemoveItem@var[],var",
      "Id": "72204440fc2841b4afd6fa88f4a6e0cd",
      "Inputs": [
        {
          "Id": "a905f2a93bbe4e07b4797d6c6cddeab8",
          "Name": "list",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c8afabb369b412c824704a29b099393",
          "Name": "item",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f36e597f3bf491689b2e10a8d14bb7b",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Lists.RemoveItem (list: var[], item: var): var[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "0ef404b9e41d42cd9b67764b3f150962",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4f7f16dc89bd43d48e5c91fcf4fe07a1",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "df476b871cc04f3f868af9cf89e9be96",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c3a986925bce4bf7b5a5e8f2f31da521",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "073779c1557a40cc94158cf84ed3bbe5",
      "Inputs": [
        {
          "Id": "d076b8fef36242a9a61781d7f501e647",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b869085c49994d9e9953db1e1784f5c9",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb5f1576a6854281a3c16244651208e6",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6bedf0866ee499f8408db499794590a",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "e482124a25c146a68381fa5fd72e8a8f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99383686a6f244ed9cb0d638c09ccc07",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000000;",
      "Id": "e61e2b50e2824db9a8b70856c109ea80",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "93c29ff40a494e85bcd71f0be16af94a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "2ffb7782f0ec4bdab4747a813c89af87",
      "Inputs": [
        {
          "Id": "56219d68c8f04a7587de5eb1e7611f58",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8f67aff20c8479eb2ae62cb5c570469",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42d033d4d74544ddafbb745dcb0a6f57",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9196350ba90349a38fc63897b4f5aa3d",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Square centimeters",
      "Id": "d13081efc9b64b98bc7dd0bc936a635e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d7777d44464747049255537b9611df34",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a8e00c7413844051a509533b8922969f",
      "Inputs": [
        {
          "Id": "ee0d29a31cc34bcbbe7595148554b26f",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed191869da7e42838b506f4acad5ae48",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95c2222090d3487695705b570ac5131e",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f971c42e17d4a9c881ec900174dfc71",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "00416bf9716d4dfeb8b6714d1de5a879",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d8b4bc7a72ba4187af3c8bb668897d2d",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "f56b021b359449fcad1e8734615073a7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee961b18b1ab4b4db9247db7d6897375",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "feb227bc9e0548ac8d69b5d0ac1b20c2",
      "Inputs": [
        {
          "Id": "35147e94228846f785964694b20ed2c7",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c0736a160214416ba352b4b82cf6f9f",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bcbbfd04448495c91b5f30c9709fd31",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e4a1983e40649f69bf6274e1ea429cf",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Square decimeters",
      "Id": "093de72f0f634006b31bca9334d274f7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7230148a97964825b5f3415bf044a6ca",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "e4ac0b3c7102447bbaaabf3195134612",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2a239c9b663f4402973dd8d9ae40132d",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3b82c29d34644b68b0872fdf15a85490",
      "Inputs": [
        {
          "Id": "efa238e32dea423987e62a1156371e29",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fccc764a9a241b99d81bb38dc351669",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca4350fbd51d429e99da7b593cded482",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13f09e65367a48138a349836bd7e82c3",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "aa88e42ff8d14a14a13dc7c4c4706fac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "af2dee603a5a4ac08aa9c9e42522ac99",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "0538550498b945deb7495ecb350cbbdc",
      "Inputs": [
        {
          "Id": "4f3990969d7b46cc9b04a87cf41bb8fc",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "805e464b0d48423d8eba757d1a19de60",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46aa2cace2d64af495f5f3deec720a08",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7631de9d402a41ebb0587e4683543dd7",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Square meters",
      "Id": "c6f867770cc14f5e9804d9bb88bffcfe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a548a91ff8e45d1a127a01f1fa3ff34",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "2b8ccfd9b60a4807b1f777ca3b1facec",
      "Inputs": [
        {
          "Id": "65aca3b149d9430398d3503b969de798",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da30886880d946e6b76e0e7c10281627",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "802abd6c554c41a9b40404484ec83e54",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59a7c33791ce43b0a4e506bb5a52305a",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b740fcc425447c2902e958175c5de48",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e1f6b1a7a5c645a2950e632109c12600",
      "Inputs": [
        {
          "Id": "fc429cf1a27d4ee789f840482246ed79",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3eba43a1da84e00bb45fb1992c01dbd",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f7627384e6b4664b53b7a79f13cfacc",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "77ff1cef410a4f4d9280df0589eed1e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "30c494e93ec7458798f141aa97ed0000",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "a53dab9061dd4951b212da2bf5d1faee",
      "Inputs": [
        {
          "Id": "43c48b2fa1864673b53c743298358f6d",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62a2227b61084c848f216c12dab212dc",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e70912589a84377bf0f18876e326058",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "72e29d54c93a4c6c9312776f2d34d891",
      "Inputs": [
        {
          "Id": "ce99e524ad914a9d8feac0aa152c666c",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c93bfc85bbec4a42bf84b6852d4e4612",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "649ab990a2164dcba31fd949fb168ac7",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "acc9cd555b55408587a287ddc41ae39a",
      "Inputs": [
        {
          "Id": "c94dd46da8114ddd9984e6721a9d7dc9",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b26b54cfe44e49fc96a636ec1ca20706",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e3009e8536c47019a5ee638ec5e4b2b",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Id": "55fc32880d8244b398f1b38aa64387c4",
      "Inputs": [
        {
          "Id": "700d0c6b79904b75af446c9424dc96a8",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0af2213f342e482ab03229d3e2b7c039",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c23a5e9fb754c6d9a56b4c48306faa5",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Id": "5e47afe0ea8a4f62950f67eba6cc8196",
      "Inputs": [
        {
          "Id": "01e6e6de65da43018f051c9391d32686",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18d460c0915a4a4792d49df6c8880ec1",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "678e5662cf1241dba7d53fa1db7a21c8",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "2c68806ec2574632af49e6d337160241",
      "Inputs": [
        {
          "Id": "18042f6c09d343fcbc089d0366ed7926",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a8210c0998343f29771094d53d5457f",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3844dc2d5a3249d4af110ba929cb5ac1",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "370351abe19e478c9cc180c9f219dc74",
      "Inputs": [
        {
          "Id": "b2eafbbdf71e4dc095fff271cfead423",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfcbe3da6d4a4f8e84d96f7ce33f5d64",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9862eddd6b14b6da59be2dda1d5c6aa",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "525c1baec2574b77adeabd4629860c5d",
      "Inputs": [
        {
          "Id": "06803c859f354d7894bb08ff982c7797",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e5c917f48384a54805df4038bd80e10",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "244e7cd31e0043d1a4e0021fbcfd8bc2",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "ef8cf422548e4c5aaf5afd1132569597",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3b69945ff6c64bde8dc3e648a781ddbf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "d1c222b05f47420981c09c910a76305d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8109caa8bd940cf94fd7b7cc5dedcb1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "58c87b568b30449981b85cc2dd508a4a",
      "Inputs": [
        {
          "Id": "4113c1ee3993408e87ba84d7fff0e2c0",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d20023e95274fecaed612e769e44052",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e06cebf4ff1345c484163920a0806f24",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "B1",
      "Id": "e4f4741ba3cd4ec2bc9021bb85066b37",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cb21c4439dcb4c6b90278c611a5152de",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "B2",
      "Id": "3280b8218dbf4c009c17d61c58b6f723",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9de516b26feb42b8ae08ff34a0d0f44c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "B8",
      "Id": "7e955ceaca274fe9938c95a087849005",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0cfe3434aa24a25ac3721e1233681e3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "B15",
      "Id": "066e12f9ab9b4b628929b51ecce313fd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b0f49174d5b44d5090bc64d7ec28c1fb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "B16",
      "Id": "1379ab0534e740dca612ef7a8e7f8706",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f553e1a94a4a45419d9b3e9e2373e1ae",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "B13",
      "Id": "576bb31de6174743a004d67a9e7f532e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "72a8573d138d46d29e466061125dd1ed",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "B14",
      "Id": "3accd1b0fce1455fabd30ef1cbeeeaf0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "128a1a6502db41059d5a39adedfb0ac7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    }
  ],
  "Connectors": [
    {
      "Start": "a35b98458d984b07adcef326eb799e84",
      "End": "830ce0549041475cb1275fa00aa10cd1",
      "Id": "38e003658f894b4c9b62cb3ef89dd74a",
      "IsHidden": "False"
    },
    {
      "Start": "7c053ecdb2e14da0b745ecff04d226cc",
      "End": "519d22de9ad94974a7117b3f0bafefef",
      "Id": "cad48b0aea3a4ab9a0f6664e6c4265a5",
      "IsHidden": "False"
    },
    {
      "Start": "95cb9fa312a74f7596fa2afb579a788d",
      "End": "c14bd193648b44389d522cb6146b2d4f",
      "Id": "d1f84fd99549494cb3fd05828014c5aa",
      "IsHidden": "False"
    },
    {
      "Start": "3d180250a1d24845ac6e4cf6f037da2d",
      "End": "500a45b754c94a0ba8197417864da8dd",
      "Id": "3bb0ffa6139d4ef292dfa2781909401f",
      "IsHidden": "False"
    },
    {
      "Start": "9abec83a272c4142a4a0f7c2aec491bf",
      "End": "d019f2aeca5d4dd6b6c91b761df9fba1",
      "Id": "9f9ff9aaa2ff4aaab8820ab2400c6287",
      "IsHidden": "False"
    },
    {
      "Start": "83cf843257494ed1818b997a60af6782",
      "End": "9b36ac0dac1946c6b030bb5235894a79",
      "Id": "9159229f900846138495911d2a66df01",
      "IsHidden": "False"
    },
    {
      "Start": "c16ae1c76d654b468269097b5fb48ca0",
      "End": "36153449cb8d46b8889d395e6181c0f2",
      "Id": "65298ce8f3004bb490ff78658e1fc8f8",
      "IsHidden": "False"
    },
    {
      "Start": "1ef2aa6b30834ab4a7df283133592114",
      "End": "5338c31e7c1246bdb8c73f5ec3910f7b",
      "Id": "8ec2941922ab43d78bf496acdb1e6dcd",
      "IsHidden": "False"
    },
    {
      "Start": "5a2d4e7724774d039fa2f440aad49014",
      "End": "c97e1bb5e73f42df97dc2af871c3a020",
      "Id": "724d9ee1ea584f23801be54e3df6cbcc",
      "IsHidden": "False"
    },
    {
      "Start": "4eb8794f2ac44fef8cb9a9127935699e",
      "End": "a902094852d94cac9304183af5a5de45",
      "Id": "df6f61592bd442fba1c7c9f07ebba454",
      "IsHidden": "False"
    },
    {
      "Start": "9c94c9201389451f8a4a09db82241a48",
      "End": "48e46ea3eddf4471aef6ad64a1b8fff7",
      "Id": "8e74dc10b13f44f18d92410c1593a1a7",
      "IsHidden": "False"
    },
    {
      "Start": "3797ea0ec1f64b75b7a5f119a1db96e3",
      "End": "127caaa67f8d40a281c93b4b4eafc2b9",
      "Id": "948bb0f5dbd74266ac184a4af0de7a47",
      "IsHidden": "False"
    },
    {
      "Start": "3797ea0ec1f64b75b7a5f119a1db96e3",
      "End": "8c9e694b3c9d4cccbd5b6cedd692ece0",
      "Id": "6dfa6b808dd341f69af33df3fd19f522",
      "IsHidden": "False"
    },
    {
      "Start": "9a62758ffa23495f8f5ef3e663f019ef",
      "End": "a015278f887846b794498763a0e7d53a",
      "Id": "12fc300d9cc84eb3b932b18ad6c23dff",
      "IsHidden": "False"
    },
    {
      "Start": "9a62758ffa23495f8f5ef3e663f019ef",
      "End": "7f3a2835e16142c491f59d0317fd69a2",
      "Id": "f78221596bec4895abeb9cadd52aceba",
      "IsHidden": "False"
    },
    {
      "Start": "ccd59174a5624eb1a089ff7e780a0df2",
      "End": "962020accdf54033b28762fa445c25d7",
      "Id": "043b04e462d8458c990f9767523b296f",
      "IsHidden": "False"
    },
    {
      "Start": "3e5c6e6c187944faad5c759d7da56cf1",
      "End": "cacb6e5dcb184acf8ec04d7f6660a8c0",
      "Id": "c8e254dffdb54fab9718d6a2f0178505",
      "IsHidden": "False"
    },
    {
      "Start": "b06a12748ea147c0b734f6d3a17c7dbb",
      "End": "33dd9ca8648d4ac0931e27b0009a0dd0",
      "Id": "3a8345fa02aa46d28ae5cd3c97f99aa3",
      "IsHidden": "False"
    },
    {
      "Start": "fb47131b224d4d3c827f413484c3d29d",
      "End": "7439c8d4eb3d41b3a11b7d291b681e8d",
      "Id": "7bcd0f49f8204d57a228b761628fef2b",
      "IsHidden": "False"
    },
    {
      "Start": "fb47131b224d4d3c827f413484c3d29d",
      "End": "4fd00e11be6d44d19a3f90a003f57e7e",
      "Id": "69ce004e0a584ec9a91cf7c01a7c0abd",
      "IsHidden": "False"
    },
    {
      "Start": "976f48577f72446da15a89d2dfdd4c37",
      "End": "5c64d5b793f647d0998ca9cf1969f9a4",
      "Id": "5fc258b021bf4738af97acaddae63e4f",
      "IsHidden": "False"
    },
    {
      "Start": "9245dd4155c0498489d97d21b35b4734",
      "End": "9abc73932ef84c2aaecdbff5d445abfd",
      "Id": "75e30ab0674844c684ebeef10ab3f9a2",
      "IsHidden": "False"
    },
    {
      "Start": "42f3a70c0a1342368bd85cd4f67524bd",
      "End": "b72c2320485b4fa6871451bdad1088ff",
      "Id": "eaa6266b6668410a869aed1e13c7d2e4",
      "IsHidden": "False"
    },
    {
      "Start": "d4580c4db6ee4813ac6029951b36b909",
      "End": "370b0df261ef4fe291d642bca208c413",
      "Id": "0a01ec083c2f48eb9cfd76d85cca0688",
      "IsHidden": "False"
    },
    {
      "Start": "f78c60468d024409bc3fbc2e23266333",
      "End": "23c03572e4394e75a4474233d25e9276",
      "Id": "0fa1e05564be46dcb9b870b4ba4ad52c",
      "IsHidden": "False"
    },
    {
      "Start": "3068c860fcdd4dd8b1339793f39ba406",
      "End": "303ccb39b3bd465483a8937eb647734b",
      "Id": "7fe38072ccb345038e8561b8456c3837",
      "IsHidden": "False"
    },
    {
      "Start": "3068c860fcdd4dd8b1339793f39ba406",
      "End": "dab032f312434f519a7520ae220eb66d",
      "Id": "4600f82a159d42bca8a4e93203b3fd5a",
      "IsHidden": "False"
    },
    {
      "Start": "b25f93aa60814748a3ecad25f589749c",
      "End": "367491811eee4061b61638ce51933a82",
      "Id": "e50f345da4ee4f1393ac045b00d1130f",
      "IsHidden": "False"
    },
    {
      "Start": "955143065b544a668389706d90ddd77b",
      "End": "c94dd46da8114ddd9984e6721a9d7dc9",
      "Id": "d39703f3809940429f29299a150ec455",
      "IsHidden": "False"
    },
    {
      "Start": "527fc5c34edd4071b6e150dbb8707ea8",
      "End": "a53a7fe684a54c8fa2ed25a949dcccba",
      "Id": "d66b74e1571f4399940c0fc5721adb2c",
      "IsHidden": "False"
    },
    {
      "Start": "ed097fe5ba96402380e98f199ce57146",
      "End": "a21c3643d4c14b0b89d7338dbe5d61a4",
      "Id": "e2d30233fc6f46aa9e05f7d3c6cfd3f2",
      "IsHidden": "False"
    },
    {
      "Start": "ccbfcd1cd4734012bc183699bb42b642",
      "End": "51de0cfaaf8a45148335da3a8d3e36dd",
      "Id": "ea65e85e5ad94628a19723228bb33804",
      "IsHidden": "False"
    },
    {
      "Start": "dab7d9a6080d425889a3291c235b2d5d",
      "End": "db2c687553f34e10812dfe153f7d250d",
      "Id": "b3907076e2a94a38942c12e90a6c28b6",
      "IsHidden": "False"
    },
    {
      "Start": "a77ad616e6684a3e8175e384d9f13428",
      "End": "060a72ae56034c28867eefdfd56a6098",
      "Id": "8dae4f6b814e4697a63c124cc24f5af2",
      "IsHidden": "False"
    },
    {
      "Start": "53119d24deeb41899b8e68ba81a6f3e9",
      "End": "25459d51d20e463591c1fe63e165c2a1",
      "Id": "1a00d0776d8041ada232aad153abd2ba",
      "IsHidden": "False"
    },
    {
      "Start": "a3ba27b7461c445a944858ffdcb4d1e0",
      "End": "b3089512c4ba41bfae571322de0f81c8",
      "Id": "4f56c5a8bd484eaa93da98068c8cbd6f",
      "IsHidden": "False"
    },
    {
      "Start": "4896ab553b734d44873f3187d1914fc4",
      "End": "2a02c08c6255453da54e5f023bce8ec2",
      "Id": "b8e1a565f655407f9a493b0a82499bd0",
      "IsHidden": "False"
    },
    {
      "Start": "9be7d01dfe4844dcaf8a6f79753ba8b3",
      "End": "1343179f4ae14e76b5a509720dfbc4b5",
      "Id": "cf3a45c529b24cb2a80353b2d19bd6fc",
      "IsHidden": "False"
    },
    {
      "Start": "89b8dd65da6f4a3a8688d5475b7fd2df",
      "End": "5e95b850b97143f2b93f85b79e16403b",
      "Id": "2d6b90d3ccd74655ac7cb00eeaedaf7e",
      "IsHidden": "False"
    },
    {
      "Start": "89b8dd65da6f4a3a8688d5475b7fd2df",
      "End": "b48691c7e42741379fcc6fbb5875bd60",
      "Id": "06a88a0726ab4177be10dc50b194ace7",
      "IsHidden": "False"
    },
    {
      "Start": "2eff2fa25df34da1ada4b31e54e996b0",
      "End": "68b0f502342845068716932cde5c1ff5",
      "Id": "5b5b583c7c88458a81006b9ed91ad997",
      "IsHidden": "False"
    },
    {
      "Start": "d4f04b9791604919897cb44cce1ed8de",
      "End": "6ed5461272b94febaebea3aa620fe9c9",
      "Id": "64533cc619b8495d8bfcacddc1b56b63",
      "IsHidden": "False"
    },
    {
      "Start": "80dbf14f4133433eb237c442abbd18a4",
      "End": "8e80badd1a2c44d09357c293657cea22",
      "Id": "ae31a88b115a44c387693f9cb7c1e8d6",
      "IsHidden": "False"
    },
    {
      "Start": "f68faa4516d747d3b47b369634dfd9b2",
      "End": "9903eec9911c43bba1f3af3b57339626",
      "Id": "3b250084ed5643d089fc51c12add697c",
      "IsHidden": "False"
    },
    {
      "Start": "f187eb27bb454ae8b5a09efbcb156469",
      "End": "b4d51169ac8243079030935e2ce74a18",
      "Id": "c88b8c4660a441b7823a6a45c5f60e6d",
      "IsHidden": "False"
    },
    {
      "Start": "7bd6340ff5074594a0ca757787cfd791",
      "End": "0d6306a3b80842a1afd4422d7573d10f",
      "Id": "b8e099c4db4542caa9f0590963c72d57",
      "IsHidden": "False"
    },
    {
      "Start": "b63ae06f94bc46e3901d8e53754c1b26",
      "End": "2dfdd72632c04a489ca10db833f085e1",
      "Id": "0acc2940810d4eeebef75d1dca84e054",
      "IsHidden": "False"
    },
    {
      "Start": "9ac48c2afcc841c3a4d02398dd06766a",
      "End": "8405b764bf394fb3991db34c9ed38eef",
      "Id": "0d6074feb66d427f9f246f4ebb191799",
      "IsHidden": "False"
    },
    {
      "Start": "45e010cc05304b86bad9b17244dfab44",
      "End": "710c4ecd1d8a4b6984b952f1a1c0acfc",
      "Id": "600ed4a55c28414bad9ef9ecfeb63ee2",
      "IsHidden": "False"
    },
    {
      "Start": "511e2f47a9744b9b88df67b21803e974",
      "End": "dca2d87c451246e7811628e7e42a1f46",
      "Id": "372fae431e9b422eb0a5ae0f7a3b199b",
      "IsHidden": "False"
    },
    {
      "Start": "1d165cf989d14d36863dc0028bd6709a",
      "End": "086707370afa46c68dbfc595ef8d54c9",
      "Id": "cfa1cc98c9d7493798592c423f145700",
      "IsHidden": "False"
    },
    {
      "Start": "8d182b1848c24c28891252ecbd0bee02",
      "End": "5d9cb8257db64dba9254f516818e9051",
      "Id": "7ef705118782476ebfd0b346433cf887",
      "IsHidden": "False"
    },
    {
      "Start": "8d182b1848c24c28891252ecbd0bee02",
      "End": "00a912d1c0ae438db9bb54f2bb244f4b",
      "Id": "67445b5087e34f438690476cf8fe8f60",
      "IsHidden": "False"
    },
    {
      "Start": "7496e07456bf489db5e8a1da04bd78b2",
      "End": "77616af6065e46f0ad4765c7da474420",
      "Id": "0c4604e464ee40fdbcf06d442f0aff9f",
      "IsHidden": "False"
    },
    {
      "Start": "d36f17e8de974805b4148498ee9849fb",
      "End": "9a92851edc2e49c9947c58b03e19b9ab",
      "Id": "f5b230ac46a045d5896380c27f4465ad",
      "IsHidden": "False"
    },
    {
      "Start": "6eda63907625457fa6f019b8190cde95",
      "End": "2515b705e5374e0ca2490766832d7ac5",
      "Id": "65521b8029c4441b92113d45cf6dcc14",
      "IsHidden": "False"
    },
    {
      "Start": "66c7d490fc5d4dba9527dfef77ed8d19",
      "End": "677ff6ed70b6420cbb97b3c4d724c2da",
      "Id": "14e5d9ffa44f4c73aa1fc20dc2dd8002",
      "IsHidden": "False"
    },
    {
      "Start": "a26c499eca534368a32a82cb8f8f1ceb",
      "End": "ea7e29478bb74a70b4d300596e53aab3",
      "Id": "dc961e6addaf4892920b62814c5c627b",
      "IsHidden": "False"
    },
    {
      "Start": "9036c79a19a54d50853ccdffa870de62",
      "End": "f06b9a91ab7d4a2f95c53b241dd96fcf",
      "Id": "c90d0f4cb93447c49066bca566f20b33",
      "IsHidden": "False"
    },
    {
      "Start": "f17b345fbfae4fb193986ae786fb91fd",
      "End": "044da96cd7fb41a1aab93b594a262109",
      "Id": "8c8e43dc0a1e40dfa69dcb82b6d2023f",
      "IsHidden": "False"
    },
    {
      "Start": "dd6f412effa24e2887374ae1c18f8d87",
      "End": "093635210c7b4823afc9ab614103b8a3",
      "Id": "be65ec379409470fba2c3fa1cf5b10d1",
      "IsHidden": "False"
    },
    {
      "Start": "dd6f412effa24e2887374ae1c18f8d87",
      "End": "87c81ebd19f64b668d81d4f10b4a38c5",
      "Id": "875f4743a478475ba311d0f43acbae32",
      "IsHidden": "False"
    },
    {
      "Start": "0de3c7b214fa4bbb8c369d71069cb57c",
      "End": "d3c65549362d4330908ed62f3c71d62c",
      "Id": "a7f9345011354aa9ac4e703068e44e6d",
      "IsHidden": "False"
    },
    {
      "Start": "1f2678222ce54757896261862fa480ec",
      "End": "da770514d5bc41799050861baf919f8e",
      "Id": "cc7bb0d3883a4c3792ab43b5d5084e5a",
      "IsHidden": "False"
    },
    {
      "Start": "65e90c3ba44e447ab729a2a6c398d4f3",
      "End": "32607085369e44e3b4d2f930c2d547aa",
      "Id": "25db7b93075f409ca2490a8e5f8959d6",
      "IsHidden": "False"
    },
    {
      "Start": "0f7b035bb58341a288009b54a9ddbfd2",
      "End": "b3be12e2e68b4c629497234fe9fa9578",
      "Id": "845aa997ea9448d1a2f2e68e2c576f2f",
      "IsHidden": "False"
    },
    {
      "Start": "3f05c67755c9496f9ff853b176fcc4ac",
      "End": "43c48b2fa1864673b53c743298358f6d",
      "Id": "00f24c5bdc9d432cbe25fd48118f3c01",
      "IsHidden": "False"
    },
    {
      "Start": "c5b9929870144f1c9556991c41fe0432",
      "End": "cec73d9b06794d3e95b62f6cabea323f",
      "Id": "bcacd80c85944de6a4ae734f5c440154",
      "IsHidden": "False"
    },
    {
      "Start": "220655bb3e3d4d7f82f732e5d69fe6cd",
      "End": "4e18a349034d4f0eb80f0d6ed0ef84c9",
      "Id": "4418b1bf4a7e4e6e838e113b3174c736",
      "IsHidden": "False"
    },
    {
      "Start": "540bf3b3aee241fd814b80ab75874e4f",
      "End": "530f30a980a94baf890cb9fbc1e94f72",
      "Id": "bc1e09c88bc649bf938acf8867c2c559",
      "IsHidden": "False"
    },
    {
      "Start": "eacaf9da3c8e4170b3fb80efa115fb01",
      "End": "d3630b9e5bf14754a430329e6efc4d95",
      "Id": "13ec543cf8cc44e4bbd9b4765b1a2b37",
      "IsHidden": "False"
    },
    {
      "Start": "43b7d63c8c74405896a6783646d238c7",
      "End": "8281de4c5b094c68b1364cdc9a902592",
      "Id": "89faeb2be3e247069474aac38847753f",
      "IsHidden": "False"
    },
    {
      "Start": "ba80c066f3a5476391c3335d77d7221c",
      "End": "23868f177b764fa396d074572f852bfb",
      "Id": "f139211239b146ca8428d79b983efb94",
      "IsHidden": "False"
    },
    {
      "Start": "d2fbb1bd64a6411a8429642b48405129",
      "End": "21084c54024646f29405cd321a54fd74",
      "Id": "edd4bbe3210147b08f1f26128477d514",
      "IsHidden": "False"
    },
    {
      "Start": "d2fbb1bd64a6411a8429642b48405129",
      "End": "fe4bf9b3d2d84a5d83e86ae19fb5442b",
      "Id": "5dbd3c8e62f3465ea3f569e350c3f179",
      "IsHidden": "False"
    },
    {
      "Start": "29258f7379584aef8fbae0db90532406",
      "End": "51751199751c4e3da2a545459d795472",
      "Id": "60b815d4ac064c84946c6bbdb1e1969e",
      "IsHidden": "False"
    },
    {
      "Start": "a2990c8367ed46dab868a78b33c0f724",
      "End": "180ef7e89d2443619e1d835b3cf36448",
      "Id": "896c0c560be4448f941be9121cb940dc",
      "IsHidden": "False"
    },
    {
      "Start": "811f638a75c543f39c6da440f3f73a3c",
      "End": "5c18d45ab5894d94bde2e25ac32f3d5c",
      "Id": "afb9539ca18141818c2bd762e3ebf24e",
      "IsHidden": "False"
    },
    {
      "Start": "c0922573605e487d9b219785e5ee97e7",
      "End": "d9f72ffd5c064017ae592e26d079e0b5",
      "Id": "55c98a73b9404b8cae895eb7889197de",
      "IsHidden": "False"
    },
    {
      "Start": "acf5d88d92424303966df393595d862b",
      "End": "27962c48859443809d7a5e798f07092a",
      "Id": "3fd0d2bd46164ef18db5c60627b26046",
      "IsHidden": "False"
    },
    {
      "Start": "8f94d272537f4901a3aef6f75289c6d5",
      "End": "033bb652e690495886df98125b7f0ea4",
      "Id": "949674706bed48b4a92e1edbd31cc611",
      "IsHidden": "False"
    },
    {
      "Start": "d07427873b2b47a6aa58178754e7a1f8",
      "End": "fc1fc2aff9d64ad2beb4e645bf439932",
      "Id": "dcfeb098d07d4044b3707cce71c34bce",
      "IsHidden": "False"
    },
    {
      "Start": "4113dd08e8a04da7afe2cd989f23af44",
      "End": "9593ba775c844785b90e1a387d23478c",
      "Id": "b674b428c8694f8bbfa20afdad3e229b",
      "IsHidden": "False"
    },
    {
      "Start": "4113dd08e8a04da7afe2cd989f23af44",
      "End": "4a260cd831f84f218d009c627b1f455d",
      "Id": "04af9000e0194bf9a56420caace1b37e",
      "IsHidden": "False"
    },
    {
      "Start": "73532339bd42463fbd30f914031c1e27",
      "End": "f0440ffc733a4e02b05e974e6d34ebc8",
      "Id": "0bd2d06949e4488f8dcc9b24e861d70d",
      "IsHidden": "False"
    },
    {
      "Start": "d447d1c0831b4cb5af9fc0ba52cd4d93",
      "End": "bb2ed35f412a4fb5ae9e68c7a5ab6597",
      "Id": "84ff9ff3d0394565b3704013f0af7c85",
      "IsHidden": "False"
    },
    {
      "Start": "03371846004646d196a928f39560347e",
      "End": "0e6774e250b8439a80fcce1b3665598e",
      "Id": "8e535c9438214d01bf8d9210c2f9ffe2",
      "IsHidden": "False"
    },
    {
      "Start": "3161ae7862454bf0b2705dc16b4005e1",
      "End": "0b0cafaf61c84bfa9d7d084f00f03f38",
      "Id": "ce97fb9df5f8471b96a94c7a2b6a7ac9",
      "IsHidden": "False"
    },
    {
      "Start": "e7f8650d2a4347afa3e5420fdb6edf89",
      "End": "2bf8c2cfebad4215a4a5fbf65390b094",
      "Id": "1dba44050ab345b08ca5d31e3be079af",
      "IsHidden": "False"
    },
    {
      "Start": "30f890dae5144d5ebb178c49efa91301",
      "End": "da9da67ce66941bb9ea9be52db713f01",
      "Id": "a824af22ce67423691c127d1915a5980",
      "IsHidden": "False"
    },
    {
      "Start": "beda1480798744a18024a75a1bf7db8c",
      "End": "acc76d5d09c84269ae1a55ca2574ede3",
      "Id": "221eca09d3a04280a7fd41724d907a94",
      "IsHidden": "False"
    },
    {
      "Start": "fc22eddae9b54163ac276a49185903d7",
      "End": "1a178419620c4cd3a1e277980798b7b6",
      "Id": "62d9360c8a0c43d7aeac1fc22ab8354d",
      "IsHidden": "False"
    },
    {
      "Start": "6d1a3a5c322e40b5be783f32184dccc5",
      "End": "e9c58e31146144eda0c0d7174d0daeb8",
      "Id": "a4dcc33debf4423fa52103829d1c34e7",
      "IsHidden": "False"
    },
    {
      "Start": "96e2abc18ae64edf8c6d691caef47b90",
      "End": "242056b8aac94464a0d6bf400025e470",
      "Id": "ca16c680f9e94147a94488427a7f3ae0",
      "IsHidden": "False"
    },
    {
      "Start": "b3b8bec690c14bac899039aeaf97df2f",
      "End": "e23983dadfff42a4a0eb170a43e3f810",
      "Id": "3ea3e61bf5fb485c8c5ea3d9178ddf66",
      "IsHidden": "False"
    },
    {
      "Start": "7a60338e6b4248e79e994e5d78bb7944",
      "End": "a1a77f907a8b4337a62c71ea285c7ff2",
      "Id": "629a4e66252448069e98fff4a28fca48",
      "IsHidden": "False"
    },
    {
      "Start": "7a60338e6b4248e79e994e5d78bb7944",
      "End": "e3752291c15842e4afa36509b3e04c5b",
      "Id": "f303b4ff5b1d40499e0dec520f5b89d1",
      "IsHidden": "False"
    },
    {
      "Start": "eeac6b78094c496dbacb0294244e7ad8",
      "End": "07c116a1a69d4c60b2fc1f0ed98ea691",
      "Id": "45741d7dc1ec4ec9b82873c852f35550",
      "IsHidden": "False"
    },
    {
      "Start": "2e36db0ea4f74e4794600a973c4bf612",
      "End": "ac349d26858541bda446b36293c0fea2",
      "Id": "8b99fbddc5e24456a856aaff9adeb4f2",
      "IsHidden": "False"
    },
    {
      "Start": "b7a2073f55c44b80874250a752587827",
      "End": "c897e72c1d4742d6a681947068375002",
      "Id": "8bf8ea1c7d11464dbe0d5741fcec3f21",
      "IsHidden": "False"
    },
    {
      "Start": "bdfdaca936ee469d8bf98cdd421dbb15",
      "End": "25d034fc344a45c9bc6a92c9357d60dd",
      "Id": "14c662c0596347ad9c4927bcf587a2b3",
      "IsHidden": "False"
    },
    {
      "Start": "f6f844a3eb8f4b9cb8d9077ffb704fc4",
      "End": "8d642421c82c4b308c00a5f877b462e8",
      "Id": "6ce68e9d767a48ee8a0e7ba8be04c764",
      "IsHidden": "False"
    },
    {
      "Start": "f84fa9b57c754bc1b163a91d387e3cb7",
      "End": "064e093a26e54862a5a7f74561b4e113",
      "Id": "7c11e6eb2c774d4c8541d21f419f1a44",
      "IsHidden": "False"
    },
    {
      "Start": "3f8dee14a0184b84896925421632656a",
      "End": "b21eb1f07c674b17891bea6fd55f5af6",
      "Id": "ffb750aa309a4f70a684dc8450f0e60c",
      "IsHidden": "False"
    },
    {
      "Start": "c6f2929fa05c473795681ff3a901c7fc",
      "End": "b734f500961e49af9e0ddd6558e9fa52",
      "Id": "d008efecbe0a40b3ab62aa27bc89cdea",
      "IsHidden": "False"
    },
    {
      "Start": "eb773aa0fae04293ba53503f2fe943c1",
      "End": "9f477614f04d420ea3c6fffdaf47d7f1",
      "Id": "1aa248d588ba44c8b46014a86c9d4b66",
      "IsHidden": "False"
    },
    {
      "Start": "588cfc7ddbb94bb1ad6f310361335a98",
      "End": "4f285cd68378401aa6fc390cb560592c",
      "Id": "1b1f5b5c9a864d6d93ff70aba5a8e4f3",
      "IsHidden": "False"
    },
    {
      "Start": "9ed20201be564a8b87844bb8a56f7bf9",
      "End": "e70cf977be4e4733b9c3d211c84a576c",
      "Id": "89c10fd5957847459053b8fbd3ed8e3c",
      "IsHidden": "False"
    },
    {
      "Start": "9ed20201be564a8b87844bb8a56f7bf9",
      "End": "c5d7bd2c786543aaabdf3d1c8cb54f62",
      "Id": "07cfd77df513459fba8db13ec1faa0af",
      "IsHidden": "False"
    },
    {
      "Start": "8cd9dad95d184958922db4e84be62c86",
      "End": "20366b6df1a844999bedb4408dd6616b",
      "Id": "b656741e6cdc40aba9329e56fd4dabb5",
      "IsHidden": "False"
    },
    {
      "Start": "d73592b8e23c4816b368b70de8efb462",
      "End": "d5c079ab3a3e4c3387afea897f0b6bd6",
      "Id": "3b190072a12f4ae4a1277aeddacf964a",
      "IsHidden": "False"
    },
    {
      "Start": "635dcbb84bd148afb9fc41ae8fdf48c4",
      "End": "8df4333cb1e9422e923db254aacf96b4",
      "Id": "687f6de67cb54950a4845985189d54b3",
      "IsHidden": "False"
    },
    {
      "Start": "b68429dc2a5d4f0f80034f09c1b7b123",
      "End": "d9c8b8c556d64e05969a1ce3560445b1",
      "Id": "401ef7ee83f74791b69bdd9ad30fbcd6",
      "IsHidden": "False"
    },
    {
      "Start": "bf739b4c52f94246bb86353d05807c78",
      "End": "95af1ac93bf249c1a3d1504dadaa69b3",
      "Id": "4a8062c50f8f4422a6d8268b92c62ce6",
      "IsHidden": "False"
    },
    {
      "Start": "058390b1101940b2b38d250d511efc35",
      "End": "fa809690532d41659ee6808227f2a3e0",
      "Id": "ab47dd84d82742d9a440d3d9e0170695",
      "IsHidden": "False"
    },
    {
      "Start": "b187180c159346468d0c63146c0aed53",
      "End": "cc9b4020feab4992b4823d381a40f856",
      "Id": "c4276f4e15684e048ca76f4fd193bc00",
      "IsHidden": "False"
    },
    {
      "Start": "59b1d409dec44db19be7f3348041e57c",
      "End": "af9b26aaecd8429da0f66e0ba9bf35bf",
      "Id": "fe9bf2aca22d4903a88057a7461f60cd",
      "IsHidden": "False"
    },
    {
      "Start": "59b1d409dec44db19be7f3348041e57c",
      "End": "b733f64308754057917ea416db384c38",
      "Id": "1ea40278c14247b199fd29aacb097d04",
      "IsHidden": "False"
    },
    {
      "Start": "57d8526543f64c1f92a0b90f87837397",
      "End": "9793ae13390a49e08510712483bbb33d",
      "Id": "d202f05398ef4164aa39b4eb68468c52",
      "IsHidden": "False"
    },
    {
      "Start": "98265d645038440999f0458166153208",
      "End": "9876a81da2c54c688068c8d763e8c7f4",
      "Id": "35c0c502439e4d358d9f8fe709bfd5ba",
      "IsHidden": "False"
    },
    {
      "Start": "f366e60ece444f9bb8f7ae967e9c03c7",
      "End": "523c8c37089e419ca5679046b2a56903",
      "Id": "c9c042b7fcc5493683d63fa75455c851",
      "IsHidden": "False"
    },
    {
      "Start": "0cd4526628d845f49c11fd6fd47f6043",
      "End": "2692ff2533cc4a5e91bb9d4101f4cbec",
      "Id": "5b3e3637bbd94d34954e30a85b3816b6",
      "IsHidden": "False"
    },
    {
      "Start": "9474c6d709494dcd94fd9c9c524c08b5",
      "End": "909edf97c11a46a0be2627cad47011e7",
      "Id": "414c2c042fc04d3389f4bd1ee5929a72",
      "IsHidden": "False"
    },
    {
      "Start": "2aba7b5366ae4a0b80556daf3f53cf9d",
      "End": "5d3e0732dd2c472bb484d3f8e3358206",
      "Id": "a191361a7b7c41bf87a885904203ee93",
      "IsHidden": "False"
    },
    {
      "Start": "357567d0d83a4eb883435b0d96816623",
      "End": "2b4dac08ff6e42708c082c91e4981bb5",
      "Id": "f39ad261c30a47fcbc9bad0feec79ed5",
      "IsHidden": "False"
    },
    {
      "Start": "c8541f98d6064aef82518324dd99a27a",
      "End": "b05781eca4af439baf8d4fc166f91c20",
      "Id": "6ebe37ab8ae64d7d8279cfbb7413768f",
      "IsHidden": "False"
    },
    {
      "Start": "184193220fde4a169eb92b06a45d4534",
      "End": "cb51a87c65ca4a9183642a0b8cd0dfec",
      "Id": "3a70a325a384448fbb96830bf6d23e37",
      "IsHidden": "False"
    },
    {
      "Start": "22c23ea1fdd949898a96d4d9c9e2c9e6",
      "End": "3637001223f040e7b9ecb58937a2ee35",
      "Id": "70fd3d9d20214709b8e640a92cdd4a32",
      "IsHidden": "False"
    },
    {
      "Start": "384bda1527b14a02ad70bcb48bf9ae0c",
      "End": "e5c75a90ee7c49bca9de68cba1747511",
      "Id": "5e3b0d588561468ab0a823995a6307d8",
      "IsHidden": "False"
    },
    {
      "Start": "72a0a40778a448b3a9128f2dfb3c160c",
      "End": "4c0aef380d8d45bbb79aead3af6a5d11",
      "Id": "68ef51fd11c74f5894657b987a510903",
      "IsHidden": "False"
    },
    {
      "Start": "72a0a40778a448b3a9128f2dfb3c160c",
      "End": "01bef28ca04d4f2e9bf628a1a43ee515",
      "Id": "9e806610b12749f8913e5b6b7dd6e163",
      "IsHidden": "False"
    },
    {
      "Start": "6e1e3dcd116c48a4b5b4ec570debd5e2",
      "End": "1736d37080c342a580f4dd5889c762f9",
      "Id": "dab4b5f051ea40de94eb297614cbb350",
      "IsHidden": "False"
    },
    {
      "Start": "1732770a7dcd49a18e9c8410aee434e6",
      "End": "3a3d0e3a9f1845288360c0b54cb99134",
      "Id": "51dfe7297e35410ca84b670a042e8f88",
      "IsHidden": "False"
    },
    {
      "Start": "c0ee124931d04e5a966a08bf69fe6174",
      "End": "22d623df30bf450da7be31a742f36440",
      "Id": "c442123826dc4f75a69f6c3d9f8baf80",
      "IsHidden": "False"
    },
    {
      "Start": "964e99975442467b9ccf483f41e6ffd6",
      "End": "fa4838f012894beab18804223f6829c2",
      "Id": "b497479dd1564d248e096686ce7e5a01",
      "IsHidden": "False"
    },
    {
      "Start": "270d6ab2bd2b4fcdb120467328cea542",
      "End": "d73b822f43504213a84cdb19a251aa1e",
      "Id": "78d0b9d692e94fd48a379103584b39b3",
      "IsHidden": "False"
    },
    {
      "Start": "0457a3b6ba3644639f3578d6ce652ef5",
      "End": "1db585e8802a43aca73392fb108e8e99",
      "Id": "360d623fb75346c6a69aa30c6ef6a084",
      "IsHidden": "False"
    },
    {
      "Start": "f46660623357474dabe8359b7e83aad6",
      "End": "8d89817eb60a40259df9973764272ed5",
      "Id": "b9402305a5e44768994766bc983df86b",
      "IsHidden": "False"
    },
    {
      "Start": "21972356ef00424c8b83501b20d8952b",
      "End": "330ab2a3ef344e5492275b6723165008",
      "Id": "25e6ac53096c4d1c8075f451f1489ca9",
      "IsHidden": "False"
    },
    {
      "Start": "8535157851f34111a81c8783a8cb6dd4",
      "End": "7059c4a572c640d5a466132f0d9540a0",
      "Id": "5dd276675bed4518ae4296bac672b306",
      "IsHidden": "False"
    },
    {
      "Start": "37f03417e37b4f94834aad22b154d76a",
      "End": "6f97814f7d9b497dbaf8db4524f8941e",
      "Id": "f6c5f6b4983d425c937c64c4ebcafd6a",
      "IsHidden": "False"
    },
    {
      "Start": "2cfec80a7edf44a0b8cf4fb87fb2bbf3",
      "End": "01e6e6de65da43018f051c9391d32686",
      "Id": "9fe6723b40464138b8fc3287d001e6cd",
      "IsHidden": "False"
    },
    {
      "Start": "2cfec80a7edf44a0b8cf4fb87fb2bbf3",
      "End": "4113c1ee3993408e87ba84d7fff0e2c0",
      "Id": "b57a4481032a4676b12445691289e55d",
      "IsHidden": "False"
    },
    {
      "Start": "aa834d5cd58142a28c509d516fb3aa47",
      "End": "70836b716551452a95555a46c47786ea",
      "Id": "b9e068e2cebb46d2ba22dded5bb7c4f9",
      "IsHidden": "False"
    },
    {
      "Start": "b5088d89be2e46878c324b7da9d926cc",
      "End": "a80e5f5d66f846bfaf2e8ec11271b11a",
      "Id": "126fce57b59642a992a945ade1efd9d4",
      "IsHidden": "False"
    },
    {
      "Start": "89020b6ab7be429ba1a695a27344e31d",
      "End": "700d0c6b79904b75af446c9424dc96a8",
      "Id": "4733c9bd967842ebb6cf6bfa83059832",
      "IsHidden": "False"
    },
    {
      "Start": "89020b6ab7be429ba1a695a27344e31d",
      "End": "4d20023e95274fecaed612e769e44052",
      "Id": "05b40d88138e4c1ca011223901c5468f",
      "IsHidden": "False"
    },
    {
      "Start": "1055f3e6058946939ec3e9892c006ab3",
      "End": "ebbece510e174bcdbc6df699d6ed315e",
      "Id": "47887d75826f4904b5f2a71c4fb34127",
      "IsHidden": "False"
    },
    {
      "Start": "bcf53a43babc459f99fb5117ee8ab068",
      "End": "117ac80b02114cd8b87bcff232682fe5",
      "Id": "da2ced23df4b42f8843338a35e54ffc7",
      "IsHidden": "False"
    },
    {
      "Start": "8f3b434069f84ee0a153dd778bada3ea",
      "End": "d53d0028006943b39404e7373a8c27ac",
      "Id": "daeed2608ad6459481c7810b04d1cafc",
      "IsHidden": "False"
    },
    {
      "Start": "222fd1d357ca47efbff0833dd0ed5c95",
      "End": "234e5f263d404ec885aa0555329f514e",
      "Id": "3fccc4bb1eeb4ecf92371306cfd32118",
      "IsHidden": "False"
    },
    {
      "Start": "d69e4680850c41fea7d05b2557d3f0ca",
      "End": "d45bf5097cc0440781ad6e7d71235960",
      "Id": "5e0a8f52e20346299e60cd72f1414b69",
      "IsHidden": "False"
    },
    {
      "Start": "7f42842775394647966fc67d6d2fbf7f",
      "End": "536c30a25f6c4ce786c1246e3c0bb059",
      "Id": "bfb27dcfa9e54b5aa72a7dcdc06e6e90",
      "IsHidden": "False"
    },
    {
      "Start": "29c3096ef08c44fbaaba58bfcc411d3f",
      "End": "34ce65da5a94412187f2e35c5bc8345e",
      "Id": "2f9358224ebf4594ac9a9027c5941010",
      "IsHidden": "False"
    },
    {
      "Start": "d22bf48708b64c22af8ddef6177bc4f3",
      "End": "62b652a25ff645a59282768e2b3e175f",
      "Id": "fbc435eb8f30431480fa5efa5513671b",
      "IsHidden": "False"
    },
    {
      "Start": "d22bf48708b64c22af8ddef6177bc4f3",
      "End": "ae48c87007364defbc14731f7020424c",
      "Id": "d02f005c64d54d68bb9cc0b2f4eecfcb",
      "IsHidden": "False"
    },
    {
      "Start": "7fffd9a2f0794acbabef780c4b57812a",
      "End": "bc8120ad75164f10a8c8fea3d114df33",
      "Id": "5cfad400ca0a4b67898efba76c28d54b",
      "IsHidden": "False"
    },
    {
      "Start": "dfdf1fda2efe4a83bc16898f35746060",
      "End": "26332212d7fa477e87030e02739e6e52",
      "Id": "d65b605ab2e144a2b7aeac7c8bca6e36",
      "IsHidden": "False"
    },
    {
      "Start": "dee393014def498ebe4d91b560c63f7c",
      "End": "d41602f6e66e46b7b830c7ee3525e64b",
      "Id": "e8a73f5545fa4cbf953baef8b1549110",
      "IsHidden": "False"
    },
    {
      "Start": "826299ba23a545409381e48eda04660e",
      "End": "8ee4d533a38e4f1397df5fdec953ea82",
      "Id": "3735579a43484be0b994e5870ab2b3f1",
      "IsHidden": "False"
    },
    {
      "Start": "5c50f98b7a394eb6b9548fb9245c2860",
      "End": "93b1c46d8c7e48849d88fbfb005ff4e3",
      "Id": "f2b04067695c426da4f089d44f13fd9b",
      "IsHidden": "False"
    },
    {
      "Start": "219ad5ab7216476ab71cc6e4c73efe08",
      "End": "41e5dd4695ea4057b5f3ebde346242fc",
      "Id": "1620c29d79604364a17a83f5fd853ac2",
      "IsHidden": "False"
    },
    {
      "Start": "f270030153704e6cb19643917e84f40d",
      "End": "38815681b68641cd8367e07738b9acea",
      "Id": "c953b9ed8d244e8e9cf7464a05b1f7c6",
      "IsHidden": "False"
    },
    {
      "Start": "3ea6d9df5e464919af2a31ec643039b8",
      "End": "16edb41f3937468faf67825364121dbf",
      "Id": "4dd2754388384e57a0580ffe35bba4e3",
      "IsHidden": "False"
    },
    {
      "Start": "3ea6d9df5e464919af2a31ec643039b8",
      "End": "32a06c44f6364d3fb8c80f0a538717ae",
      "Id": "2577c19428e54f1a878970cc4450f710",
      "IsHidden": "False"
    },
    {
      "Start": "b3a654aef8384eff84ca5718346861e7",
      "End": "012979e8ec52439198f74935cd0c6d82",
      "Id": "e7d50b624e2546aea0e799858b139062",
      "IsHidden": "False"
    },
    {
      "Start": "c084a82d0c104fdbaf7bb1045ab0f4a7",
      "End": "1ec6a25cdca84cd29b80fa9b6c8f8b3c",
      "Id": "46b381b9a17447f8a005d49fa1398478",
      "IsHidden": "False"
    },
    {
      "Start": "eeaf5658a9924c4ba729df645b7e9a92",
      "End": "914a0f89bf3747e0831065cd03048ca0",
      "Id": "be0849a756c64aa4a471371254cefdc1",
      "IsHidden": "False"
    },
    {
      "Start": "e144ff5ea7a9435c93e26baf931f279a",
      "End": "45f243d17c534552bb322220e745bd3c",
      "Id": "b6700238bcf447a6aa803f9467f44d19",
      "IsHidden": "False"
    },
    {
      "Start": "0ce8b39d153548f9bc1ed53d4aca879c",
      "End": "9a76e9af64b84caa9652c39cc17c39cf",
      "Id": "8f9e4ba7ca5a495cbb910865e04268f4",
      "IsHidden": "False"
    },
    {
      "Start": "812a723652cc4e4aa2f5dfd1e780aeae",
      "End": "8aef498fc8274386b2d29f02efdcc4af",
      "Id": "4648abe16e1a44faa7f9c8fb730186e8",
      "IsHidden": "False"
    },
    {
      "Start": "5ba0dbaac7df42a99600563516d67ffa",
      "End": "5b780a1a782a4494ae637e64d968e5b8",
      "Id": "027c623ff8d04edf87abbd201e27ae16",
      "IsHidden": "False"
    },
    {
      "Start": "495520d361aa4aee8abfe0193db91393",
      "End": "4eaf338dff164277b34b9133b323a42e",
      "Id": "c458c114f33d440ca1f4de848da7ae8b",
      "IsHidden": "False"
    },
    {
      "Start": "95c08ff6573546a5ae80b18e9521d6b6",
      "End": "945c057527154eb1af959d3280e70cfe",
      "Id": "284bb04c8c9346779aff69b46f576323",
      "IsHidden": "False"
    },
    {
      "Start": "9783dbd800a841ac9b9b70ec48558775",
      "End": "c06f23fe87de49f68635525bdc9484b5",
      "Id": "19a5d273a6a04215a85b9a3f6a699b17",
      "IsHidden": "False"
    },
    {
      "Start": "9c95fe09d05145949c685ee0ab9aff3b",
      "End": "73db7b113b384df6b7f4d5418d607c53",
      "Id": "b0c98778845d4a21a03fc2acb3ed6eb8",
      "IsHidden": "False"
    },
    {
      "Start": "d319901e83c0446fbb7d3d5fec4684b2",
      "End": "b19ccee5f7724e88a69a9fa151365548",
      "Id": "d30d5eefeb8141d1bafb472254975616",
      "IsHidden": "False"
    },
    {
      "Start": "d319901e83c0446fbb7d3d5fec4684b2",
      "End": "9d478e1062234662a1921faa9fa2a53b",
      "Id": "efb79918587d46ea850ec63a996e547b",
      "IsHidden": "False"
    },
    {
      "Start": "5942db171cb847df8b64b611609616ec",
      "End": "2e4b206b544c41e4ad50caabed2d014c",
      "Id": "54431d6d7b654bc8a1f54f10a0f3bc16",
      "IsHidden": "False"
    },
    {
      "Start": "56fa8bcc1dbe404cbd47f57b90b27be3",
      "End": "e4aab1a290e744458955399dcdbf9cb9",
      "Id": "d0a56865ed0246ff8db93e04d74ecab2",
      "IsHidden": "False"
    },
    {
      "Start": "58075a81eb574b81bbf87cd0da9e1124",
      "End": "86af544ef29640609292f24f5243bb5d",
      "Id": "340af72cabb14323aa8349ac9908485c",
      "IsHidden": "False"
    },
    {
      "Start": "268124729b574eb399a483fd5a7ad2fd",
      "End": "4cd4d7a37c0a4a748578a6b20e65523a",
      "Id": "28a332379f704cbeb360fb077653a7a8",
      "IsHidden": "False"
    },
    {
      "Start": "34fa0b588f67446dac2c41bbd9a48158",
      "End": "1c3360701d2049d695578029cbed28ef",
      "Id": "c03ea9afbe1c490c87d32ab25f5f0d8b",
      "IsHidden": "False"
    },
    {
      "Start": "f9e3ea75e4214dcc9dc63e2210b90489",
      "End": "6b899362407c4b1097b700cf07ca7262",
      "Id": "d0b6719849bc4655aac946f230625e02",
      "IsHidden": "False"
    },
    {
      "Start": "48dc049e6761445fbd9eccf12af1271f",
      "End": "f3d21d2378ae48d699b823c88594fceb",
      "Id": "280441b70e0b4833ac8f94661006ba5f",
      "IsHidden": "False"
    },
    {
      "Start": "ab7d4baba43146a7b476a2fc258fbd7e",
      "End": "08d5cceea1ee49baa06c7db12363e31e",
      "Id": "8e99e4eb757b42559ad72fa1b3432843",
      "IsHidden": "False"
    },
    {
      "Start": "d733721d85eb458d9a71a852ac3fd79c",
      "End": "b92a64bc2afb4deda229e1f1ee2b4b22",
      "Id": "ac309d15b9a74aa3978d993268e901bf",
      "IsHidden": "False"
    },
    {
      "Start": "3303fccf951e4a7da89e590f095c54ab",
      "End": "1cad9d93e953424a896bb26cc5fd209b",
      "Id": "bf6725f08ca746e983bb7d4ca21defb2",
      "IsHidden": "False"
    },
    {
      "Start": "302e6b10d82c401e94f659a66f084bff",
      "End": "18042f6c09d343fcbc089d0366ed7926",
      "Id": "ff24a7420e754c3c9945f4ab8d570ec9",
      "IsHidden": "False"
    },
    {
      "Start": "302e6b10d82c401e94f659a66f084bff",
      "End": "06803c859f354d7894bb08ff982c7797",
      "Id": "e53e517850744fa995601239bce1ad23",
      "IsHidden": "False"
    },
    {
      "Start": "1416311417fa464a811bb62b9d44ee35",
      "End": "0f0d24bedb0c4a6d85c6612ec17f6a87",
      "Id": "d53d2a8f781b4a46b57b54925ff9193c",
      "IsHidden": "False"
    },
    {
      "Start": "c01e9003394f400187b8a74cfc7faa09",
      "End": "3d23c712704948079376d7aa8a237761",
      "Id": "6443d14444aa46ee8bb88457e17dd555",
      "IsHidden": "False"
    },
    {
      "Start": "5034a728de8840fca4d4e23124505d03",
      "End": "0a8210c0998343f29771094d53d5457f",
      "Id": "890afd4acf654f649e00539c7ac4e10c",
      "IsHidden": "False"
    },
    {
      "Start": "5034a728de8840fca4d4e23124505d03",
      "End": "b2eafbbdf71e4dc095fff271cfead423",
      "Id": "3e3623d1e186407da6a2889c53940248",
      "IsHidden": "False"
    },
    {
      "Start": "334ff13f63714087ad25937d66076704",
      "End": "3fe07648d027461dbd8e2377b4665f2b",
      "Id": "5e87ce005d9a4507aef788c6d7cc6d6b",
      "IsHidden": "False"
    },
    {
      "Start": "b7dd4b67c9754d32897492b04a674dc4",
      "End": "8887969e61e34ac7b2ac572fb38e65b1",
      "Id": "f4c806d0f71541d0b08b39d0bff11e4d",
      "IsHidden": "False"
    },
    {
      "Start": "b7dd4b67c9754d32897492b04a674dc4",
      "End": "544594d08326420da446fc898c016370",
      "Id": "394699ec404a4b42a6eba0195f442d09",
      "IsHidden": "False"
    },
    {
      "Start": "b7dd4b67c9754d32897492b04a674dc4",
      "End": "e600fbe0370f4e1fbcf8da5d369f1049",
      "Id": "b0b929f58d894e2dacb3893d0f961123",
      "IsHidden": "False"
    },
    {
      "Start": "363c9f17700c4f17a4f5f391e2ac7ff6",
      "End": "4c86a951d6714b8d990cedae596ce42c",
      "Id": "ded7278536a047a1bbe69268677c7037",
      "IsHidden": "False"
    },
    {
      "Start": "2a5436bd6d9f4cb1817c12e2cb2cfc5e",
      "End": "1e300aa18b764861b074d28b68d2836b",
      "Id": "28db4b6810444a519a799648ab2e7555",
      "IsHidden": "False"
    },
    {
      "Start": "2a5436bd6d9f4cb1817c12e2cb2cfc5e",
      "End": "7a694aaddc5b481aa07a5e82cf93c017",
      "Id": "e52fdf51947542a39d3e6aaa05f05845",
      "IsHidden": "False"
    },
    {
      "Start": "ca3c15d92a1446f697f5207e93b69ef8",
      "End": "761b21aa21264041803b632f0cf3741a",
      "Id": "f0e1ce46792e42b182ecd678c8c0d449",
      "IsHidden": "False"
    },
    {
      "Start": "ca3c15d92a1446f697f5207e93b69ef8",
      "End": "caefbfcae75c4ecb86e35fcd95ae6484",
      "Id": "bb870162291c43b38bf34a565763eef5",
      "IsHidden": "False"
    },
    {
      "Start": "6fc099efb668456a86eadf83b026a04d",
      "End": "0c342301b9904e73b9b1d5dae1e14f05",
      "Id": "c0a3669b4c2e482e90ae829ac91b0789",
      "IsHidden": "False"
    },
    {
      "Start": "a5ecda0b667349c58119eba6d33ff74e",
      "End": "73eb38fcbae043e196f4f80506c45a02",
      "Id": "f37632238bdf47cab1258af668f47efb",
      "IsHidden": "False"
    },
    {
      "Start": "703dc331422c47c1a4d6fe5a40381cbe",
      "End": "39fc296c16f74f4f85def509336ab0b8",
      "Id": "8f05221813df464f87f856671f727b23",
      "IsHidden": "False"
    },
    {
      "Start": "da5734d67ed74c76b14b50323e371288",
      "End": "d0dd53ca705745c8aa4db03e5e2d710c",
      "Id": "e0b7abe529a14a638335d588685a0d08",
      "IsHidden": "False"
    },
    {
      "Start": "9b9bcd2973914b61bdd73121df0d83c7",
      "End": "3d6b54c73380464c8cbac6b5cb99b1c6",
      "Id": "59b8facd23ed4bb2b7ffbbc4de8f7055",
      "IsHidden": "False"
    },
    {
      "Start": "46c06e3b80404334a2ae09a8742d5281",
      "End": "613a4cd63eba484d959e196fe5759a3e",
      "Id": "0a7e34d5e8f942579f666108c928b7eb",
      "IsHidden": "False"
    },
    {
      "Start": "3318dda404854d3fb53caefe77555199",
      "End": "b1024a496f3f4a579bd8707598465867",
      "Id": "090d23f801e14fc38eb6dbb059a08209",
      "IsHidden": "False"
    },
    {
      "Start": "141e6b3dfa2b4b86816a3e0946f8c980",
      "End": "839abb861a534b31a06023bac2a55b88",
      "Id": "7927818da295496eb20c9bc2e74456ed",
      "IsHidden": "False"
    },
    {
      "Start": "763098aa6c1b44d0ab540b884ce5fd1f",
      "End": "f421bbe4084f40888c2d94b92d289fd6",
      "Id": "4a250189c2ad46b285660deabf8a6ca8",
      "IsHidden": "False"
    },
    {
      "Start": "804b5d7bab8b4dadbe87efb0451daac9",
      "End": "78a917283dcc4d6daa46a00e723da85d",
      "Id": "d49bcc3dd9864a89ab5e3cbc15797754",
      "IsHidden": "False"
    },
    {
      "Start": "fe068370b0164f52b88d6510f25eeeb7",
      "End": "993986b45e524259a7493ba3368c0bf9",
      "Id": "b587568cdb564530aff2409c64a13cee",
      "IsHidden": "False"
    },
    {
      "Start": "eeb440616e8e41568651c3ee3728195f",
      "End": "ce99e524ad914a9d8feac0aa152c666c",
      "Id": "11902594b89443fe9726399e5f242340",
      "IsHidden": "False"
    },
    {
      "Start": "d996a72125b4480fb30c9a8f5fb15f89",
      "End": "344dcb7fccc9472a91442b30565f6718",
      "Id": "865231f52dd74448a625e89c112e2645",
      "IsHidden": "False"
    },
    {
      "Start": "a919542e472e4d638221c872b620dcf3",
      "End": "93fe593b14c642cd8c2f6021d80c9aa8",
      "Id": "710bcfa8135a4b579e7ccf77d9b1c214",
      "IsHidden": "False"
    },
    {
      "Start": "b131a73a48bb496aa051b0443e61126c",
      "End": "ac0878a4f6fc4ef4b2d3256258238948",
      "Id": "52b6671c25f8412c96e3b5d0bcbe2ad4",
      "IsHidden": "False"
    },
    {
      "Start": "2fe31eadc0ac4b18b615a79666769613",
      "End": "d52f0a0e74d64d3aaa600407883fa12c",
      "Id": "666e05d342c847a1ae403f2edf0193f3",
      "IsHidden": "False"
    },
    {
      "Start": "2fe31eadc0ac4b18b615a79666769613",
      "End": "52ca168fb72143e69226cdbf123387e1",
      "Id": "78f089e86f58446d84a7b0407cf790c6",
      "IsHidden": "False"
    },
    {
      "Start": "20220c9079fd4f2fb652daf889b85969",
      "End": "28bd45a55df64fdfbb62f94fded86a8b",
      "Id": "0dc178a4b9ad41789db3fcb47d47ad48",
      "IsHidden": "False"
    },
    {
      "Start": "7c197d95dff54bc2811df139402bf626",
      "End": "08ee4606d46347ec82f5757f25d758a5",
      "Id": "ca14152104a44faf8e12e0d09cc6ad1d",
      "IsHidden": "False"
    },
    {
      "Start": "0751872733e54fe3a83abb4e59d4be66",
      "End": "0ecdcc4deec34e26a9f32e9218970237",
      "Id": "c7829963786245ebb1e65081a6b6a583",
      "IsHidden": "False"
    },
    {
      "Start": "4e89d0323cfd4a898f7c47bcb1297ad7",
      "End": "468a39b7cec346efbfd93bf60c910e62",
      "Id": "101382ec02424d7e848d7d1f41db9a5e",
      "IsHidden": "False"
    },
    {
      "Start": "4fa00d28cdda41dab02c1d3860f2cffe",
      "End": "98c40eea9e4a4da9b77c764ae137f791",
      "Id": "fe8eac4a22b443169614d9f8a9a5e649",
      "IsHidden": "False"
    },
    {
      "Start": "82bf62dc2aed4f1cb3b86a1083c0474c",
      "End": "745829897df542f39828bebf2867e9ec",
      "Id": "3931f1bef24843a49f74c6be288bb0b4",
      "IsHidden": "False"
    },
    {
      "Start": "a5e0c677458e48c28110f8d167e4038b",
      "End": "10ae83a69f51486189e20aa6a087f160",
      "Id": "d2ea0b3c338944aab29893be7dfbeb13",
      "IsHidden": "False"
    },
    {
      "Start": "ca01df9d145c4c3f9973baa194784762",
      "End": "4e3710317b3d43bbad2ff44f8cabb1c0",
      "Id": "9e06da4fcebd4292b0d13e3524c9137c",
      "IsHidden": "False"
    },
    {
      "Start": "5d05b3e7efbd4ca58ee34db5ce8930f4",
      "End": "a4e8c6d3914e4c7b9b3150387bdf6125",
      "Id": "a54f6864c48548bba8995d68ba2eb95e",
      "IsHidden": "False"
    },
    {
      "Start": "c383c10a94574b09a0966b03cf329535",
      "End": "3f70e646a70842ed9d08702d2600be70",
      "Id": "dacbbc706982427da93ea242b5a763d7",
      "IsHidden": "False"
    },
    {
      "Start": "c383c10a94574b09a0966b03cf329535",
      "End": "cae6fcdfe2ef46128ef170e11bb94449",
      "Id": "e7aaf2c2e4d9433481b449331dfae963",
      "IsHidden": "False"
    },
    {
      "Start": "ee9b623c33364120975f6cf0bf05040a",
      "End": "b4ed4bc6b2b044c188d1b4e53380b211",
      "Id": "eabcdf047aea4c9980ed070547b6558a",
      "IsHidden": "False"
    },
    {
      "Start": "9ea3bb4714164de4ac200310537d685a",
      "End": "1f4d35bd39f744daa4b64a4420a80f5a",
      "Id": "c34ac2b7d18e4fde95fb38d0300d919d",
      "IsHidden": "False"
    },
    {
      "Start": "3162c7863f9f44e88a41d4df32de643f",
      "End": "00e6824a86114df89daafaa279e21391",
      "Id": "ffd7fcf4e20f4e0092df93b33753988a",
      "IsHidden": "False"
    },
    {
      "Start": "3162c7863f9f44e88a41d4df32de643f",
      "End": "11ecb9c1fed04deab0a1d0bd5f199456",
      "Id": "38cd851d81814aa0b755ed2422808198",
      "IsHidden": "False"
    },
    {
      "Start": "3162c7863f9f44e88a41d4df32de643f",
      "End": "6cd0af1fc7e04feaaefec9466db3983e",
      "Id": "d6c4bec9f18642d8a01619aff9433263",
      "IsHidden": "False"
    },
    {
      "Start": "3162c7863f9f44e88a41d4df32de643f",
      "End": "74830f5a17c84314b4156cefb861f30f",
      "Id": "a255e74845b244ddbbc6fa1a4bc92431",
      "IsHidden": "False"
    },
    {
      "Start": "7569b08551e34ce1a149addc3589e39e",
      "End": "bf643c6450674440b88b9ce08da1e7da",
      "Id": "603dbb9f5169471fa45ba5850279142f",
      "IsHidden": "False"
    },
    {
      "Start": "1204c7b699fe4b8c96e5bc1c2cd6a0cd",
      "End": "eba9d95ecc074121b00027a41242cc07",
      "Id": "001fddc07e7b478fb718437001b6a72b",
      "IsHidden": "False"
    },
    {
      "Start": "b92556be957c40edb4e4bec1b390d4c9",
      "End": "dc02ec98cafd4b59be5da3a07362d568",
      "Id": "991eddf5d9fe42b6baab03ae984f5348",
      "IsHidden": "False"
    },
    {
      "Start": "8c64e605d6e34eb795c53104eac4c761",
      "End": "91b48b8bdd7e4bd2843146f27fe4aab9",
      "Id": "84c2992a3640436f9a17b16a3566b80b",
      "IsHidden": "False"
    },
    {
      "Start": "8c64e605d6e34eb795c53104eac4c761",
      "End": "10e273ad06fe4a87a4a445fbce195952",
      "Id": "b1567109a4a848659bc790114bed3467",
      "IsHidden": "False"
    },
    {
      "Start": "8c64e605d6e34eb795c53104eac4c761",
      "End": "2e93521aef6b4e76816122b112c42f64",
      "Id": "0fac7bd8566e4bfeb3f3062ca202ddb1",
      "IsHidden": "False"
    },
    {
      "Start": "8c64e605d6e34eb795c53104eac4c761",
      "End": "0949804445084f07999a9490ddca97e7",
      "Id": "8a55e3e258c84739afc4a1a5b12a3273",
      "IsHidden": "False"
    },
    {
      "Start": "c2cdc5ef04f947658ed1796a04b829ce",
      "End": "4915c9129c4e4716aac4a99437d079f0",
      "Id": "b22eb690fb9649f599a400f29579b96b",
      "IsHidden": "False"
    },
    {
      "Start": "55abe5411e6b443a8706f3c010833d3c",
      "End": "56393ad4473e4b8f9d13a1ec4d718ac2",
      "Id": "fe20c467c25e4ed4ad3b1b9c84c79698",
      "IsHidden": "False"
    },
    {
      "Start": "85326cb38df94181a14f348593e3a66a",
      "End": "666fe2aa7e5c4f2fa0ec300403323524",
      "Id": "73c467293154425a85794f4b1a144cde",
      "IsHidden": "False"
    },
    {
      "Start": "110b2f0222ff419aac39c4266fedef0a",
      "End": "0574ec063e5741ecb9eeb6327f3de56f",
      "Id": "ca055eaeba9d4d699bd8cf8ab9f84cbf",
      "IsHidden": "False"
    },
    {
      "Start": "eb90166d1cf84fa5961753236f0e107d",
      "End": "de82dfe0e7064f85b0c580e832929136",
      "Id": "ddbd3fc805de4b6f9be9efc752c1998e",
      "IsHidden": "False"
    },
    {
      "Start": "307ffd87862d41a88fc3bc3787c297fc",
      "End": "9bdb46f167424505ab02397df4997d42",
      "Id": "3a2613c1c2524203b4dec210b7ad9538",
      "IsHidden": "False"
    },
    {
      "Start": "0d5a2b2267974932890355ae7376c765",
      "End": "7c10aee39b9549ddbc590e7f780b8db0",
      "Id": "5d6c00c067f1421a9d29d300beceb323",
      "IsHidden": "False"
    },
    {
      "Start": "90511cce8f584ba6bc5a659cdefbcffb",
      "End": "e17b47e7852d4d479dfb4a5a48f15c6f",
      "Id": "3f3e9e14e817453a9f0910a1d88ab628",
      "IsHidden": "False"
    },
    {
      "Start": "93d39761230c478fb3d09eb13de03874",
      "End": "818a10031e714f67aac8c82b1aafba0f",
      "Id": "063559b1de7f47dd9f17d7ca77285a9a",
      "IsHidden": "False"
    },
    {
      "Start": "6f6eed9815d94c24b38a65b5e1004d44",
      "End": "df6ffa8a8f6e417991ab0f561b410555",
      "Id": "a359d7888dd54dda858b48f81ab8a2ce",
      "IsHidden": "False"
    },
    {
      "Start": "7462cd938bf7492f8b1f0cf574c4324c",
      "End": "87409388268b4d8dae4dd91c156e71b1",
      "Id": "e1c2eda0488e433c967d14532dfd10c7",
      "IsHidden": "False"
    },
    {
      "Start": "5559ef508a2d4a6f95879ab1f99134b7",
      "End": "4b7ec8188b41440598f26d5b15d66e34",
      "Id": "40aceae601fd4e658d1fc19fc51fc9dd",
      "IsHidden": "False"
    },
    {
      "Start": "bf2f9eb5707f4c8b8dc920b81cfb34eb",
      "End": "e8cfde928080430ead8a8ad70513599c",
      "Id": "331acf86fcfa4d62b8854e4aab17ae82",
      "IsHidden": "False"
    },
    {
      "Start": "0b2f71614d6a4a2db9c4563c80b0061f",
      "End": "d6e8ea2f40c84a64a84b621322cfae17",
      "Id": "dc85645296c645d98a76928d8de2083d",
      "IsHidden": "False"
    },
    {
      "Start": "e468105996824c7aa09161a8886ec26a",
      "End": "63c22cb23e404f8786669e2e7c784a37",
      "Id": "0be074543f234465b706d394e1638a98",
      "IsHidden": "False"
    },
    {
      "Start": "05fdb192cb3a40249d10b63818e6d96a",
      "End": "c7767fc353874169b3774a744a9096f8",
      "Id": "1d5843f4a08247169bbc8bc65cef4c19",
      "IsHidden": "False"
    },
    {
      "Start": "32e6c93f65254fe8a2a30e17e9f2b693",
      "End": "dfd4f4fc39c04645a6786bae106539c0",
      "Id": "1fec2f203a8541a3abae0f2f8bd55756",
      "IsHidden": "False"
    },
    {
      "Start": "8d5c7aefc1f34c9e88540473935d1a5f",
      "End": "c49b94980940412d97d7674047f94b31",
      "Id": "0084862dece04e91b29a00bee82e7a5e",
      "IsHidden": "False"
    },
    {
      "Start": "6866036421d74ae7abfa05826f3149e9",
      "End": "7474cd2c4dbf4d9a8ce2ee281e4092ad",
      "Id": "0ad815e7d13a4f25a2a9d75cfcc3b2d1",
      "IsHidden": "False"
    },
    {
      "Start": "66b8943f1bfe49db96f7be1b971acef1",
      "End": "2ad74c0925ba4b67b48b7687958636a7",
      "Id": "eae2b5b645124a8b82054916ebeec67c",
      "IsHidden": "False"
    },
    {
      "Start": "25f6b1b8491343a3b3edb2a294825f52",
      "End": "5effa91c6e724e318860fd6c99409cfb",
      "Id": "c80dc853840c4f1ba790dc172b86794b",
      "IsHidden": "False"
    },
    {
      "Start": "3ade1f990d05445aae56f81524460e51",
      "End": "59a7c33791ce43b0a4e506bb5a52305a",
      "Id": "91ab9f31a8c348a1bf1828eb745006f4",
      "IsHidden": "False"
    },
    {
      "Start": "93992b83ed914023bdc188ad8f5cbab8",
      "End": "1ac805f8af0b45c18a6303437a081c22",
      "Id": "328f4182ddc445a7a88afa3d3bd8520b",
      "IsHidden": "False"
    },
    {
      "Start": "2f36e597f3bf491689b2e10a8d14bb7b",
      "End": "c93bfc85bbec4a42bf84b6852d4e4612",
      "Id": "70d1b8074281409582abf43aef5dcd9b",
      "IsHidden": "False"
    },
    {
      "Start": "2f36e597f3bf491689b2e10a8d14bb7b",
      "End": "b26b54cfe44e49fc96a636ec1ca20706",
      "Id": "308b1baa830047c5bebd7bbe1b9b5279",
      "IsHidden": "False"
    },
    {
      "Start": "4f7f16dc89bd43d48e5c91fcf4fe07a1",
      "End": "8c8afabb369b412c824704a29b099393",
      "Id": "d88e9431880b40cd9ee757b177e4b969",
      "IsHidden": "False"
    },
    {
      "Start": "c3a986925bce4bf7b5a5e8f2f31da521",
      "End": "b1258a3f9bf44e57bf5c56b805cab779",
      "Id": "50ca34d905564f49923101a02d909494",
      "IsHidden": "False"
    },
    {
      "Start": "d6bedf0866ee499f8408db499794590a",
      "End": "802abd6c554c41a9b40404484ec83e54",
      "Id": "d536392b6f644965a3ad002c58bfb1ab",
      "IsHidden": "False"
    },
    {
      "Start": "99383686a6f244ed9cb0d638c09ccc07",
      "End": "fb5f1576a6854281a3c16244651208e6",
      "Id": "9f4fd9f5996c4feea61b04892bb0eb4c",
      "IsHidden": "False"
    },
    {
      "Start": "93c29ff40a494e85bcd71f0be16af94a",
      "End": "b869085c49994d9e9953db1e1784f5c9",
      "Id": "c8ca649844664687814ed3d78ea71d64",
      "IsHidden": "False"
    },
    {
      "Start": "9196350ba90349a38fc63897b4f5aa3d",
      "End": "d076b8fef36242a9a61781d7f501e647",
      "Id": "3b9cc0ceda0b4e759df8bd5a0888aebb",
      "IsHidden": "False"
    },
    {
      "Start": "d7777d44464747049255537b9611df34",
      "End": "d8f67aff20c8479eb2ae62cb5c570469",
      "Id": "ea361a392742474f96de47af6d23bac8",
      "IsHidden": "False"
    },
    {
      "Start": "2f971c42e17d4a9c881ec900174dfc71",
      "End": "da30886880d946e6b76e0e7c10281627",
      "Id": "2761535ca04f4b62850d8a29cb2b0dc7",
      "IsHidden": "False"
    },
    {
      "Start": "d8b4bc7a72ba4187af3c8bb668897d2d",
      "End": "95c2222090d3487695705b570ac5131e",
      "Id": "2f07e2bfad18434b882051d1e2ab18f1",
      "IsHidden": "False"
    },
    {
      "Start": "ee961b18b1ab4b4db9247db7d6897375",
      "End": "ed191869da7e42838b506f4acad5ae48",
      "Id": "9756684aa2064c62b8ac2142fab47bb5",
      "IsHidden": "False"
    },
    {
      "Start": "4e4a1983e40649f69bf6274e1ea429cf",
      "End": "ee0d29a31cc34bcbbe7595148554b26f",
      "Id": "27d9eba7ca67463898b6cf3ce71aa222",
      "IsHidden": "False"
    },
    {
      "Start": "7230148a97964825b5f3415bf044a6ca",
      "End": "0c0736a160214416ba352b4b82cf6f9f",
      "Id": "8d701fdea1c7431cae37ee463655985c",
      "IsHidden": "False"
    },
    {
      "Start": "2a239c9b663f4402973dd8d9ae40132d",
      "End": "ca4350fbd51d429e99da7b593cded482",
      "Id": "eaeef7f50b424cdbbdbbdd6dd50834f6",
      "IsHidden": "False"
    },
    {
      "Start": "13f09e65367a48138a349836bd7e82c3",
      "End": "65aca3b149d9430398d3503b969de798",
      "Id": "5bacf023b7cc4ac88266d27ef28f6afb",
      "IsHidden": "False"
    },
    {
      "Start": "af2dee603a5a4ac08aa9c9e42522ac99",
      "End": "6fccc764a9a241b99d81bb38dc351669",
      "Id": "17ed68fb19d74f039c3aea8b17fd53e6",
      "IsHidden": "False"
    },
    {
      "Start": "7631de9d402a41ebb0587e4683543dd7",
      "End": "efa238e32dea423987e62a1156371e29",
      "Id": "a5243b43c2634a12ad5f23f0d5dc6300",
      "IsHidden": "False"
    },
    {
      "Start": "8a548a91ff8e45d1a127a01f1fa3ff34",
      "End": "805e464b0d48423d8eba757d1a19de60",
      "Id": "a906d9c8aa4444bcab66b0922faea058",
      "IsHidden": "False"
    },
    {
      "Start": "7b740fcc425447c2902e958175c5de48",
      "End": "fc429cf1a27d4ee789f840482246ed79",
      "Id": "94e391806d55434f9041da7d110afba1",
      "IsHidden": "False"
    },
    {
      "Start": "4f7627384e6b4664b53b7a79f13cfacc",
      "End": "a905f2a93bbe4e07b4797d6c6cddeab8",
      "Id": "875b9ab74a554a8fb005d9394f7c2e0d",
      "IsHidden": "False"
    },
    {
      "Start": "30c494e93ec7458798f141aa97ed0000",
      "End": "62a2227b61084c848f216c12dab212dc",
      "Id": "e856010ea78a48528224c7debd84bd33",
      "IsHidden": "False"
    },
    {
      "Start": "3e70912589a84377bf0f18876e326058",
      "End": "4f3990969d7b46cc9b04a87cf41bb8fc",
      "Id": "7d97b9c06664444baf3339019ca3ee04",
      "IsHidden": "False"
    },
    {
      "Start": "3e70912589a84377bf0f18876e326058",
      "End": "35147e94228846f785964694b20ed2c7",
      "Id": "c1c4c0367a064976acbf4045838de171",
      "IsHidden": "False"
    },
    {
      "Start": "3e70912589a84377bf0f18876e326058",
      "End": "56219d68c8f04a7587de5eb1e7611f58",
      "Id": "895c23c2e99246a8adc40612a1c346e3",
      "IsHidden": "False"
    },
    {
      "Start": "3e70912589a84377bf0f18876e326058",
      "End": "cdb2eee760244a729b8f7d3f51e23503",
      "Id": "5281ec4843884e08892fa80c3ffaa7e7",
      "IsHidden": "False"
    },
    {
      "Start": "649ab990a2164dcba31fd949fb168ac7",
      "End": "24d27f4852b048f286f0c61da3038492",
      "Id": "37844710b9594a6398108a48b09b6e5f",
      "IsHidden": "False"
    },
    {
      "Start": "2e3009e8536c47019a5ee638ec5e4b2b",
      "End": "54b4b429dbb34639a58b10488be00efc",
      "Id": "3fcec5095ffd47538e0b0d4919ca129c",
      "IsHidden": "False"
    },
    {
      "Start": "2c23a5e9fb754c6d9a56b4c48306faa5",
      "End": "a157686e940e45f4822e1a1137f7e29d",
      "Id": "dea91ae9cd284c0994137f9d766cb623",
      "IsHidden": "False"
    },
    {
      "Start": "678e5662cf1241dba7d53fa1db7a21c8",
      "End": "37aeaf74bfbe4c0a8ffa6269c85903e5",
      "Id": "ee7a859eaff646b1bc607215992f5a6f",
      "IsHidden": "False"
    },
    {
      "Start": "3844dc2d5a3249d4af110ba929cb5ac1",
      "End": "d566c8e0e6434ebd8a24dec709f5f09a",
      "Id": "e04cf094890744e5826208d34f596159",
      "IsHidden": "False"
    },
    {
      "Start": "e9862eddd6b14b6da59be2dda1d5c6aa",
      "End": "0af2213f342e482ab03229d3e2b7c039",
      "Id": "94420433fe764c98a0fff847c0d22b53",
      "IsHidden": "False"
    },
    {
      "Start": "244e7cd31e0043d1a4e0021fbcfd8bc2",
      "End": "18d460c0915a4a4792d49df6c8880ec1",
      "Id": "dfd0df4de4e346e1a12f7e96c82a2cd7",
      "IsHidden": "False"
    },
    {
      "Start": "3b69945ff6c64bde8dc3e648a781ddbf",
      "End": "bfcbe3da6d4a4f8e84d96f7ce33f5d64",
      "Id": "8eb1c94f1484491886f12dc9d937ba8e",
      "IsHidden": "False"
    },
    {
      "Start": "e8109caa8bd940cf94fd7b7cc5dedcb1",
      "End": "3e5c917f48384a54805df4038bd80e10",
      "Id": "e51e1650d90f40fa8bd869ffbc5cfba9",
      "IsHidden": "False"
    },
    {
      "Start": "e06cebf4ff1345c484163920a0806f24",
      "End": "a1f8fdc2fd66469f916ae4434beca941",
      "Id": "dd1ac1b09ba6488c90b730843236d8b3",
      "IsHidden": "False"
    },
    {
      "Start": "cb21c4439dcb4c6b90278c611a5152de",
      "End": "b119b31a2f2441ee94025c8c7f49d3a7",
      "Id": "f5f4e09a09b242f0a351ce69d0b970cc",
      "IsHidden": "False"
    },
    {
      "Start": "9de516b26feb42b8ae08ff34a0d0f44c",
      "End": "b8986b4fed974f5fbbb0d0370db4bfe3",
      "Id": "e79a589ede9f4aa09ba2a874b627851c",
      "IsHidden": "False"
    },
    {
      "Start": "c0cfe3434aa24a25ac3721e1233681e3",
      "End": "6d15ae5a933742be92b6a8f49a13e97d",
      "Id": "ad4e4efa2448422ba3fca3b93105efb5",
      "IsHidden": "False"
    },
    {
      "Start": "b0f49174d5b44d5090bc64d7ec28c1fb",
      "End": "eadff033ec7c452e9643e00f83ecef83",
      "Id": "22d408b6ffa04512a9f22deda96b857e",
      "IsHidden": "False"
    },
    {
      "Start": "f553e1a94a4a45419d9b3e9e2373e1ae",
      "End": "b4a698394e694ee2b743d538af96c3a4",
      "Id": "79fe785eca264d53b6959d1ed19b9fd1",
      "IsHidden": "False"
    },
    {
      "Start": "72a8573d138d46d29e466061125dd1ed",
      "End": "dcc9745f81854771a1d9dbc5e790bc25",
      "Id": "25574eacc3c34a519e8ce11e23badedc",
      "IsHidden": "False"
    },
    {
      "Start": "128a1a6502db41059d5a39adedfb0ac7",
      "End": "f5e59919c330423191187343f6b3fa76",
      "Id": "b30c97c46676425c833c5c1223dbbfad",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "6e36dac0-5ae0-4ffd-86fa-66044e61bf7e"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "archi-lab.net",
      "Version": "2023.213.1722",
      "ReferenceType": "Package",
      "Nodes": [
        "7f4c4582ec1b4921b82e5e07333469f3",
        "60c545288b95414ebe68507b432efc32",
        "1e91907d97c243b8bc5295baec145433",
        "72204440fc2841b4afd6fa88f4a6e0cd"
      ]
    },
    {
      "Name": "Rhythm",
      "Version": "2023.2.2",
      "ReferenceType": "Package",
      "Nodes": [
        "51c6902a5f5448b4ac6f9c48c9e7ec9d",
        "bc81e7e7e41943cda5f04d8b911bb486",
        "ab2ad1526302454fa85ca1017780482c"
      ]
    },
    {
      "Name": "JsonData",
      "Version": "2.0.2",
      "ReferenceType": "Package",
      "Nodes": [
        "968ddfa902464f8f8900533ed7ec0910",
        "4f630de8caa3470db7db3b15b7da394b"
      ]
    },
    {
      "Name": "Projectunits.dyf",
      "ReferenceType": "DYFFile",
      "Nodes": [
        "326e5aec0aff4f7f80b4e127e8ff9d67"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -18.6297550201416,
      "EyeY": 35.452873229980469,
      "EyeZ": 54.139198303222656,
      "LookX": 31.681245803833008,
      "LookY": -15.337745666503906,
      "LookZ": -66.853019714355469,
      "UpX": -0.0049829366616904736,
      "UpY": 0.99993228912353516,
      "UpZ": 0.010514556430280209
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "SiteLocation",
        "ShowGeometry": true,
        "Id": "577fc7717f3b44d29ec4596a523c595d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10034.844396574546,
        "Y": 2118.8510627625606
      },
      {
        "Name": "Location.Name",
        "ShowGeometry": true,
        "Id": "fe6e75b7adbe42009b1faeca30858b9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10300.844396574546,
        "Y": 2118.8510627625606
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "390297c8de9041b08907be67c477093a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9463.02241265606,
        "Y": 3083.7630536716651
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ae8ec57818c84b94a9d3d2b64aff03a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7821.6890793227276,
        "Y": 2897.7630536716651
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "11ac8fb7a2944d17a278df564d6de1c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8086.3557459893946,
        "Y": 2863.9355536716653
      },
      {
        "Name": "Material.Name",
        "ShowGeometry": true,
        "Id": "0d6e5b1d515e4754ad84d045c712a222",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8839.02241265606,
        "Y": 2935.9355536716653
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "cddfd8fab81046b898e8238f52c24871",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9147.02241265606,
        "Y": 2935.9355536716653
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "44ebe3e859c945d082ac310733460747",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9463.02241265606,
        "Y": 2901.9355536716653
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "c6d15c482e024abe9c25892dd5c88a2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -685.73752690023582,
        "Y": -1724.1171964735117
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "074443f980a946579a49c7bb9032874f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -355.07086023356885,
        "Y": -1724.1171964735117
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "c25c284d6a0e43bc84f6f00dec305491",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -33.833109604801848,
        "Y": 756.83946439163628
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "9c2d2226996d4c629dbe86d3fad39fb0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 169.59580643310028,
        "Y": -1758.1171964735117
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "00c0a093841f4c679a14fe4a22571519",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1328.499776271467,
        "Y": 699.83946439163628
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "a96c24eb62d541d5844715b45076abdf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1685.8331096048009,
        "Y": 676.83946439163628
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "ab368bf2b158435bad3f8c695ef2a0bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2016.499776271467,
        "Y": 676.83946439163628
      },
      {
        "Name": "Green Roof Material",
        "ShowGeometry": true,
        "Id": "732182c5c6354b13a1164c2bc6f4db64",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -672.49977627146677,
        "Y": 847.83946439163242
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "a220189d39ca4093b5b068a0b886e907",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 236.83355706186808,
        "Y": 722.83946439163628
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "8c66e16b355a499487ead985e33886d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -349.83310960480094,
        "Y": 756.83946439163628
      },
      {
        "Name": "Material.Name",
        "ShowGeometry": true,
        "Id": "e06bd17e87714e4f8a91781e916a5077",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -672.49977627146677,
        "Y": 699.83946439163628
      },
      {
        "Name": "Element.GetMaterials",
        "ShowGeometry": true,
        "Id": "42e1e616e1ec426f8ff38ca672af03bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1039.1664429381335,
        "Y": 699.83946439163628
      },
      {
        "Name": "Select roofs",
        "ShowGeometry": true,
        "Id": "4d6ea5a7244d47d99862df1e0eb59980",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -355.07086023356885,
        "Y": -1577.1171964735117
      },
      {
        "Name": "Select greenroofs",
        "ShowGeometry": true,
        "Id": "c851868f92e3430b939937d85ac108f4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1685.8331096048009,
        "Y": 824.8394643916323
      },
      {
        "Name": "Are all the roofs modelled as a roof?",
        "ShowGeometry": true,
        "Id": "1d75eece63054a7c9d59401a2729604d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2886.6778289601625,
        "Y": -845.23438585511906
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "37615ada918c44caa06a520bd7f683fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9797.6890793227285,
        "Y": 2992.9355536716653
      },
      {
        "Name": "Verharde oppervlakte",
        "ShowGeometry": true,
        "Id": "52fa2ea186f2439d9178ef1c20b476e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10243.689079322729,
        "Y": 2992.9355536716653
      },
      {
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Id": "9fcc8d7bd54348119049f6e99e9e5c56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7914.4630743660582,
        "Y": 1391.2631872227842
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": true,
        "Id": "c061910be7864df396cc4966b2096113",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7575.7964076993921,
        "Y": 1391.2631872227842
      },
      {
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": true,
        "Id": "ddb4144da4b744aab88196f9c4833590",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7204.4630743660582,
        "Y": 1391.2631872227842
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "f77a1870d2ed47398dd3a7f64b5b8294",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6869.7964076993921,
        "Y": 1391.2631872227842
      },
      {
        "Name": "Not",
        "ShowGeometry": true,
        "Id": "727e6fa8ea4f4ab2a6fdbebf34c00924",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6609.7964076993921,
        "Y": 1425.2631872227842
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "93342e50b1f243baafa797c567e1c359",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6339.1297410327261,
        "Y": 1425.2631872227842
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "9b203f0b9d4d42e89f086fceae32f69b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6079.1297410327261,
        "Y": 1425.2631872227842
      },
      {
        "Name": "Element.Geometry",
        "ShowGeometry": false,
        "Id": "f5f079e894064b4594cfeb449c24de5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3155.7964076993926,
        "Y": 988.26318722278415
      },
      {
        "Name": "Circle.ByCenterPointRadius",
        "ShowGeometry": true,
        "Id": "05865a3e1f7a46259d7b60537a4229de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4707.1297410327261,
        "Y": 1499.7631872227842
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Id": "bf5c91a808184a3586fa5f65f7c6349e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5083.7964076993921,
        "Y": 1465.7631872227842
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "62db45206d894db0897cd094f8913d6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4417.7964076993921,
        "Y": 1596.5906872227843
      },
      {
        "Name": "Geometry.Explode",
        "ShowGeometry": false,
        "Id": "f0c0d8ea8732486dbc1efa60a751ee75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3467.1297410327261,
        "Y": 988.26318722278415
      },
      {
        "Name": "Vector.ZAxis",
        "ShowGeometry": true,
        "Id": "f604130a3ce94950b5565d5dcd07b9f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4707.1297410327261,
        "Y": 1351.2631872227842
      },
      {
        "Name": "Vector.Reverse",
        "ShowGeometry": true,
        "Id": "c50afffd08274ac6a7b0137a273fff12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5083.7964076993921,
        "Y": 1318.2631872227842
      },
      {
        "Name": "Point.Origin",
        "ShowGeometry": false,
        "Id": "7ddfe0f8969940b18cddfa818b2f9406",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4417.7964076993921,
        "Y": 1436.7631872227842
      },
      {
        "Name": "Topology.Faces",
        "ShowGeometry": true,
        "Id": "0cc76d11bbcd4811921afd078db5cc32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3815.1297410327261,
        "Y": 988.26318722278415
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "c168a62a51c2426e81ad1d785b83a3c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4128.4630743660591,
        "Y": 1045.2631872227842
      },
      {
        "Name": "Face.Edges",
        "ShowGeometry": true,
        "Id": "3ab9e4af6c2e47f9b022d3177ac0606e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4417.7964076993921,
        "Y": 1045.2631872227842
      },
      {
        "Name": "Edge.CurveGeometry",
        "ShowGeometry": false,
        "Id": "92951b6843d24d5aac53d8afbc34975e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4707.1297410327261,
        "Y": 1045.2631872227842
      },
      {
        "Name": "Surface.ProjectInputOnto",
        "ShowGeometry": false,
        "Id": "877ec652ad25452abce4801280cdfaef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5422.4630743660591,
        "Y": 1244.2631872227842
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "1e244f6fece94e469c194b451c7fb3c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5422.4630743660591,
        "Y": 1468.2631872227842
      },
      {
        "Name": "List.Map",
        "ShowGeometry": false,
        "Id": "57fce4604caa42d6a5d8134743337378",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5825.1297410327261,
        "Y": 1339.2631872227842
      },
      {
        "Name": "Geometry.Intersect",
        "ShowGeometry": true,
        "Id": "4c7d42e6b984420fbed5411a8c90d6de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8514.4630743660582,
        "Y": 1391.2631872227842
      },
      {
        "Name": "Surface.Area",
        "ShowGeometry": true,
        "Id": "fc0cb06d6fcf4a95b6915733887a94a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8862.4630743660582,
        "Y": 1391.2631872227842
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "a225eabde5d04f22ae475b53917b4f6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9170.4630743660582,
        "Y": 1391.2631872227842
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "37f78455dc49438fa74a5d573c35843d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7575.7964076993921,
        "Y": 1539.8406872227831
      },
      {
        "Name": "Solid.ByUnion",
        "ShowGeometry": true,
        "Id": "e7476bde8e3c48cb8a901a908aa9353c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8224.4630743660582,
        "Y": 1391.2631872227842
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8cf0cfbc63a7476fac3817939367357c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3815.1297410327261,
        "Y": 1136.0906872227843
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "63877fd57d8e4293866c37f8c72c3899",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5083.7964076993921,
        "Y": 1141.2631872227842
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "698e90cfc49444b7a9846cf4bbb7e914",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4707.1297410327261,
        "Y": 1204.0906872227843
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "2b33c828786048fc9aff14186ac8757f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9443.7964076993921,
        "Y": 1391.2631872227842
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f92c6eb0f2db46b89ae2495bba4fc9f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5825.1297410327261,
        "Y": 1528.0906872227843
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1a4865e1db1147f6aafeb76f699aed58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8086.3557459893946,
        "Y": 3041.7630536716651
      },
      {
        "Name": "Lists.RemoveItem",
        "ShowGeometry": true,
        "Id": "7f4c4582ec1b4921b82e5e07333469f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8532.3557459893946,
        "Y": 2935.9355536716653
      },
      {
        "Name": "Projectunits",
        "ShowGeometry": true,
        "Id": "326e5aec0aff4f7f80b4e127e8ff9d67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6644.0962285152491,
        "Y": -706.08098996129866
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "51c6902a5f5448b4ac6f9c48c9e7ec9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1225.7252306318046,
        "Y": -1713.3685197827747
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "9f4d291967f14119a47a9cbeef5a512c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2113.7252306318046,
        "Y": -1675.3685197827747
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "6f0d3ad6c703430bb352bbf08813dcad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1835.0585639651381,
        "Y": -1641.3685197827747
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8906c94eac484024b235eea07f4ba6ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1225.7252306318046,
        "Y": -1535.5410197827746
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bd01f647d11843e5b950d0e0cef46bf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5790.7335121090564,
        "Y": -939.64063469385326
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "3e401b0ccab141a2a614368d957ac84d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9409.4001787757225,
        "Y": -1076.4681346938532
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "062a9e632d2b4b9795c58c5caf16cdba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4672.7335121090564,
        "Y": -1263.6406346938531
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "adcb1be536bf4343a42d0d47d637e175",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5049.4001787757225,
        "Y": -1326.4681346938532
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "85b8a14f57f2415589e45e8defd44d10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3780.7335121090564,
        "Y": -1331.6406346938531
      },
      {
        "Name": "Solid.ByUnion",
        "ShowGeometry": true,
        "Id": "661a5b0d37614a998797b0cde3cd84d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8190.0668454423885,
        "Y": -1076.4681346938532
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c1c386865a1841ca8fe8655342708ac2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7541.4001787757225,
        "Y": -927.89063469385349
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "2a1992b98e8c410bad7644dac7d5f593",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9136.0668454423885,
        "Y": -1076.4681346938532
      },
      {
        "Name": "Surface.Area",
        "ShowGeometry": true,
        "Id": "019576fed2524788ab7bccbaa3221a62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8828.0668454423885,
        "Y": -1076.4681346938532
      },
      {
        "Name": "cm²->m²",
        "ShowGeometry": true,
        "Id": "fc9466c6fe1e421bb70cf12a2fbeecf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8828.0668454423812,
        "Y": -875.89063469385349
      },
      {
        "Name": "Geometry.Intersect",
        "ShowGeometry": true,
        "Id": "08a194cdb23b441689e94c3d4f832aec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8480.0668454423885,
        "Y": -1076.4681346938532
      },
      {
        "Name": "List.Map",
        "ShowGeometry": false,
        "Id": "9dd5842541ff4358b6287c19ff8f6b10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5790.7335121090564,
        "Y": -1128.4681346938532
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "e603826c569640d7bf295926c7f1a4f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5388.0668454423894,
        "Y": -999.46813469385324
      },
      {
        "Name": "Surface.ProjectInputOnto",
        "ShowGeometry": false,
        "Id": "6c99e2fcc0134561a51f2beffae2ee2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5388.0668454423894,
        "Y": -1223.4681346938532
      },
      {
        "Name": "Edge.CurveGeometry",
        "ShowGeometry": false,
        "Id": "2dc0f1bba9b54aa7b5583dc4c5f44c76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4672.7335121090564,
        "Y": -1422.4681346938532
      },
      {
        "Name": "Face.Edges",
        "ShowGeometry": true,
        "Id": "fca19d7d2a7040df9a3fb65ed6d16b7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4383.4001787757225,
        "Y": -1422.4681346938532
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "8c950a85ca454c19b03b8dd974ebc7a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4094.0668454423894,
        "Y": -1422.4681346938532
      },
      {
        "Name": "Topology.Faces",
        "ShowGeometry": true,
        "Id": "96b89b74802e46579ec74c576312b6d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3780.7335121090564,
        "Y": -1479.4681346938532
      },
      {
        "Name": "Point.Origin",
        "ShowGeometry": false,
        "Id": "7f152e36175e490c897f50ee345cc90b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4383.4001787757225,
        "Y": -1030.9681346938532
      },
      {
        "Name": "Vector.Reverse",
        "ShowGeometry": true,
        "Id": "072e0ec17a784e05b9d91e100c1e65aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5049.4001787757225,
        "Y": -1149.4681346938532
      },
      {
        "Name": "Vector.ZAxis",
        "ShowGeometry": true,
        "Id": "23680fe84c9441d5b46446687a561f2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4672.7335121090564,
        "Y": -1116.4681346938532
      },
      {
        "Name": "Geometry.Explode",
        "ShowGeometry": false,
        "Id": "3e67ba69ca2b4f1bb4e5eb658af6e31a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3432.7335121090564,
        "Y": -1479.4681346938532
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3e73646d01e34cfeafe7d9e6fc400543",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4383.4001787757225,
        "Y": -871.14063469385326
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Id": "5938bcf5d50e4b18b5f6a79c9bedb5dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5049.4001787757225,
        "Y": -1001.9681346938532
      },
      {
        "Name": "Circle.ByCenterPointRadius",
        "ShowGeometry": true,
        "Id": "30e5edca58a54c78834a120e89edadb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4672.7335121090564,
        "Y": -967.96813469385324
      },
      {
        "Name": "Element.Geometry",
        "ShowGeometry": false,
        "Id": "3ac77267c0ef436fa29547f245354d8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3121.4001787757229,
        "Y": -1479.4681346938532
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "540c2fae0c4042da9a9a22eef03ebace",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6044.7335121090564,
        "Y": -1042.4681346938532
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "96c97ce7a10e4325b7ffb18c83f55b61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6304.7335121090564,
        "Y": -1042.4681346938532
      },
      {
        "Name": "Not",
        "ShowGeometry": true,
        "Id": "f73a2c05382b4399aef1a4c9ccf15c31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6575.4001787757225,
        "Y": -1042.4681346938532
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "409278a1efa14d588acd031da72378d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6835.4001787757225,
        "Y": -1076.4681346938532
      },
      {
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": true,
        "Id": "b8b2e3225af1491baeb5f2c7d4b30f48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7170.0668454423885,
        "Y": -1076.4681346938532
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": true,
        "Id": "0d83989bc5a5403fb68c941ca662a0bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7541.4001787757225,
        "Y": -1076.4681346938532
      },
      {
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Id": "e982599733844b799fee81da3b7b0387",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7880.0668454423885,
        "Y": -1076.4681346938532
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2ae6d413f3344e87bb03dfa069e858d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5793.94424767226,
        "Y": -1902.7857897661772
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "4571206333e449f18c2ec55b5c2da784",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9412.6109143389258,
        "Y": -2039.6132897661773
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "45a435e2b00440ce8aa06ce45791b0b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4675.94424767226,
        "Y": -2226.7857897661775
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "da41e70d8e774f9cad97a44c765cf5fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5052.6109143389258,
        "Y": -2289.6132897661773
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "334589b8601f4966bd0d3358383126eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3783.9442476722597,
        "Y": -2294.7857897661775
      },
      {
        "Name": "Solid.ByUnion",
        "ShowGeometry": true,
        "Id": "7b339ae99d8d406fa1a8e7069a89591a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8193.2775810055919,
        "Y": -2039.6132897661773
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "07140f14e453448b9e2a0b95fdda0d74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7544.6109143389258,
        "Y": -1891.0357897661768
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "26262e7627ae48bfa0a12e4642cfe2eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9139.2775810055919,
        "Y": -2039.6132897661773
      },
      {
        "Name": "Surface.Area",
        "ShowGeometry": true,
        "Id": "29bc5b4fb7a0485bb7ef7757eaa4f865",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8831.2775810055919,
        "Y": -2039.6132897661773
      },
      {
        "Name": "Geometry.Intersect",
        "ShowGeometry": true,
        "Id": "bda02a427ea44ec9856f3e8f9d54e410",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8483.2775810055919,
        "Y": -2039.6132897661773
      },
      {
        "Name": "List.Map",
        "ShowGeometry": false,
        "Id": "cf674fb1daac44bcae1cef79a1ef8d31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5793.94424767226,
        "Y": -2091.6132897661773
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "9667b68e219c441e96ccd2217ab0892c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5391.2775810055928,
        "Y": -1962.6132897661773
      },
      {
        "Name": "Surface.ProjectInputOnto",
        "ShowGeometry": false,
        "Id": "abb2ae2044cd447e979a0b0b23544146",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5391.2775810055928,
        "Y": -2186.6132897661773
      },
      {
        "Name": "Edge.CurveGeometry",
        "ShowGeometry": false,
        "Id": "0c194da623e04c25a14677fd5e9d7526",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4675.94424767226,
        "Y": -2385.6132897661773
      },
      {
        "Name": "Face.Edges",
        "ShowGeometry": true,
        "Id": "97bd024c07d447ca98c26dbc3429a5ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4386.6109143389258,
        "Y": -2385.6132897661773
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "675c12ae8edc41e3bb9d306616d9497a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4097.2775810055928,
        "Y": -2385.6132897661773
      },
      {
        "Name": "Topology.Faces",
        "ShowGeometry": true,
        "Id": "9bf042e302bb4bfbaad798c1a2219cd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3783.9442476722597,
        "Y": -2442.6132897661773
      },
      {
        "Name": "Point.Origin",
        "ShowGeometry": false,
        "Id": "f2b24b5c3a774390831f177e4ead21b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4386.6109143389258,
        "Y": -1994.1132897661769
      },
      {
        "Name": "Vector.Reverse",
        "ShowGeometry": true,
        "Id": "3ac43c44d9fa4bf4bc71becdbc0e160c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5052.6109143389258,
        "Y": -2112.6132897661773
      },
      {
        "Name": "Vector.ZAxis",
        "ShowGeometry": true,
        "Id": "577168b365d741e082952fbd09fededd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4675.94424767226,
        "Y": -2079.6132897661773
      },
      {
        "Name": "Geometry.Explode",
        "ShowGeometry": false,
        "Id": "dfe53970eef542f294f79f6e69578105",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3435.9442476722597,
        "Y": -2442.6132897661773
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "01b60855e17347259df46bd336fa507c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4386.6109143389258,
        "Y": -1834.2857897661768
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Id": "a1df277721c645638b43b9bb87e073c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5052.6109143389258,
        "Y": -1965.1132897661769
      },
      {
        "Name": "Circle.ByCenterPointRadius",
        "ShowGeometry": true,
        "Id": "27d2b85bb8604481ad2b9de1100c0e01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4675.94424767226,
        "Y": -1931.1132897661769
      },
      {
        "Name": "Element.Geometry",
        "ShowGeometry": false,
        "Id": "541e1147b23c4cd08cefb984ac164050",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3124.6109143389262,
        "Y": -2442.6132897661773
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "dd4e880c798f4948aff948fe78b97d06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6047.94424767226,
        "Y": -2005.6132897661773
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "f930c31fb2c64fc4b2f755b1d28bc6a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6307.94424767226,
        "Y": -2005.6132897661773
      },
      {
        "Name": "Not",
        "ShowGeometry": true,
        "Id": "d13d507c2c8644c3a23144d04890a500",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6578.6109143389258,
        "Y": -2005.6132897661773
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "5089470f6cea496b802dfcc6642f5c01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6838.6109143389258,
        "Y": -2039.6132897661773
      },
      {
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": true,
        "Id": "309c009fbc194c65ba4e04d939f3445e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7173.2775810055919,
        "Y": -2039.6132897661773
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": true,
        "Id": "45580af44937407da2e37cf1ad2e3d7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7544.6109143389258,
        "Y": -2039.6132897661773
      },
      {
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Id": "84e2b736017749f185145ca70b2a47e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7883.2775810055919,
        "Y": -2039.6132897661773
      },
      {
        "Name": "Object.IsNull",
        "ShowGeometry": true,
        "Id": "a073a91e9a9949518550363535c51d17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10124.466912192031,
        "Y": -2101.830104570236
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "47fb4604543e45c38d83577c8d62bb03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10412.466912192031,
        "Y": -2044.830104570236
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "79a2ff2d58004260b1dfe7ef58e8392c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10124.466912192031,
        "Y": -1954.0026045702361
      },
      {
        "Name": "Object.IsNull",
        "ShowGeometry": true,
        "Id": "5c074162c44e4176adb296d10ffbdc6a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10124.848075628623,
        "Y": -1082.2375753037081
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "df262ba11bfc441f8cb0837540a3164c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10412.848075628623,
        "Y": -1025.2375753037081
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "743d6478cf5c4be7b238f4b138fb5abb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10124.848075628623,
        "Y": -934.410075303708
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "bc81e7e7e41943cda5f04d8b911bb486",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1021.3306069086243,
        "Y": 645.8431005450326
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "3e6f6359b29c451d865eec9e435cef32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1909.3306069086243,
        "Y": 683.8431005450326
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "077c7da092114fa180cd3278f4df64a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1630.6639402419537,
        "Y": 717.8431005450326
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "95cb76f6268c4877a70fa04a52f60fa6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1021.3306069086243,
        "Y": 823.6706005450327
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a8838e5c5f0a4305bc4daf6d78f8155a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5846.9917194851168,
        "Y": 502.70591111892918
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "653ca0480d6944aa97dcebf8182b0245",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9465.6583861517829,
        "Y": 365.87841111892925
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5a1924ab316046a099b04456f8c00a25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4728.9917194851168,
        "Y": 178.70591111892924
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "da0c00875ea9476781d6258bd3cb53f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5105.6583861517829,
        "Y": 115.87841111892925
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "37b45c9b9b4443308b7f41a7e0a8fa22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3836.9917194851168,
        "Y": 110.70591111892924
      },
      {
        "Name": "Solid.ByUnion",
        "ShowGeometry": true,
        "Id": "6c19484b9681484cb7afd51ad61908c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8246.325052818449,
        "Y": 365.87841111892925
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a097e25252d04e3ca99b21369a709949",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7597.6583861517829,
        "Y": 534.45591111892406
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "b2f2e54cf3fe48909ead254c456f3e18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9192.325052818449,
        "Y": 365.87841111892925
      },
      {
        "Name": "Surface.Area",
        "ShowGeometry": true,
        "Id": "cc0d8df9dfd74aec8fcd70d98254c4de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8884.325052818449,
        "Y": 365.87841111892925
      },
      {
        "Name": "Geometry.Intersect",
        "ShowGeometry": true,
        "Id": "0b13beb7f9b84d91acf62a898f1c3e34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8536.325052818449,
        "Y": 365.87841111892925
      },
      {
        "Name": "List.Map",
        "ShowGeometry": false,
        "Id": "c298bb8c43c54764ad6caae5df4038a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5846.9917194851168,
        "Y": 313.87841111892925
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "6884647caa8344f8bb157d2c61c2a39e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5444.32505281845,
        "Y": 442.87841111892925
      },
      {
        "Name": "Surface.ProjectInputOnto",
        "ShowGeometry": false,
        "Id": "cbd75e3e9df24297aca7c49bab4c898b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5444.32505281845,
        "Y": 218.87841111892925
      },
      {
        "Name": "Edge.CurveGeometry",
        "ShowGeometry": false,
        "Id": "55c8cfd75b6e4b819f2a88293d081bb9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4728.9917194851168,
        "Y": 19.87841111892925
      },
      {
        "Name": "Face.Edges",
        "ShowGeometry": true,
        "Id": "82cb1f4bd1b542869e29718968de09af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4439.6583861517829,
        "Y": 19.87841111892925
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "a35b00c0502d44e3bfff49e1325cf5af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4150.32505281845,
        "Y": 19.87841111892925
      },
      {
        "Name": "Topology.Faces",
        "ShowGeometry": true,
        "Id": "adc73665b4be4150b584769d0d66204e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3836.9917194851168,
        "Y": -37.12158888107075
      },
      {
        "Name": "Point.Origin",
        "ShowGeometry": false,
        "Id": "a5ce9f3aa3704fd5a327d165cba117a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4439.6583861517829,
        "Y": 411.37841111892925
      },
      {
        "Name": "Vector.Reverse",
        "ShowGeometry": true,
        "Id": "cda17d3520d84a8cbd956e3c3dcc58be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5105.6583861517829,
        "Y": 292.87841111892925
      },
      {
        "Name": "Vector.ZAxis",
        "ShowGeometry": true,
        "Id": "0e2d463301f2492c8c1b023271b32b50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4728.9917194851168,
        "Y": 325.87841111892925
      },
      {
        "Name": "Geometry.Explode",
        "ShowGeometry": false,
        "Id": "78988f717c874d6b9266e52603005c57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3488.9917194851168,
        "Y": -37.12158888107075
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "79459bf95d4d4b518f2545abd7510fdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4439.6583861517829,
        "Y": 571.20591111892918
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Id": "f7298ed236f045d6bb378a78623cd18a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5105.6583861517829,
        "Y": 440.37841111892925
      },
      {
        "Name": "Circle.ByCenterPointRadius",
        "ShowGeometry": true,
        "Id": "1b327adb9182458eb42990a4eea9473e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4728.9917194851168,
        "Y": 474.37841111892925
      },
      {
        "Name": "Element.Geometry",
        "ShowGeometry": false,
        "Id": "ef1284a63a774c2997db71a132897904",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3177.6583861517834,
        "Y": -37.12158888107075
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "22f45339d40e4f87b9ea3b1ed0e90371",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6100.9917194851168,
        "Y": 399.87841111892925
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "f2024bd6aa2d450fbed53992b84dcd5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6360.9917194851168,
        "Y": 399.87841111892925
      },
      {
        "Name": "Not",
        "ShowGeometry": true,
        "Id": "4285a0332abc48b4ba5c7a1e835ae02c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6631.6583861517829,
        "Y": 399.87841111892925
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "26e858b4ba7e4d6ea64f41a2a89b2b42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6891.6583861517829,
        "Y": 365.87841111892925
      },
      {
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": true,
        "Id": "6d6fd018bba244508e5c4d6e7ce3a8e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7226.325052818449,
        "Y": 365.87841111892925
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": true,
        "Id": "f981a8acaf0b49b2aeb39c8e9eab9ee6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7597.6583861517829,
        "Y": 365.87841111892925
      },
      {
        "Name": "Surface.Thicken",
        "ShowGeometry": true,
        "Id": "ca2e83d5fc274e21b0fa6c235845cc61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7936.325052818449,
        "Y": 365.87841111892925
      },
      {
        "Name": "Object.IsNull",
        "ShowGeometry": true,
        "Id": "815a6188b5644b7cba58e52a801b4dc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10115.878942914112,
        "Y": 362.9426777557876
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "174bb0c190994e788a9dd0e6a12edfa5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10403.878942914112,
        "Y": 419.9426777557876
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6e7aa04b2a5e4498b5ad85be59d2b096",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10115.878942914112,
        "Y": 510.77017775578952
      },
      {
        "Name": "Object.IsNull",
        "ShowGeometry": true,
        "Id": "58a36e3a22f54c7e8e81fef0916adfab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10086.71015641373,
        "Y": 1216.5774137131166
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "1e96326069b3482da1ff09bea1167e13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10374.71015641373,
        "Y": 1273.5774137131166
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7a289511861540cc97f5ff0fdb429fd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10086.71015641373,
        "Y": 1364.4049137131185
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "ebe61d722dcd4bfeba7d61c177770072",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2803.7354941704721,
        "Y": -462.46572642226874
      },
      {
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Id": "ab2ad1526302454fa85ca1017780482c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5503.6053531167654,
        "Y": 3344.4003526917736
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "45a68b9a44f04ba49dfcf79a8c975fe8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6391.6053531167672,
        "Y": 3382.4003526917736
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "e0fbd0c358c64a879b4e46d788ef083c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6112.9386864500948,
        "Y": 3416.4003526917736
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e5a4a2329c904a958a0909030c5cb7d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5503.6053531167654,
        "Y": 3522.2278526917735
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "80b9bc1b42194c54826a0a6ed3fe5b6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3670.6906196974514,
        "Y": 3536.7180192630326
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "7294ff3ee36041f680f170d22262ad9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4001.357286364118,
        "Y": 3536.7180192630326
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b5d281bced654fa3a796e82e32ce9407",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9465.5602182414113,
        "Y": 4159.0770194964971
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "56b4b67ab4f54cc6839f14d5db172df2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7824.2268849080783,
        "Y": 3973.0770194964957
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "09b98459e06f49f988b160d26f6052c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8088.8935515747453,
        "Y": 3939.2495194964959
      },
      {
        "Name": "Material.Name",
        "ShowGeometry": true,
        "Id": "2790d1fc7736418ca570d2e42cc295a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8841.5602182414113,
        "Y": 4011.2495194964959
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "6a0db4db42f24781a14e2d75d67eaff3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9149.5602182414113,
        "Y": 4011.2495194964959
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "8cd964bc594740c79f34ca5c346d54e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9465.5602182414113,
        "Y": 3977.2495194964959
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "8d7653809610430981971616cf8036da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9800.22688490808,
        "Y": 4068.2495194964968
      },
      {
        "Name": "Verharde oppervlakte",
        "ShowGeometry": true,
        "Id": "0e2a84ac12404d308b75bd1b04db11b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10246.226884908079,
        "Y": 4068.2495194964959
      },
      {
        "Name": "Lists.RemoveItem",
        "ShowGeometry": true,
        "Id": "60c545288b95414ebe68507b432efc32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8534.8935515747453,
        "Y": 4011.2495194964959
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "57cc0b2764b049d29ee1d2ffb1125d3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8088.8935515747453,
        "Y": 4117.0770194964971
      },
      {
        "Name": "Select greenroofs",
        "ShowGeometry": true,
        "Id": "31cfc9450d964b3f82ce559f100b8d10",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4001.357286364118,
        "Y": 3683.7180192630326
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "24c0bf87ab3e4b1588a78bc0449b066c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4558.0239530307845,
        "Y": 3502.7180192630326
      },
      {
        "Name": "Are all the toposurfaces modelled as toposurfaces?",
        "ShowGeometry": true,
        "Id": "4fa6bd7a39b04958b69450b61dc68c95",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4001.357286364118,
        "Y": 3389.7180192630326
      },
      {
        "Name": "Dictionary.ByKeysValues",
        "ShowGeometry": true,
        "Id": "7582a8d8664d4474a6ae331346ccde6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13042.548756254571,
        "Y": 95.546497246592025
      },
      {
        "Name": "JsonObject.ByDictionary",
        "ShowGeometry": true,
        "Id": "968ddfa902464f8f8900533ed7ec0910",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13399.882089587903,
        "Y": 201.54649724659203
      },
      {
        "Name": "Write.ToJsonFile",
        "ShowGeometry": true,
        "Id": "4f630de8caa3470db7db3b15b7da394b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13761.215422921237,
        "Y": 258.546497246592
      },
      {
        "Name": "Keys",
        "ShowGeometry": true,
        "Id": "00f008b82a264e4fb492d3e61b416f75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12789.215422921237,
        "Y": -62.453502753407975
      },
      {
        "Name": "Values",
        "ShowGeometry": true,
        "Id": "b497a389a0104649b66fa336e1a02042",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12789.215422921237,
        "Y": 287.546497246592
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "e58b59d3f82a460fbd44ec948e1f62f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13399.882089587903,
        "Y": 349.546497246592
      },
      {
        "Name": "File name",
        "ShowGeometry": true,
        "Id": "7792138d16e740a38f84c508143bf97d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13042.548756254571,
        "Y": 566.546497246592
      },
      {
        "Name": "File path",
        "ShowGeometry": true,
        "Id": "b556f2cfeefb42b1b487a0e6882b750e",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13042.548756254571,
        "Y": 418.546497246592
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "e382528f635e4c56bf063d25f4dde68d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13042.548756254571,
        "Y": 271.546497246592
      },
      {
        "Name": "Material Name",
        "ShowGeometry": true,
        "Id": "d9c445610fd141758b8a7e229a1bc4d7",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4555.4293546119134,
        "Y": 3781.4323495290946
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "77a98942b12a498b9f4880ca919c4bb0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -1018.0237475856666
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "1f87ef79d6b94df39a3b956f40cf000d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5269.0496255990683,
        "Y": -984.02374758566657
      },
      {
        "Name": "List.TakeItems",
        "ShowGeometry": true,
        "Id": "7ca1aa9b69274ebcab53cf4160cab07a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5269.0496255990683,
        "Y": -1775.5237475856666
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ee8b4dd947394696bab7f30aa719d5ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5523.0496255990683,
        "Y": -1741.6962475856662
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "11e7b78ac9074915920ca2a9650b7f28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4663.7162922657344,
        "Y": -1303.0237475856666
      },
      {
        "Name": "mm²->m²",
        "ShowGeometry": true,
        "Id": "c433315076854615a928f37374f9fcbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -807.19624758566624
      },
      {
        "Name": "Lists.RemoveItem",
        "ShowGeometry": true,
        "Id": "1e91907d97c243b8bc5295baec145433",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3831.7162922657344,
        "Y": -1600.0237475856666
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "4e31bd0ea2324922a70b984998daf4e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4121.0496255990683,
        "Y": -1495.0237475856666
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "106113315aa64daaae4a388066d09106",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -660.02374758566657
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "cb20022aa0cd446abdab1ecea443b22e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4663.7162922657344,
        "Y": -1514.0237475856666
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "cf4fcae3631c4f17b6e1f7bbe9280d72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -1165.0237475856666
      },
      {
        "Name": "mm²->m²",
        "ShowGeometry": true,
        "Id": "4917c72b2fbb4f57a220e3e5471a280a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -1312.1962475856662
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "9adced3a5ccc4e26ab7b3100c282c7ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -1523.0237475856666
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "09fc8a7fd21f474eaf92cc27d2b47b81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5269.0496255990683,
        "Y": -1489.0237475856666
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "3cb99440a5104730800fc404937b893f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4663.7162922657344,
        "Y": -1726.0237475856666
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "fdfb66d4b5054b28b4ee6771534c32d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -1670.0237475856666
      },
      {
        "Name": "mm²->m²",
        "ShowGeometry": true,
        "Id": "95734593cb0c4aa0a5eea7a19a37c4e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -1817.1962475856662
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "0274c6dbfbc94cc2bda625ba2e57404e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -2028.0237475856666
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "08c898c0afb144fdb330c4e22ee72e3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5269.0496255990683,
        "Y": -1994.0237475856666
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "eaa7bfc5383744cfbfac73a5c647dde4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -2175.0237475856666
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "b296e2ceb7b74fd392f24230d24914e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4663.7162922657344,
        "Y": -1937.0237475856666
      },
      {
        "Name": "mm²->m²",
        "ShowGeometry": true,
        "Id": "635b7b97f21d49f0adc735d097cb57eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -2323.1962475856662
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "3e9f31b374d24e5eb25038a5ef77200a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4979.7162922657344,
        "Y": -2534.0237475856666
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "600ada47e0294ff7bec1bfa02299a497",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5269.0496255990683,
        "Y": -2500.0237475856666
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "c4a4766e60d84c73a183a3e80a20fb61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4374.3829589324023,
        "Y": -1671.0237475856666
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "a4c32895960a45938b2ae9fa4ca4c04c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4121.0496255990683,
        "Y": -1671.0237475856666
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "2f69893309df43859944fc088ea7a7af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": 1123.0205365243787
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "280322d978f54d7798c007402667e3e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5283.1521689598731,
        "Y": 1157.0205365243787
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "b335b28f59cc4d059655269dd8886608",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4677.8188356265391,
        "Y": 838.02053652437871
      },
      {
        "Name": "mm²->m²",
        "ShowGeometry": true,
        "Id": "4a39d927ba2b4c4ba146a592e6995ae0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": 1333.8480365243786
      },
      {
        "Name": "Lists.RemoveItem",
        "ShowGeometry": true,
        "Id": "72204440fc2841b4afd6fa88f4a6e0cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3845.8188356265391,
        "Y": 541.02053652437871
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "0ef404b9e41d42cd9b67764b3f150962",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4135.1521689598731,
        "Y": 646.02053652437871
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "df476b871cc04f3f868af9cf89e9be96",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": 1481.0205365243787
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "073779c1557a40cc94158cf84ed3bbe5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4677.8188356265391,
        "Y": 627.02053652437871
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "e482124a25c146a68381fa5fd72e8a8f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": 976.02053652437871
      },
      {
        "Name": "mm²->m²",
        "ShowGeometry": true,
        "Id": "e61e2b50e2824db9a8b70856c109ea80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": 828.84803652437859
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "2ffb7782f0ec4bdab4747a813c89af87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": 618.02053652437871
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "d13081efc9b64b98bc7dd0bc936a635e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5283.1521689598731,
        "Y": 652.02053652437871
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "a8e00c7413844051a509533b8922969f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4677.8188356265391,
        "Y": 415.02053652437917
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "00416bf9716d4dfeb8b6714d1de5a879",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": 471.02053652437871
      },
      {
        "Name": "mm²->m²",
        "ShowGeometry": true,
        "Id": "f56b021b359449fcad1e8734615073a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": 323.84803652437859
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "feb227bc9e0548ac8d69b5d0ac1b20c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": 113.02053652437917
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "093de72f0f634006b31bca9334d274f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5283.1521689598731,
        "Y": 147.02053652437917
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "e4ac0b3c7102447bbaaabf3195134612",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": -33.979463475620832
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "3b82c29d34644b68b0872fdf15a85490",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4677.8188356265391,
        "Y": 204.02053652437917
      },
      {
        "Name": "mm²->m²",
        "ShowGeometry": true,
        "Id": "aa88e42ff8d14a14a13dc7c4c4706fac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": -182.15196347562141
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "0538550498b945deb7495ecb350cbbdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4993.8188356265391,
        "Y": -392.97946347562083
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "c6f867770cc14f5e9804d9bb88bffcfe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5283.1521689598731,
        "Y": -358.97946347562083
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "2b8ccfd9b60a4807b1f777ca3b1facec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4388.485502293207,
        "Y": 470.02053652437871
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "e1f6b1a7a5c645a2950e632109c12600",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4135.1521689598731,
        "Y": 470.02053652437871
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "77ff1cef410a4f4d9280df0589eed1e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5537.1521689598731,
        "Y": 399.34803652437859
      },
      {
        "Name": "List.TakeItems",
        "ShowGeometry": true,
        "Id": "a53dab9061dd4951b212da2bf5d1faee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5283.1521689598731,
        "Y": 365.52053652437917
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "72e29d54c93a4c6c9312776f2d34d891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10580.226884908079,
        "Y": 4068.2495194964963
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "acc9cd555b55408587a287ddc41ae39a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10577.689079322729,
        "Y": 2992.9355536716653
      },
      {
        "Name": "-",
        "ShowGeometry": true,
        "Id": "55fc32880d8244b398f1b38aa64387c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12075.113392048797,
        "Y": 1237.6662745609356
      },
      {
        "Name": "-",
        "ShowGeometry": true,
        "Id": "5e47afe0ea8a4f62950f67eba6cc8196",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12095.955181691892,
        "Y": 954.71670126340427
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "2c68806ec2574632af49e6d337160241",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11810.077153112506,
        "Y": 1501.4877664821543
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "370351abe19e478c9cc180c9f219dc74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11801.780058715463,
        "Y": 1271.6662745609356
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "525c1baec2574b77adeabd4629860c5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11822.621848358558,
        "Y": 988.71670126340427
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ef8cf422548e4c5aaf5afd1132569597",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11547.780058715463,
        "Y": 1305.4937745609357
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d1c222b05f47420981c09c910a76305d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11568.621848358558,
        "Y": 1022.5442012634044
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "58c87b568b30449981b85cc2dd508a4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11827.239311677342,
        "Y": 777.25683937850658
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "e4f4741ba3cd4ec2bc9021bb85066b37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11814.536512734054,
        "Y": -751.77938012611185
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "3280b8218dbf4c009c17d61c58b6f723",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11814.648983153953,
        "Y": -619.06951771262175
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "7e955ceaca274fe9938c95a087849005",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11815.793350065855,
        "Y": -473.40704018066162
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "066e12f9ab9b4b628929b51ecce313fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11814.536866745953,
        "Y": -44.408336926181619
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "1379ab0534e740dca612ef7a8e7f8706",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11813.853967229054,
        "Y": 95.766358667418444
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "576bb31de6174743a004d67a9e7f532e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11817.007012811753,
        "Y": -330.96816432012156
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "3accd1b0fce1455fabd30ef1cbeeeaf0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11816.130582187454,
        "Y": -189.47319771017146
      }
    ],
    "Annotations": [
      {
        "Id": "5ba7c9ebee05498a92ec661bb74fcf48",
        "Title": "Location Output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "577fc7717f3b44d29ec4596a523c595d",
          "fe6e75b7adbe42009b1faeca30858b9e"
        ],
        "HasNestedGroups": false,
        "Left": 10024.844396574546,
        "Top": 2045.5177294292273,
        "Width": 492.66666666666606,
        "Height": 204.99999999999977,
        "FontSize": 36.0,
        "InitialTop": 2118.8510627625606,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "3fce21f0b2f24cbda715e3d6602c290c",
        "Title": "Projected Area Topography - New",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "390297c8de9041b08907be67c477093a",
          "ae8ec57818c84b94a9d3d2b64aff03a8",
          "11ac8fb7a2944d17a278df564d6de1c8",
          "0d6e5b1d515e4754ad84d045c712a222",
          "cddfd8fab81046b898e8238f52c24871",
          "44ebe3e859c945d082ac310733460747",
          "37615ada918c44caa06a520bd7f683fc",
          "52fa2ea186f2439d9178ef1c20b476e5",
          "7f4c4582ec1b4921b82e5e07333469f3",
          "1a4865e1db1147f6aafeb76f699aed58",
          "acc9cd555b55408587a287ddc41ae39a"
        ],
        "HasNestedGroups": false,
        "Left": 7811.6890793227276,
        "Top": 2790.6022203383318,
        "Width": 2949.3333333333348,
        "Height": 424.82749999999987,
        "FontSize": 36.0,
        "InitialTop": 2863.9355536716653,
        "InitialHeight": 364.82749999999987,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "ac5f7f105ceb4357bb6b44404a112f37",
        "Title": "Select roofs",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c6d15c482e024abe9c25892dd5c88a2a",
          "074443f980a946579a49c7bb9032874f",
          "4d6ea5a7244d47d99862df1e0eb59980",
          "9c2d2226996d4c629dbe86d3fad39fb0"
        ],
        "HasNestedGroups": false,
        "Left": -695.73752690023582,
        "Top": -1831.450529806845,
        "Width": 1064.6666666666695,
        "Height": 404.66666666666652,
        "FontSize": 36.0,
        "InitialTop": -1758.1171964735117,
        "InitialHeight": 326.0,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0a90c9f887a6419f88505d00324b8678",
        "Title": "Select green roofs",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c25c284d6a0e43bc84f6f00dec305491",
          "00c0a093841f4c679a14fe4a22571519",
          "a96c24eb62d541d5844715b45076abdf",
          "ab368bf2b158435bad3f8c695ef2a0bd",
          "c851868f92e3430b939937d85ac108f4",
          "732182c5c6354b13a1164c2bc6f4db64",
          "a220189d39ca4093b5b068a0b886e907",
          "8c66e16b355a499487ead985e33886d2",
          "e06bd17e87714e4f8a91781e916a5077",
          "42e1e616e1ec426f8ff38ca672af03bc"
        ],
        "HasNestedGroups": false,
        "Left": -2026.499776271467,
        "Top": 603.50613105830291,
        "Width": 2508.0000000000018,
        "Height": 375.99999999999613,
        "FontSize": 36.0,
        "InitialTop": 676.83946439163628,
        "InitialHeight": 315.99999999999613,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3f0220ea04db45dc9904a15038c8efd4",
        "Title": "Projected Roof Area - Existing green roof area",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f92c6eb0f2db46b89ae2495bba4fc9f2",
          "2b33c828786048fc9aff14186ac8757f",
          "698e90cfc49444b7a9846cf4bbb7e914",
          "63877fd57d8e4293866c37f8c72c3899",
          "8cf0cfbc63a7476fac3817939367357c",
          "e7476bde8e3c48cb8a901a908aa9353c",
          "37f78455dc49438fa74a5d573c35843d",
          "a225eabde5d04f22ae475b53917b4f6e",
          "fc0cb06d6fcf4a95b6915733887a94a8",
          "4c7d42e6b984420fbed5411a8c90d6de",
          "57fce4604caa42d6a5d8134743337378",
          "1e244f6fece94e469c194b451c7fb3c7",
          "877ec652ad25452abce4801280cdfaef",
          "92951b6843d24d5aac53d8afbc34975e",
          "3ab9e4af6c2e47f9b022d3177ac0606e",
          "c168a62a51c2426e81ad1d785b83a3c2",
          "0cc76d11bbcd4811921afd078db5cc32",
          "7ddfe0f8969940b18cddfa818b2f9406",
          "c50afffd08274ac6a7b0137a273fff12",
          "f604130a3ce94950b5565d5dcd07b9f8",
          "f0c0d8ea8732486dbc1efa60a751ee75",
          "62db45206d894db0897cd094f8913d6e",
          "bf5c91a808184a3586fa5f65f7c6349e",
          "05865a3e1f7a46259d7b60537a4229de",
          "f5f079e894064b4594cfeb449c24de5e",
          "9b203f0b9d4d42e89f086fceae32f69b",
          "93342e50b1f243baafa797c567e1c359",
          "727e6fa8ea4f4ab2a6fdbebf34c00924",
          "f77a1870d2ed47398dd3a7f64b5b8294",
          "ddb4144da4b744aab88196f9c4833590",
          "c061910be7864df396cc4966b2096113",
          "9fcc8d7bd54348119049f6e99e9e5c56"
        ],
        "HasNestedGroups": false,
        "Left": 3145.7964076993926,
        "Top": 914.92985388945078,
        "Width": 6512.0,
        "Height": 813.32750000000021,
        "FontSize": 36.0,
        "InitialTop": 988.26318722278415,
        "InitialHeight": 753.3275000000001,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "e724fee08f4a4bbda8bcc7fd59119e21",
        "Title": "Projected Roof Area - Existing total roof area",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bd01f647d11843e5b950d0e0cef46bf1",
          "3e401b0ccab141a2a614368d957ac84d",
          "062a9e632d2b4b9795c58c5caf16cdba",
          "adcb1be536bf4343a42d0d47d637e175",
          "85b8a14f57f2415589e45e8defd44d10",
          "661a5b0d37614a998797b0cde3cd84d7",
          "c1c386865a1841ca8fe8655342708ac2",
          "2a1992b98e8c410bad7644dac7d5f593",
          "019576fed2524788ab7bccbaa3221a62",
          "fc9466c6fe1e421bb70cf12a2fbeecf1",
          "08a194cdb23b441689e94c3d4f832aec",
          "9dd5842541ff4358b6287c19ff8f6b10",
          "e603826c569640d7bf295926c7f1a4f8",
          "6c99e2fcc0134561a51f2beffae2ee2a",
          "2dc0f1bba9b54aa7b5583dc4c5f44c76",
          "fca19d7d2a7040df9a3fb65ed6d16b7a",
          "8c950a85ca454c19b03b8dd974ebc7a7",
          "96b89b74802e46579ec74c576312b6d8",
          "7f152e36175e490c897f50ee345cc90b",
          "072e0ec17a784e05b9d91e100c1e65aa",
          "23680fe84c9441d5b46446687a561f2a",
          "3e67ba69ca2b4f1bb4e5eb658af6e31a",
          "3e73646d01e34cfeafe7d9e6fc400543",
          "5938bcf5d50e4b18b5f6a79c9bedb5dc",
          "30e5edca58a54c78834a120e89edadb7",
          "3ac77267c0ef436fa29547f245354d8b",
          "540c2fae0c4042da9a9a22eef03ebace",
          "96c97ce7a10e4325b7ffb18c83f55b61",
          "f73a2c05382b4399aef1a4c9ccf15c31",
          "409278a1efa14d588acd031da72378d1",
          "b8b2e3225af1491baeb5f2c7d4b30f48",
          "0d83989bc5a5403fb68c941ca662a0bc",
          "e982599733844b799fee81da3b7b0387"
        ],
        "HasNestedGroups": false,
        "Left": 3111.4001787757229,
        "Top": -1552.8014680271865,
        "Width": 6512.0,
        "Height": 813.32749999999987,
        "FontSize": 36.0,
        "InitialTop": -1479.4681346938532,
        "InitialHeight": 753.3275,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "e795602fc52e4dee9a27f3f35b6b8d2e",
        "Title": "Projected Roof Area - New total roof area",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2ae6d413f3344e87bb03dfa069e858d9",
          "4571206333e449f18c2ec55b5c2da784",
          "45a435e2b00440ce8aa06ce45791b0b5",
          "da41e70d8e774f9cad97a44c765cf5fe",
          "334589b8601f4966bd0d3358383126eb",
          "7b339ae99d8d406fa1a8e7069a89591a",
          "07140f14e453448b9e2a0b95fdda0d74",
          "26262e7627ae48bfa0a12e4642cfe2eb",
          "29bc5b4fb7a0485bb7ef7757eaa4f865",
          "bda02a427ea44ec9856f3e8f9d54e410",
          "cf674fb1daac44bcae1cef79a1ef8d31",
          "9667b68e219c441e96ccd2217ab0892c",
          "abb2ae2044cd447e979a0b0b23544146",
          "0c194da623e04c25a14677fd5e9d7526",
          "97bd024c07d447ca98c26dbc3429a5ad",
          "675c12ae8edc41e3bb9d306616d9497a",
          "9bf042e302bb4bfbaad798c1a2219cd3",
          "f2b24b5c3a774390831f177e4ead21b6",
          "3ac43c44d9fa4bf4bc71becdbc0e160c",
          "577168b365d741e082952fbd09fededd",
          "dfe53970eef542f294f79f6e69578105",
          "01b60855e17347259df46bd336fa507c",
          "a1df277721c645638b43b9bb87e073c4",
          "27d2b85bb8604481ad2b9de1100c0e01",
          "541e1147b23c4cd08cefb984ac164050",
          "dd4e880c798f4948aff948fe78b97d06",
          "f930c31fb2c64fc4b2f755b1d28bc6a7",
          "d13d507c2c8644c3a23144d04890a500",
          "5089470f6cea496b802dfcc6642f5c01",
          "309c009fbc194c65ba4e04d939f3445e",
          "45580af44937407da2e37cf1ad2e3d7e",
          "84e2b736017749f185145ca70b2a47e8"
        ],
        "HasNestedGroups": false,
        "Left": 3114.6109143389262,
        "Top": -2515.9466230995108,
        "Width": 6512.0,
        "Height": 813.32750000000078,
        "FontSize": 36.0,
        "InitialTop": -2442.6132897661773,
        "InitialHeight": 753.32750000000055,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "ee5ee3453f9e491993e37f4803497816",
        "Title": "If null, return 0",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a073a91e9a9949518550363535c51d17",
          "47fb4604543e45c38d83577c8d62bb03",
          "79a2ff2d58004260b1dfe7ef58e8392c"
        ],
        "HasNestedGroups": false,
        "Left": 10114.466912192031,
        "Top": -2175.1634379035695,
        "Width": 497.33333333333394,
        "Height": 352.8275000000001,
        "FontSize": 36.0,
        "InitialTop": -2101.830104570236,
        "InitialHeight": 292.82749999999987,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e39e0573ddb84f729b62818a15713cea",
        "Title": "If null, return 0",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5c074162c44e4176adb296d10ffbdc6a",
          "df262ba11bfc441f8cb0837540a3164c",
          "743d6478cf5c4be7b238f4b138fb5abb"
        ],
        "HasNestedGroups": false,
        "Left": 10114.848075628623,
        "Top": -1155.5709086370414,
        "Width": 497.33333333333394,
        "Height": 352.8275,
        "FontSize": 36.0,
        "InitialTop": -1082.2375753037081,
        "InitialHeight": 292.8275000000001,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dadfaa2168854dce955129d07b2ff231",
        "Title": "Filter existing vs new",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "51c6902a5f5448b4ac6f9c48c9e7ec9d",
          "9f4d291967f14119a47a9cbeef5a512c",
          "6f0d3ad6c703430bb352bbf08813dcad",
          "8906c94eac484024b235eea07f4ba6ba"
        ],
        "HasNestedGroups": false,
        "Left": 1215.7252306318046,
        "Top": -1786.7018531161079,
        "Width": 1142.6666666666665,
        "Height": 382.8275000000001,
        "FontSize": 36.0,
        "InitialTop": -1713.3685197827747,
        "InitialHeight": 322.8275000000001,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "16505d91b29a44259c51b8538a9dcf44",
        "Title": "Filter existing vs new",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bc81e7e7e41943cda5f04d8b911bb486",
          "3e6f6359b29c451d865eec9e435cef32",
          "077c7da092114fa180cd3278f4df64a4",
          "95cb76f6268c4877a70fa04a52f60fa6"
        ],
        "HasNestedGroups": false,
        "Left": 1011.3306069086243,
        "Top": 572.50976721169923,
        "Width": 1142.6666666666665,
        "Height": 382.8275000000001,
        "FontSize": 36.0,
        "InitialTop": 645.8431005450326,
        "InitialHeight": 322.8275000000001,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b21445efb9064a1fb5324cfa661acb9b",
        "Title": "Projected Roof Area - New green roof area",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a8838e5c5f0a4305bc4daf6d78f8155a",
          "653ca0480d6944aa97dcebf8182b0245",
          "5a1924ab316046a099b04456f8c00a25",
          "da0c00875ea9476781d6258bd3cb53f4",
          "37b45c9b9b4443308b7f41a7e0a8fa22",
          "6c19484b9681484cb7afd51ad61908c6",
          "a097e25252d04e3ca99b21369a709949",
          "b2f2e54cf3fe48909ead254c456f3e18",
          "cc0d8df9dfd74aec8fcd70d98254c4de",
          "0b13beb7f9b84d91acf62a898f1c3e34",
          "c298bb8c43c54764ad6caae5df4038a6",
          "6884647caa8344f8bb157d2c61c2a39e",
          "cbd75e3e9df24297aca7c49bab4c898b",
          "55c8cfd75b6e4b819f2a88293d081bb9",
          "82cb1f4bd1b542869e29718968de09af",
          "a35b00c0502d44e3bfff49e1325cf5af",
          "adc73665b4be4150b584769d0d66204e",
          "a5ce9f3aa3704fd5a327d165cba117a2",
          "cda17d3520d84a8cbd956e3c3dcc58be",
          "0e2d463301f2492c8c1b023271b32b50",
          "78988f717c874d6b9266e52603005c57",
          "79459bf95d4d4b518f2545abd7510fdc",
          "f7298ed236f045d6bb378a78623cd18a",
          "1b327adb9182458eb42990a4eea9473e",
          "ef1284a63a774c2997db71a132897904",
          "22f45339d40e4f87b9ea3b1ed0e90371",
          "f2024bd6aa2d450fbed53992b84dcd5d",
          "4285a0332abc48b4ba5c7a1e835ae02c",
          "26e858b4ba7e4d6ea64f41a2a89b2b42",
          "6d6fd018bba244508e5c4d6e7ce3a8e3",
          "f981a8acaf0b49b2aeb39c8e9eab9ee6",
          "ca2e83d5fc274e21b0fa6c235845cc61"
        ],
        "HasNestedGroups": false,
        "Left": 3167.6583861517834,
        "Top": -110.45492221440409,
        "Width": 6512.0,
        "Height": 813.32749999999987,
        "FontSize": 36.0,
        "InitialTop": -37.12158888107075,
        "InitialHeight": 753.32749999999987,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "c89d06eafc4243e9a62e3f7a1c45bf87",
        "Title": "If null, return 0",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "815a6188b5644b7cba58e52a801b4dc6",
          "174bb0c190994e788a9dd0e6a12edfa5",
          "6e7aa04b2a5e4498b5ad85be59d2b096"
        ],
        "HasNestedGroups": false,
        "Left": 10105.878942914112,
        "Top": 289.60934442245428,
        "Width": 497.33333333333394,
        "Height": 352.82750000000186,
        "FontSize": 36.0,
        "InitialTop": 362.9426777557876,
        "InitialHeight": 292.82750000000192,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e4d47991cec04d61b9be229a4f621525",
        "Title": "If null, return 0",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "58a36e3a22f54c7e8e81fef0916adfab",
          "1e96326069b3482da1ff09bea1167e13",
          "7a289511861540cc97f5ff0fdb429fd8"
        ],
        "HasNestedGroups": false,
        "Left": 10076.71015641373,
        "Top": 1143.2440803797833,
        "Width": 497.33333333333394,
        "Height": 352.82750000000192,
        "FontSize": 36.0,
        "InitialTop": 1216.5774137131166,
        "InitialHeight": 292.82750000000192,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7fee27179b78459d8504e6ffe04f963a",
        "Title": "Filter existing vs new",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ab2ad1526302454fa85ca1017780482c",
          "45a68b9a44f04ba49dfcf79a8c975fe8",
          "e0fbd0c358c64a879b4e46d788ef083c",
          "e5a4a2329c904a958a0909030c5cb7d5"
        ],
        "HasNestedGroups": false,
        "Left": 5493.6053531167654,
        "Top": 3271.06701935844,
        "Width": 1142.6666666666688,
        "Height": 382.82749999999987,
        "FontSize": 36.0,
        "InitialTop": 3344.4003526917736,
        "InitialHeight": 322.82749999999987,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0bf1d7119e554c228fc1cc078f3533c6",
        "Title": "Projected Area Topography - Existing",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b5d281bced654fa3a796e82e32ce9407",
          "56b4b67ab4f54cc6839f14d5db172df2",
          "09b98459e06f49f988b160d26f6052c3",
          "2790d1fc7736418ca570d2e42cc295a4",
          "6a0db4db42f24781a14e2d75d67eaff3",
          "8cd964bc594740c79f34ca5c346d54e0",
          "8d7653809610430981971616cf8036da",
          "0e2a84ac12404d308b75bd1b04db11b3",
          "60c545288b95414ebe68507b432efc32",
          "57cc0b2764b049d29ee1d2ffb1125d3c",
          "72e29d54c93a4c6c9312776f2d34d891"
        ],
        "HasNestedGroups": false,
        "Left": 7814.2268849080783,
        "Top": 3865.9161861631624,
        "Width": 2949.3333333333348,
        "Height": 424.82750000000169,
        "FontSize": 36.0,
        "InitialTop": 3939.2495194964959,
        "InitialHeight": 364.82750000000124,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2a14c5352d494620ba8fc9b5b4044ca4",
        "Title": "Get toposurfaces",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "80b9bc1b42194c54826a0a6ed3fe5b6b",
          "7294ff3ee36041f680f170d22262ad9d",
          "31cfc9450d964b3f82ce559f100b8d10",
          "24c0bf87ab3e4b1588a78bc0449b066c",
          "4fa6bd7a39b04958b69450b61dc68c95",
          "d9c445610fd141758b8a7e229a1bc4d7"
        ],
        "HasNestedGroups": false,
        "Left": 3660.6906196974514,
        "Top": 3316.3846859296991,
        "Width": 1096.6666666666661,
        "Height": 596.714330266062,
        "FontSize": 36.0,
        "InitialTop": 3389.7180192630326,
        "InitialHeight": 536.714330266062,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "5baad81817a7458a81ba5c479e583485",
        "Title": "Export to JSON",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7582a8d8664d4474a6ae331346ccde6b",
          "968ddfa902464f8f8900533ed7ec0910",
          "4f630de8caa3470db7db3b15b7da394b",
          "00f008b82a264e4fb492d3e61b416f75",
          "b497a389a0104649b66fa336e1a02042",
          "e58b59d3f82a460fbd44ec948e1f62f5",
          "7792138d16e740a38f84c508143bf97d",
          "b556f2cfeefb42b1b487a0e6882b750e",
          "e382528f635e4c56bf063d25f4dde68d"
        ],
        "HasNestedGroups": false,
        "Left": 12779.215422921237,
        "Top": -135.78683608674129,
        "Width": 1230.6666666666661,
        "Height": 834.0,
        "FontSize": 36.0,
        "InitialTop": -62.453502753407975,
        "InitialHeight": 884.0,
        "TextblockHeight": 63.3333333333333,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "8fb62cdf1d5148f68a1922eb5dc8b6a4",
        "Title": "Length",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "77a98942b12a498b9f4880ca919c4bb0",
          "1f87ef79d6b94df39a3b956f40cf000d",
          "11e7b78ac9074915920ca2a9650b7f28",
          "c433315076854615a928f37374f9fcbf",
          "1e91907d97c243b8bc5295baec145433",
          "4e31bd0ea2324922a70b984998daf4e1",
          "106113315aa64daaae4a388066d09106",
          "cb20022aa0cd446abdab1ecea443b22e",
          "cf4fcae3631c4f17b6e1f7bbe9280d72",
          "4917c72b2fbb4f57a220e3e5471a280a",
          "9adced3a5ccc4e26ab7b3100c282c7ae",
          "09fc8a7fd21f474eaf92cc27d2b47b81",
          "3cb99440a5104730800fc404937b893f",
          "fdfb66d4b5054b28b4ee6771534c32d0",
          "95734593cb0c4aa0a5eea7a19a37c4e0",
          "0274c6dbfbc94cc2bda625ba2e57404e",
          "08c898c0afb144fdb330c4e22ee72e3c",
          "eaa7bfc5383744cfbfac73a5c647dde4",
          "b296e2ceb7b74fd392f24230d24914e9",
          "635b7b97f21d49f0adc735d097cb57eb",
          "3e9f31b374d24e5eb25038a5ef77200a",
          "600ada47e0294ff7bec1bfa02299a497",
          "c4a4766e60d84c73a183a3e80a20fb61",
          "a4c32895960a45938b2ae9fa4ca4c04c",
          "7ca1aa9b69274ebcab53cf4160cab07a",
          "ee8b4dd947394696bab7f30aa719d5ef"
        ],
        "HasNestedGroups": false,
        "Left": -5533.0496255990683,
        "Top": -2607.357080919,
        "Width": 1918.0000000000005,
        "Height": 2079.0,
        "FontSize": 36.0,
        "InitialTop": -2534.0237475856666,
        "InitialHeight": 2019.0,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7bc4a1ebb4d94d288cebea73bf84ac68",
        "Title": "Area",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2f69893309df43859944fc088ea7a7af",
          "280322d978f54d7798c007402667e3e8",
          "b335b28f59cc4d059655269dd8886608",
          "4a39d927ba2b4c4ba146a592e6995ae0",
          "72204440fc2841b4afd6fa88f4a6e0cd",
          "0ef404b9e41d42cd9b67764b3f150962",
          "df476b871cc04f3f868af9cf89e9be96",
          "073779c1557a40cc94158cf84ed3bbe5",
          "e482124a25c146a68381fa5fd72e8a8f",
          "e61e2b50e2824db9a8b70856c109ea80",
          "2ffb7782f0ec4bdab4747a813c89af87",
          "d13081efc9b64b98bc7dd0bc936a635e",
          "a8e00c7413844051a509533b8922969f",
          "00416bf9716d4dfeb8b6714d1de5a879",
          "f56b021b359449fcad1e8734615073a7",
          "feb227bc9e0548ac8d69b5d0ac1b20c2",
          "093de72f0f634006b31bca9334d274f7",
          "e4ac0b3c7102447bbaaabf3195134612",
          "3b82c29d34644b68b0872fdf15a85490",
          "aa88e42ff8d14a14a13dc7c4c4706fac",
          "0538550498b945deb7495ecb350cbbdc",
          "c6f867770cc14f5e9804d9bb88bffcfe",
          "2b8ccfd9b60a4807b1f777ca3b1facec",
          "e1f6b1a7a5c645a2950e632109c12600",
          "a53dab9061dd4951b212da2bf5d1faee",
          "77ff1cef410a4f4d9280df0589eed1e3"
        ],
        "HasNestedGroups": false,
        "Left": -5547.1521689598731,
        "Top": -466.31279680895415,
        "Width": 1918.0000000000005,
        "Height": 2078.9999999999995,
        "FontSize": 36.0,
        "InitialTop": -392.97946347562083,
        "InitialHeight": 2018.9999999999995,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "fe680a594633448e83d23287889dd865",
        "Title": "ID",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3accd1b0fce1455fabd30ef1cbeeeaf0",
          "576bb31de6174743a004d67a9e7f532e",
          "1379ab0534e740dca612ef7a8e7f8706",
          "066e12f9ab9b4b628929b51ecce313fd",
          "7e955ceaca274fe9938c95a087849005",
          "3280b8218dbf4c009c17d61c58b6f723",
          "e4f4741ba3cd4ec2bc9021bb85066b37"
        ],
        "HasNestedGroups": false,
        "Left": 11803.853967229054,
        "Top": -825.11271345944522,
        "Width": 165.81971224936569,
        "Height": 1052.5457387935303,
        "FontSize": 36.0,
        "InitialTop": -751.77938012611185,
        "InitialHeight": 992.54573879353029,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0e276235c3cf493b920fd590eab44cf6",
        "Title": "Value calculations",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "55fc32880d8244b398f1b38aa64387c4",
          "5e47afe0ea8a4f62950f67eba6cc8196",
          "2c68806ec2574632af49e6d337160241",
          "370351abe19e478c9cc180c9f219dc74",
          "525c1baec2574b77adeabd4629860c5d",
          "ef8cf422548e4c5aaf5afd1132569597",
          "d1c222b05f47420981c09c910a76305d",
          "58c87b568b30449981b85cc2dd508a4a"
        ],
        "HasNestedGroups": false,
        "Left": 11537.780058715463,
        "Top": 703.92350604517321,
        "Width": 746.84178964309467,
        "Height": 958.564260436981,
        "FontSize": 36.0,
        "InitialTop": 777.25683937850658,
        "InitialHeight": 869.23092710364767,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFC1D676"
      }
    ],
    "X": -1025.6572561990295,
    "Y": 358.82967300499064,
    "Zoom": 0.13710049967073429
  }
}